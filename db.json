{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/head.jpg","path":"images/head.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"dc0f50bf546bd330fafe2279f40cfb5b734522b6","modified":1559295806339},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1559295806345},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1559295806346},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1559295806346},{"_id":"themes/next/_config.yml","hash":"9b58502c9375c33545a8f49314e05afe450754d0","modified":1559295918968},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1559295806346},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1559295806346},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1559295806350},{"_id":"source/_posts/Flypy一键部署.md","hash":"09e038f3e022ae08d8f2859564e68b7dce3364fb","modified":1559295806339},{"_id":"source/_posts/Linux控制电脑风扇.md","hash":"acbf010c6097c5eb5acdc601564e0b14b92c818f","modified":1559295806339},{"_id":"source/_posts/利用Docker搭建Samba服务.md","hash":"480c4306b1c5ffa857ebb32c1c42c3ae1db1b9ff","modified":1559295806339},{"_id":"source/_posts/玩HASS一年的故事 (一).md","hash":"533e9a4ceaab7c49808e5fa32936f1d0280d1faa","modified":1559295806339},{"_id":"source/_posts/路由器通过锐捷认证.md","hash":"1cb62122ea52798f076d028d99b434137d8eb963","modified":1559295806339},{"_id":"source/_posts/软件测试复习.md","hash":"a8ce2d8266f18cf7824e49663ec19247718eb35e","modified":1559295806340},{"_id":"source/categories/index.md","hash":"26ef7adb8247e27cc014641fcf3fcdf522e7723e","modified":1559295806340},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1559295806346},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1559295806346},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1559295806346},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1559295806346},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1559295806346},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1559295806346},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1559295806346},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1559295806346},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1559295806346},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1559295806346},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1559295806346},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1559295806346},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1559295806346},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1559295806346},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1559295806347},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1559295806347},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1559295806347},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1559295806349},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1559295806350},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1559295806350},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1559295806350},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1559295806350},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1559295806350},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1559295806350},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1559295806350},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1559295806350},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1559295806372},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1559295806372},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1559295806372},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806355},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1559295806347},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1559295806347},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1559295806347},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1559295806347},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1559295806347},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1559295806347},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1559295806347},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1559295806347},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1559295806347},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1559295806347},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1559295806347},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1559295806347},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1559295806347},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1559295806347},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1559295806347},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1559295806348},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1559295806348},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1559295806348},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1559295806349},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1559295806349},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1559295806349},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1559295806349},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1559295806349},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1559295806349},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1559295806349},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1559295806350},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1559295806350},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1559295806350},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1559295806350},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1559295806350},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1559295806350},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1559295806350},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1559295806350},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1559295806351},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1559295806355},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1559295806355},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1559295806355},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1559295806355},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1559295806355},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1559295806355},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1559295806355},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1559295806355},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1559295806355},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1559295806355},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1559295806356},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1559295806356},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1559295806356},{"_id":"themes/next/source/images/head.jpg","hash":"663bb189beefc2e711bde4f17a8ca7e30e435e5c","modified":1559295806356},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1559295806356},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1559295806356},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1559295806356},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1559295806356},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1559295806356},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1559295806356},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806348},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806348},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806354},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806354},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806354},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806355},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559295806355},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1559295806347},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1559295806347},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1559295806347},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1559295806348},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1559295806348},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1559295806348},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1559295806348},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1559295806348},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1559295806348},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1559295806348},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1559295806348},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"4aa55cd424389cf5626aa019c15ef6f3e4da09f2","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1559295806348},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1559295806349},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1559295806349},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1559295806349},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1559295806349},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1559295806349},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1559295806349},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1559295806349},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1559295806354},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1559295806354},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1559295806354},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1559295806354},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1559295806355},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1559295806355},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1559295806355},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1559295806355},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1559295806356},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1559295806356},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1559295806356},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1559295806356},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1559295806356},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1559295806356},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1559295806356},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1559295806356},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1559295806356},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1559295806356},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1559295806357},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1559295806358},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1559295806360},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1559295806360},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1559295806360},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1559295806360},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1559295806361},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1559295806361},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1559295806361},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1559295806361},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1559295806362},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1559295806365},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1559295806366},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1559295806366},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1559295806366},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1559295806366},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1559295806366},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1559295806366},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1559295806366},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1559295806366},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1559295806367},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1559295806367},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1559295806367},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1559295806367},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1559295806367},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1559295806370},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1559295806370},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1559295806372},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1559295806372},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1559295806372},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1559295806366},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1559295806349},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1559295806349},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1559295806352},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1559295806353},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1559295806353},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1559295806355},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1559295806355},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1559295806355},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1559295806355},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1559295806356},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1559295806358},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1559295806358},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1559295806361},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1559295806362},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1559295806362},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1559295806362},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1559295806370},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1559295806370},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1559295806357},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1559295806358},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1559295806365},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1559295806365},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1559295806371},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1559295806351},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1559295806352},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1559295806353},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1559295806353},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1559295806354},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1559295806354},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1559295806357},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1559295806357},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1559295806357},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1559295806357},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1559295806357},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1559295806361},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1559295806361},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1559295806363},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1559295806365},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1559295806364},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1559295806360},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1559295806370},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1559295806364},{"_id":"public/categories/index.html","hash":"378ec7c50b9e8322a066b3d04062a582fb7241df","modified":1559317041443},{"_id":"public/archives/2018/index.html","hash":"e9a7c4732def123d5a63927806b3bfce4d6e635f","modified":1559317041443},{"_id":"public/archives/2018/12/index.html","hash":"e6233c473e434917ceda5bd54826713a023d852a","modified":1559317041443},{"_id":"public/archives/2019/index.html","hash":"90841d553f3634d38237b920fe28e6c5fac0c7f6","modified":1559317041443},{"_id":"public/archives/2019/01/index.html","hash":"a35c1c8e3c33bec1cb414b8639efb8be370154b1","modified":1559317041443},{"_id":"public/archives/2019/03/index.html","hash":"9426ccda193183fb6a2f089728ce95b92ce6f2dd","modified":1559317041443},{"_id":"public/categories/Linux/index.html","hash":"9165387563ed420a15faeb2db08a95a1fd769e9d","modified":1559317041443},{"_id":"public/categories/故事/index.html","hash":"da7d5b8d5cf259ea8de95ed76a4a5a6f2db08a94","modified":1559317041443},{"_id":"public/categories/路由器/index.html","hash":"d97735d8c4ed4797777032e8f102374381e75e1b","modified":1559317041443},{"_id":"public/categories/学习资料/index.html","hash":"aecabc0c1cac8fc1e65079144baf1bee8965f4f2","modified":1559317041443},{"_id":"public/2019/03/17/利用Docker搭建Samba服务/index.html","hash":"cb543c6a56c15ae71e44e2fbdd68f598c76c40ea","modified":1559317041444},{"_id":"public/2019/01/05/软件测试复习/index.html","hash":"db9c71db1efdaa62ff1cf93f6938b460bee32f35","modified":1559317041444},{"_id":"public/2019/01/01/Flypy一键部署/index.html","hash":"7db3fc66da7f2c47dfc99cede342e1bf97cf6d06","modified":1559317041444},{"_id":"public/2018/12/19/Linux控制电脑风扇/index.html","hash":"e61a0f7538d6d470efcfc46a4348abace766ec3d","modified":1559317041444},{"_id":"public/2018/12/19/玩HASS一年的故事 (一)/index.html","hash":"da712eed0c2ea646c7bdd8bc73c7a9dc8a3b3579","modified":1559317041444},{"_id":"public/2018/12/19/路由器通过锐捷认证/index.html","hash":"51e47cc8351a2bac0708c439e1edfe2300ef678c","modified":1559317041444},{"_id":"public/archives/index.html","hash":"8ad5f5c87fd3968d38b7dfb530111c766c74465e","modified":1559317041444},{"_id":"public/index.html","hash":"626460bfb8e940b5028e21eefe5dec422cd43623","modified":1559317041444},{"_id":"public/CNAME","hash":"dc0f50bf546bd330fafe2279f40cfb5b734522b6","modified":1559317041450},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1559317041450},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1559317041450},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1559317041450},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1559317041450},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1559317041450},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1559317041450},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1559317041450},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1559317041451},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1559317041451},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1559317041451},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1559317041451},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1559317041451},{"_id":"public/images/head.jpg","hash":"663bb189beefc2e711bde4f17a8ca7e30e435e5c","modified":1559317041451},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1559317041451},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1559317041451},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1559317041451},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1559317041451},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1559317041451},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1559317041451},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1559317041451},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1559317041451},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1559317041451},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1559317041451},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1559317041451},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1559317041452},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1559317041452},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1559317041452},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1559317041452},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1559317041452},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1559317041452},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1559317041452},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1559317041452},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1559317041452},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1559317042008},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1559317042014},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1559317042023},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1559317042023},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1559317042024},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1559317042024},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1559317042024},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1559317042024},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1559317042024},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1559317042024},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1559317042024},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1559317042024},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1559317042024},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1559317042024},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1559317042025},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1559317042025},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1559317042025},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1559317042025},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1559317042025},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1559317042026},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1559317042026},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1559317042026},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1559317042026},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1559317042026},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1559317042026},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1559317042026},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1559317042026},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1559317042026},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1559317042026},{"_id":"public/lib/fastclick/README.html","hash":"e25da2e29e6947b704b43611b325e8ad65134e42","modified":1559317042026},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"81057e5b518b8ab60474e1ad027e868b558f15b7","modified":1559317042026},{"_id":"public/lib/jquery_lazyload/README.html","hash":"14c63ba441fb49b26032e72e9cb67c67c8df19f1","modified":1559317042026},{"_id":"public/css/main.css","hash":"a1eb813f28672937e31b6181fbdadafa47cf0aac","modified":1559317042026},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1559317042026},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1559317042027},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1559317042032},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1559317042032},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1559317042032},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1559317042032},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1559317042032},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1559317042033},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1559317042033},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1559317042033},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1559317042033},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1559317042033},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1559317042036},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1559317042037},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1559317042041},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1559317042041},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1559317042047},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1559317042047},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1559317042048},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1559317042048},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1559317042049},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1559317042049},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1559317042049},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1559317042053},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1559317042053},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1559317042054},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1559317042059},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1559317042061},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1559317042068},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1559317042069},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1559317042072},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1559317042078},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1559317042081}],"Category":[{"name":"Linux","_id":"cjwc93s6500033tl3maz5ahly"},{"name":"故事","_id":"cjwc93s6e00093tl3vzy7afxj"},{"name":"路由器","_id":"cjwc93sby000e3tl3yknv4acc"},{"name":"学习资料","_id":"cjwc93sde000h3tl3047jo8yk"}],"Data":[],"Page":[{"title":"categories","date":"2018-12-19T02:39:28.000Z","type":"categories","comments":1,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-19 02:39:28\ntype: \"categories\"\ncomments: true\n---\n","updated":"2019-05-31T09:43:26.340Z","path":"categories/index.html","layout":"page","_id":"cjwc93s5x00013tl3fodx0otv","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"一键部署小鹤音形方案","date":"2019-01-01T00:00:00.000Z","_content":"### 部署原理\n1. 安装 Fcitx 输入框架\n2. 安装 Rime 输入法\n3. 部署音形方案\n\n**Fcitx** (Flexible Input Method Framework) ──即小企鹅输入法，它是一个以 **GPL** 方式发布的输入法平台,可以通过安装引擎支持多种输入法，支持简入繁出，是在 Linux 操作系统中常用的中文输入法。它的优点是，短小精悍、跟程序的兼容性比较好。\n\n**Rime** 是一种中文输入法引擎是一种被广泛支持的输入法。**Rime** 输入法引擎可以被用在 **IBus** 和 **Fcitx** 输入框架下。\n\n这也就是说小鹤音形只是一种输入法方案，并不是输入法。我们可以将这个方案挂接在 **Rime** 输入法下。**ibus-rime** 和 **fcitx-rime** 都可以部署音形方案。\n\n该脚本就是在 **fcitx-rime** 这种模式下部署的小鹤音形方案。\n\n### 演示\n![example](https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/example.gif)\n\n### 手动安装演示\n[bilibili](https://bilibili.com/video/av46403021)\n\n### 安装\n该一键安装脚本只适用于 Debian、Ubuntu、Centos 系统。\n直接在终端下执行以下命令就是了。该项目地址 [github](https://github.com/Caffreyfans/flypy-install)\n```bash\nwget -O install.sh https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/install.sh && sudo chmod +x install.sh && ./install.sh\n```\n","source":"_posts/Flypy一键部署.md","raw":"---\ntitle: 一键部署小鹤音形方案\ndate: 2019-01-01\ncategories: Linux\n\n---\n### 部署原理\n1. 安装 Fcitx 输入框架\n2. 安装 Rime 输入法\n3. 部署音形方案\n\n**Fcitx** (Flexible Input Method Framework) ──即小企鹅输入法，它是一个以 **GPL** 方式发布的输入法平台,可以通过安装引擎支持多种输入法，支持简入繁出，是在 Linux 操作系统中常用的中文输入法。它的优点是，短小精悍、跟程序的兼容性比较好。\n\n**Rime** 是一种中文输入法引擎是一种被广泛支持的输入法。**Rime** 输入法引擎可以被用在 **IBus** 和 **Fcitx** 输入框架下。\n\n这也就是说小鹤音形只是一种输入法方案，并不是输入法。我们可以将这个方案挂接在 **Rime** 输入法下。**ibus-rime** 和 **fcitx-rime** 都可以部署音形方案。\n\n该脚本就是在 **fcitx-rime** 这种模式下部署的小鹤音形方案。\n\n### 演示\n![example](https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/example.gif)\n\n### 手动安装演示\n[bilibili](https://bilibili.com/video/av46403021)\n\n### 安装\n该一键安装脚本只适用于 Debian、Ubuntu、Centos 系统。\n直接在终端下执行以下命令就是了。该项目地址 [github](https://github.com/Caffreyfans/flypy-install)\n```bash\nwget -O install.sh https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/install.sh && sudo chmod +x install.sh && ./install.sh\n```\n","slug":"Flypy一键部署","published":1,"updated":"2019-05-31T09:43:26.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwc93s5s00003tl37m3beggt","content":"<h3 id=\"部署原理\"><a href=\"#部署原理\" class=\"headerlink\" title=\"部署原理\"></a>部署原理</h3><ol>\n<li>安装 Fcitx 输入框架</li>\n<li>安装 Rime 输入法</li>\n<li>部署音形方案</li>\n</ol>\n<p><strong>Fcitx</strong> (Flexible Input Method Framework) ──即小企鹅输入法，它是一个以 <strong>GPL</strong> 方式发布的输入法平台,可以通过安装引擎支持多种输入法，支持简入繁出，是在 Linux 操作系统中常用的中文输入法。它的优点是，短小精悍、跟程序的兼容性比较好。</p>\n<p><strong>Rime</strong> 是一种中文输入法引擎是一种被广泛支持的输入法。<strong>Rime</strong> 输入法引擎可以被用在 <strong>IBus</strong> 和 <strong>Fcitx</strong> 输入框架下。</p>\n<p>这也就是说小鹤音形只是一种输入法方案，并不是输入法。我们可以将这个方案挂接在 <strong>Rime</strong> 输入法下。<strong>ibus-rime</strong> 和 <strong>fcitx-rime</strong> 都可以部署音形方案。</p>\n<p>该脚本就是在 <strong>fcitx-rime</strong> 这种模式下部署的小鹤音形方案。</p>\n<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3><p><img src=\"https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/example.gif\" alt=\"example\"></p>\n<h3 id=\"手动安装演示\"><a href=\"#手动安装演示\" class=\"headerlink\" title=\"手动安装演示\"></a>手动安装演示</h3><p><a href=\"https://bilibili.com/video/av46403021\" target=\"_blank\" rel=\"noopener\">bilibili</a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>该一键安装脚本只适用于 Debian、Ubuntu、Centos 系统。<br>直接在终端下执行以下命令就是了。该项目地址 <a href=\"https://github.com/Caffreyfans/flypy-install\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O install.sh https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/install.sh &amp;&amp; sudo chmod +x install.sh &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"部署原理\"><a href=\"#部署原理\" class=\"headerlink\" title=\"部署原理\"></a>部署原理</h3><ol>\n<li>安装 Fcitx 输入框架</li>\n<li>安装 Rime 输入法</li>\n<li>部署音形方案</li>\n</ol>\n<p><strong>Fcitx</strong> (Flexible Input Method Framework) ──即小企鹅输入法，它是一个以 <strong>GPL</strong> 方式发布的输入法平台,可以通过安装引擎支持多种输入法，支持简入繁出，是在 Linux 操作系统中常用的中文输入法。它的优点是，短小精悍、跟程序的兼容性比较好。</p>\n<p><strong>Rime</strong> 是一种中文输入法引擎是一种被广泛支持的输入法。<strong>Rime</strong> 输入法引擎可以被用在 <strong>IBus</strong> 和 <strong>Fcitx</strong> 输入框架下。</p>\n<p>这也就是说小鹤音形只是一种输入法方案，并不是输入法。我们可以将这个方案挂接在 <strong>Rime</strong> 输入法下。<strong>ibus-rime</strong> 和 <strong>fcitx-rime</strong> 都可以部署音形方案。</p>\n<p>该脚本就是在 <strong>fcitx-rime</strong> 这种模式下部署的小鹤音形方案。</p>\n<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3><p><img src=\"https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/example.gif\" alt=\"example\"></p>\n<h3 id=\"手动安装演示\"><a href=\"#手动安装演示\" class=\"headerlink\" title=\"手动安装演示\"></a>手动安装演示</h3><p><a href=\"https://bilibili.com/video/av46403021\" target=\"_blank\" rel=\"noopener\">bilibili</a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>该一键安装脚本只适用于 Debian、Ubuntu、Centos 系统。<br>直接在终端下执行以下命令就是了。该项目地址 <a href=\"https://github.com/Caffreyfans/flypy-install\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O install.sh https://raw.githubusercontent.com/Caffreyfans/flypy-install/master/install.sh &amp;&amp; sudo chmod +x install.sh &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure>\n\n"},{"title":"利用Docker搭建Samba服务","date":"2019-03-17T00:00:00.000Z","_content":"### 前述\n能看到搜索到这篇文章想必你已经了解了什么是 **Docker**，什么是 **Samba** 了。如果你不了解这两样东西，那么我建议你在网上搜索一下，仔细了解下这两样比较实用的工具。\n\n我就以我通俗的语言简述下这两样东西，**Docker** 是一种标准化的软件单元，说白了有了它，我们使用一个软件就像手机上使用 **APP** 一样，我们不用管这个软件怎么写的，以及运行这个软件需要什么环境啊。当我们手机需要某个软件的时候，我们都直接在应用商店里直接搜索下载某个软件，然后打开运行。**Docker** 跟这种道理差不多，如果我们需要某个软件，那么我们也直接从镜像仓库里直接拉取（手机上我们说下载应用，**Docker** 使用的是 **pull** 命令那么就该翻译成拉取，道理是一样的），手机上我们下载的称做安装包，**Docker** 中对应就是应该是镜像。手机上下载好软件包后安装的这个步骤对应 **Docker** 中就应该是创建容器的这个步骤了，创建容器的时候只需要你配置一些简单的参数。手机安装包在你的手机上能下载并安装，在别人的手机上也一样。**Docker** 也是如此，同一镜像都可以在同样的 **CPU** 架构下创建容器运行。只要你装了 **Docker** 就不在乎你用的什么系统了，就只有 **CPU** 架构的区分了。这样就大大为应用的部署提供了方便，而且通常来说一个容器是非常\t轻量的，创建和删除它都非常的方便。这就是为什么要使用 **Docker** 来搭建 **Samba** 服务的原因了。\n\n至于 **Samba** 就是适用与 **Linux** 和 **Unix** 的标准 **Windows** 互操作性程序套件。有了它我们就可以把任意文件在我们的 **Windows** 系统和 **Linux** 系统中任意的转移了。\n\n### 启动容器\n```bash\nsudo docker run -it --name samba --restart always \\\n\t--net host -p 139:139 -p 455:455  -v /home:/shared \\\n\t-d dperson/samba -s \"share;/shared;yes;no;yes\" -n\n```\n我们来说下每个参数的含义:\n\nsudo -> 使用 root 权限执行后续命令\n\ndocker -> docker 命令\n\nrun -> docker 命令的参数，用于启动容器\n\n-i -> 让容器的标准保持打开\n\n-t -> 为容器分配一个伪终端\n\n--name -> 容器名， samba 这里就给该容器命名为 samba\n\n--restart -> 重启参数，always 我们这里选的就是一直重启，只要是启动失败了它就会不断的重启，这里的作用主要是为了开机启动\n\n--net -> 加入网络，host 就是说该容器加入到主机网络中\n\n-p -> 端口映射，139、455 是 **Samba** 协议的端口\n\n-v -> 文件映射， /home:/shared 就是把主机中的 /home 目录映射到 容器中的 /shared 目录中\n\n-d -> 后台运行\n\ndperson/samba 使用的镜像名，当我们的本地没有该镜像时，它会自动去网络仓库里搜索并拉取， 镜像可以是我们自己写的，也可以是别人写好的，我们这里所使用的就是别人已经写的了的\n\n这上面的都是 **Docker** 命令中的参数，而镜像名后面跟的参数就是该镜像自己设定的参数了，有的镜像可能有，有的镜像可能也没有。这主要就要看这个镜像是怎么写的了\n\n-s -> 设置共享目录， \"share;/shared;yes;no;yes\" 给共享的文件夹取名为 share，共享的是容器中的 shared 文件夹（前面的参数就已经把主机中的文件映射到这里了），可见，非只读，启用访客\n\n***关于更多的 dperson/samba 详细设置请见 [dperson/samba](https://hub.docker.com/r/dperson/samba/)***\n\n","source":"_posts/利用Docker搭建Samba服务.md","raw":"---\ntitle: 利用Docker搭建Samba服务\ndate: 2019-03-17\ncategories: Linux\n\n---\n### 前述\n能看到搜索到这篇文章想必你已经了解了什么是 **Docker**，什么是 **Samba** 了。如果你不了解这两样东西，那么我建议你在网上搜索一下，仔细了解下这两样比较实用的工具。\n\n我就以我通俗的语言简述下这两样东西，**Docker** 是一种标准化的软件单元，说白了有了它，我们使用一个软件就像手机上使用 **APP** 一样，我们不用管这个软件怎么写的，以及运行这个软件需要什么环境啊。当我们手机需要某个软件的时候，我们都直接在应用商店里直接搜索下载某个软件，然后打开运行。**Docker** 跟这种道理差不多，如果我们需要某个软件，那么我们也直接从镜像仓库里直接拉取（手机上我们说下载应用，**Docker** 使用的是 **pull** 命令那么就该翻译成拉取，道理是一样的），手机上我们下载的称做安装包，**Docker** 中对应就是应该是镜像。手机上下载好软件包后安装的这个步骤对应 **Docker** 中就应该是创建容器的这个步骤了，创建容器的时候只需要你配置一些简单的参数。手机安装包在你的手机上能下载并安装，在别人的手机上也一样。**Docker** 也是如此，同一镜像都可以在同样的 **CPU** 架构下创建容器运行。只要你装了 **Docker** 就不在乎你用的什么系统了，就只有 **CPU** 架构的区分了。这样就大大为应用的部署提供了方便，而且通常来说一个容器是非常\t轻量的，创建和删除它都非常的方便。这就是为什么要使用 **Docker** 来搭建 **Samba** 服务的原因了。\n\n至于 **Samba** 就是适用与 **Linux** 和 **Unix** 的标准 **Windows** 互操作性程序套件。有了它我们就可以把任意文件在我们的 **Windows** 系统和 **Linux** 系统中任意的转移了。\n\n### 启动容器\n```bash\nsudo docker run -it --name samba --restart always \\\n\t--net host -p 139:139 -p 455:455  -v /home:/shared \\\n\t-d dperson/samba -s \"share;/shared;yes;no;yes\" -n\n```\n我们来说下每个参数的含义:\n\nsudo -> 使用 root 权限执行后续命令\n\ndocker -> docker 命令\n\nrun -> docker 命令的参数，用于启动容器\n\n-i -> 让容器的标准保持打开\n\n-t -> 为容器分配一个伪终端\n\n--name -> 容器名， samba 这里就给该容器命名为 samba\n\n--restart -> 重启参数，always 我们这里选的就是一直重启，只要是启动失败了它就会不断的重启，这里的作用主要是为了开机启动\n\n--net -> 加入网络，host 就是说该容器加入到主机网络中\n\n-p -> 端口映射，139、455 是 **Samba** 协议的端口\n\n-v -> 文件映射， /home:/shared 就是把主机中的 /home 目录映射到 容器中的 /shared 目录中\n\n-d -> 后台运行\n\ndperson/samba 使用的镜像名，当我们的本地没有该镜像时，它会自动去网络仓库里搜索并拉取， 镜像可以是我们自己写的，也可以是别人写好的，我们这里所使用的就是别人已经写的了的\n\n这上面的都是 **Docker** 命令中的参数，而镜像名后面跟的参数就是该镜像自己设定的参数了，有的镜像可能有，有的镜像可能也没有。这主要就要看这个镜像是怎么写的了\n\n-s -> 设置共享目录， \"share;/shared;yes;no;yes\" 给共享的文件夹取名为 share，共享的是容器中的 shared 文件夹（前面的参数就已经把主机中的文件映射到这里了），可见，非只读，启用访客\n\n***关于更多的 dperson/samba 详细设置请见 [dperson/samba](https://hub.docker.com/r/dperson/samba/)***\n\n","slug":"利用Docker搭建Samba服务","published":1,"updated":"2019-05-31T09:43:26.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwc93s5z00023tl3ai990rfh","content":"<h3 id=\"前述\"><a href=\"#前述\" class=\"headerlink\" title=\"前述\"></a>前述</h3><p>能看到搜索到这篇文章想必你已经了解了什么是 <strong>Docker</strong>，什么是 <strong>Samba</strong> 了。如果你不了解这两样东西，那么我建议你在网上搜索一下，仔细了解下这两样比较实用的工具。</p>\n<p>我就以我通俗的语言简述下这两样东西，<strong>Docker</strong> 是一种标准化的软件单元，说白了有了它，我们使用一个软件就像手机上使用 <strong>APP</strong> 一样，我们不用管这个软件怎么写的，以及运行这个软件需要什么环境啊。当我们手机需要某个软件的时候，我们都直接在应用商店里直接搜索下载某个软件，然后打开运行。<strong>Docker</strong> 跟这种道理差不多，如果我们需要某个软件，那么我们也直接从镜像仓库里直接拉取（手机上我们说下载应用，<strong>Docker</strong> 使用的是 <strong>pull</strong> 命令那么就该翻译成拉取，道理是一样的），手机上我们下载的称做安装包，<strong>Docker</strong> 中对应就是应该是镜像。手机上下载好软件包后安装的这个步骤对应 <strong>Docker</strong> 中就应该是创建容器的这个步骤了，创建容器的时候只需要你配置一些简单的参数。手机安装包在你的手机上能下载并安装，在别人的手机上也一样。<strong>Docker</strong> 也是如此，同一镜像都可以在同样的 <strong>CPU</strong> 架构下创建容器运行。只要你装了 <strong>Docker</strong> 就不在乎你用的什么系统了，就只有 <strong>CPU</strong> 架构的区分了。这样就大大为应用的部署提供了方便，而且通常来说一个容器是非常    轻量的，创建和删除它都非常的方便。这就是为什么要使用 <strong>Docker</strong> 来搭建 <strong>Samba</strong> 服务的原因了。</p>\n<p>至于 <strong>Samba</strong> 就是适用与 <strong>Linux</strong> 和 <strong>Unix</strong> 的标准 <strong>Windows</strong> 互操作性程序套件。有了它我们就可以把任意文件在我们的 <strong>Windows</strong> 系统和 <strong>Linux</strong> 系统中任意的转移了。</p>\n<h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -it --name samba --restart always \\</span><br><span class=\"line\">\t--net host -p 139:139 -p 455:455  -v /home:/shared \\</span><br><span class=\"line\">\t-d dperson/samba -s <span class=\"string\">\"share;/shared;yes;no;yes\"</span> -n</span><br></pre></td></tr></table></figure>\n\n<p>我们来说下每个参数的含义:</p>\n<p>sudo -&gt; 使用 root 权限执行后续命令</p>\n<p>docker -&gt; docker 命令</p>\n<p>run -&gt; docker 命令的参数，用于启动容器</p>\n<p>-i -&gt; 让容器的标准保持打开</p>\n<p>-t -&gt; 为容器分配一个伪终端</p>\n<p>–name -&gt; 容器名， samba 这里就给该容器命名为 samba</p>\n<p>–restart -&gt; 重启参数，always 我们这里选的就是一直重启，只要是启动失败了它就会不断的重启，这里的作用主要是为了开机启动</p>\n<p>–net -&gt; 加入网络，host 就是说该容器加入到主机网络中</p>\n<p>-p -&gt; 端口映射，139、455 是 <strong>Samba</strong> 协议的端口</p>\n<p>-v -&gt; 文件映射， /home:/shared 就是把主机中的 /home 目录映射到 容器中的 /shared 目录中</p>\n<p>-d -&gt; 后台运行</p>\n<p>dperson/samba 使用的镜像名，当我们的本地没有该镜像时，它会自动去网络仓库里搜索并拉取， 镜像可以是我们自己写的，也可以是别人写好的，我们这里所使用的就是别人已经写的了的</p>\n<p>这上面的都是 <strong>Docker</strong> 命令中的参数，而镜像名后面跟的参数就是该镜像自己设定的参数了，有的镜像可能有，有的镜像可能也没有。这主要就要看这个镜像是怎么写的了</p>\n<p>-s -&gt; 设置共享目录， “share;/shared;yes;no;yes” 给共享的文件夹取名为 share，共享的是容器中的 shared 文件夹（前面的参数就已经把主机中的文件映射到这里了），可见，非只读，启用访客</p>\n<p><strong><em>关于更多的 dperson/samba 详细设置请见 <a href=\"https://hub.docker.com/r/dperson/samba/\" target=\"_blank\" rel=\"noopener\">dperson/samba</a></em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前述\"><a href=\"#前述\" class=\"headerlink\" title=\"前述\"></a>前述</h3><p>能看到搜索到这篇文章想必你已经了解了什么是 <strong>Docker</strong>，什么是 <strong>Samba</strong> 了。如果你不了解这两样东西，那么我建议你在网上搜索一下，仔细了解下这两样比较实用的工具。</p>\n<p>我就以我通俗的语言简述下这两样东西，<strong>Docker</strong> 是一种标准化的软件单元，说白了有了它，我们使用一个软件就像手机上使用 <strong>APP</strong> 一样，我们不用管这个软件怎么写的，以及运行这个软件需要什么环境啊。当我们手机需要某个软件的时候，我们都直接在应用商店里直接搜索下载某个软件，然后打开运行。<strong>Docker</strong> 跟这种道理差不多，如果我们需要某个软件，那么我们也直接从镜像仓库里直接拉取（手机上我们说下载应用，<strong>Docker</strong> 使用的是 <strong>pull</strong> 命令那么就该翻译成拉取，道理是一样的），手机上我们下载的称做安装包，<strong>Docker</strong> 中对应就是应该是镜像。手机上下载好软件包后安装的这个步骤对应 <strong>Docker</strong> 中就应该是创建容器的这个步骤了，创建容器的时候只需要你配置一些简单的参数。手机安装包在你的手机上能下载并安装，在别人的手机上也一样。<strong>Docker</strong> 也是如此，同一镜像都可以在同样的 <strong>CPU</strong> 架构下创建容器运行。只要你装了 <strong>Docker</strong> 就不在乎你用的什么系统了，就只有 <strong>CPU</strong> 架构的区分了。这样就大大为应用的部署提供了方便，而且通常来说一个容器是非常    轻量的，创建和删除它都非常的方便。这就是为什么要使用 <strong>Docker</strong> 来搭建 <strong>Samba</strong> 服务的原因了。</p>\n<p>至于 <strong>Samba</strong> 就是适用与 <strong>Linux</strong> 和 <strong>Unix</strong> 的标准 <strong>Windows</strong> 互操作性程序套件。有了它我们就可以把任意文件在我们的 <strong>Windows</strong> 系统和 <strong>Linux</strong> 系统中任意的转移了。</p>\n<h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -it --name samba --restart always \\</span><br><span class=\"line\">\t--net host -p 139:139 -p 455:455  -v /home:/shared \\</span><br><span class=\"line\">\t-d dperson/samba -s <span class=\"string\">\"share;/shared;yes;no;yes\"</span> -n</span><br></pre></td></tr></table></figure>\n\n<p>我们来说下每个参数的含义:</p>\n<p>sudo -&gt; 使用 root 权限执行后续命令</p>\n<p>docker -&gt; docker 命令</p>\n<p>run -&gt; docker 命令的参数，用于启动容器</p>\n<p>-i -&gt; 让容器的标准保持打开</p>\n<p>-t -&gt; 为容器分配一个伪终端</p>\n<p>–name -&gt; 容器名， samba 这里就给该容器命名为 samba</p>\n<p>–restart -&gt; 重启参数，always 我们这里选的就是一直重启，只要是启动失败了它就会不断的重启，这里的作用主要是为了开机启动</p>\n<p>–net -&gt; 加入网络，host 就是说该容器加入到主机网络中</p>\n<p>-p -&gt; 端口映射，139、455 是 <strong>Samba</strong> 协议的端口</p>\n<p>-v -&gt; 文件映射， /home:/shared 就是把主机中的 /home 目录映射到 容器中的 /shared 目录中</p>\n<p>-d -&gt; 后台运行</p>\n<p>dperson/samba 使用的镜像名，当我们的本地没有该镜像时，它会自动去网络仓库里搜索并拉取， 镜像可以是我们自己写的，也可以是别人写好的，我们这里所使用的就是别人已经写的了的</p>\n<p>这上面的都是 <strong>Docker</strong> 命令中的参数，而镜像名后面跟的参数就是该镜像自己设定的参数了，有的镜像可能有，有的镜像可能也没有。这主要就要看这个镜像是怎么写的了</p>\n<p>-s -&gt; 设置共享目录， “share;/shared;yes;no;yes” 给共享的文件夹取名为 share，共享的是容器中的 shared 文件夹（前面的参数就已经把主机中的文件映射到这里了），可见，非只读，启用访客</p>\n<p><strong><em>关于更多的 dperson/samba 详细设置请见 <a href=\"https://hub.docker.com/r/dperson/samba/\" target=\"_blank\" rel=\"noopener\">dperson/samba</a></em></strong></p>\n"},{"title":"Linux 系统下手动控制电脑风扇","date":"2018-12-19T00:00:00.000Z","comments":1,"_content":"\n## 命令控制简单方便\n笔记本风扇的轴承坏了，导致电脑运行时声音特别大。所以我到处在网上找资料看能不能通过手动的方法来限制风扇的转速，皇天不负有心人我还是找到了文档。风扇应该是I2C控制的，这样主板可以控制风扇的转速，风扇的转速也可以反馈到电脑。\n我们需要先找到风扇控制在 **Linux** 下的位置。我们只需要通过安装一个很小的工具就可以检测我们的电脑风扇了位置了。\n\n```bash\nsudo apt-get install lm-sensors fancontrol -y # 安装 lm-sensors fancontrol\n```\n\n这里讲解一下 **lm-sensors** 与 **fancontrol** 这两个工具的作用。\n\n| 工具包名 | 使用命令 | 作用 |\n| --- | --- | --- |\n| lm-sensors | sensors | 查看硬件温度 |\n| fancontrol | pwmconfig | 查找风扇位置 |\n\n安装好工具包之后我们首先通过\n```bash\nsudo pwmconfig\n```\n来找到我们风扇的位置，如果你是第一次使用它会询问你，输入 `y`  确认一下就行了。看一下执行结果\n\n| sudo pwmconfig | sensors |\n| --- | --- |\n| ![1](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/1.jpg) | ![2](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/2.jpg) |\n\n从 `sudo pwmconfig` 的执行结果来看，`Found the following PWM controls:` `hwmon3/pwm1` 那么就说明风扇的控制文件位置在 `hwmon3/pwm1` 了，那么我们直接在这个文件里直接填入控制值就可以实现手动控制电脑风扇了。\n```bash\necho 50 > /etc/class/hwmon/hwmon3/pwm1\n```\n\n风扇的转速通过 **PWM** 控制，也就是脉冲宽度调制。可以这样理解在一个周期内，高电平所占的时间长那么风扇就会转的更快，**PWM** 值可以取 0~255 之间的整数，0 就代表停止，255就代表最大转速。比如我这里查到我风扇对应的控制文件位置是 /hwmon3/pwm1，那么你就可以通过修改 **/sys/class/hwmon/hwmon3/pwm1** 文件里面的数值来改变风扇的转速了，这种办法只是暂时有效，一旦用户休眠或则注销，又得重新设置了。所以如果你想开机就让风扇转速受到控制你还得写个脚本再把它做成服务，然后让它开机执行。\n\n其实最好的解决风扇的问题就是换个风扇。换个笔记本风扇不难，去网上自己买个笔记本风扇就几十块钱，把笔记本拆开自己就换了用不了多就，要不然就找外面修理店的人帮你换。对于一般的笔记本来说超过 **50** 就算坑你了，自己可以在网上先看看你那种机型的风扇值多少。","source":"_posts/Linux控制电脑风扇.md","raw":"---\ntitle: Linux 系统下手动控制电脑风扇\ndate: 2018-12-19\ncategories: Linux\ncomments: true\n---\n\n## 命令控制简单方便\n笔记本风扇的轴承坏了，导致电脑运行时声音特别大。所以我到处在网上找资料看能不能通过手动的方法来限制风扇的转速，皇天不负有心人我还是找到了文档。风扇应该是I2C控制的，这样主板可以控制风扇的转速，风扇的转速也可以反馈到电脑。\n我们需要先找到风扇控制在 **Linux** 下的位置。我们只需要通过安装一个很小的工具就可以检测我们的电脑风扇了位置了。\n\n```bash\nsudo apt-get install lm-sensors fancontrol -y # 安装 lm-sensors fancontrol\n```\n\n这里讲解一下 **lm-sensors** 与 **fancontrol** 这两个工具的作用。\n\n| 工具包名 | 使用命令 | 作用 |\n| --- | --- | --- |\n| lm-sensors | sensors | 查看硬件温度 |\n| fancontrol | pwmconfig | 查找风扇位置 |\n\n安装好工具包之后我们首先通过\n```bash\nsudo pwmconfig\n```\n来找到我们风扇的位置，如果你是第一次使用它会询问你，输入 `y`  确认一下就行了。看一下执行结果\n\n| sudo pwmconfig | sensors |\n| --- | --- |\n| ![1](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/1.jpg) | ![2](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/2.jpg) |\n\n从 `sudo pwmconfig` 的执行结果来看，`Found the following PWM controls:` `hwmon3/pwm1` 那么就说明风扇的控制文件位置在 `hwmon3/pwm1` 了，那么我们直接在这个文件里直接填入控制值就可以实现手动控制电脑风扇了。\n```bash\necho 50 > /etc/class/hwmon/hwmon3/pwm1\n```\n\n风扇的转速通过 **PWM** 控制，也就是脉冲宽度调制。可以这样理解在一个周期内，高电平所占的时间长那么风扇就会转的更快，**PWM** 值可以取 0~255 之间的整数，0 就代表停止，255就代表最大转速。比如我这里查到我风扇对应的控制文件位置是 /hwmon3/pwm1，那么你就可以通过修改 **/sys/class/hwmon/hwmon3/pwm1** 文件里面的数值来改变风扇的转速了，这种办法只是暂时有效，一旦用户休眠或则注销，又得重新设置了。所以如果你想开机就让风扇转速受到控制你还得写个脚本再把它做成服务，然后让它开机执行。\n\n其实最好的解决风扇的问题就是换个风扇。换个笔记本风扇不难，去网上自己买个笔记本风扇就几十块钱，把笔记本拆开自己就换了用不了多就，要不然就找外面修理店的人帮你换。对于一般的笔记本来说超过 **50** 就算坑你了，自己可以在网上先看看你那种机型的风扇值多少。","slug":"Linux控制电脑风扇","published":1,"updated":"2019-05-31T09:43:26.339Z","layout":"post","photos":[],"link":"","_id":"cjwc93s6600043tl33lo52mht","content":"<h2 id=\"命令控制简单方便\"><a href=\"#命令控制简单方便\" class=\"headerlink\" title=\"命令控制简单方便\"></a>命令控制简单方便</h2><p>笔记本风扇的轴承坏了，导致电脑运行时声音特别大。所以我到处在网上找资料看能不能通过手动的方法来限制风扇的转速，皇天不负有心人我还是找到了文档。风扇应该是I2C控制的，这样主板可以控制风扇的转速，风扇的转速也可以反馈到电脑。<br>我们需要先找到风扇控制在 <strong>Linux</strong> 下的位置。我们只需要通过安装一个很小的工具就可以检测我们的电脑风扇了位置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lm-sensors fancontrol -y <span class=\"comment\"># 安装 lm-sensors fancontrol</span></span><br></pre></td></tr></table></figure>\n\n<p>这里讲解一下 <strong>lm-sensors</strong> 与 <strong>fancontrol</strong> 这两个工具的作用。</p>\n<table>\n<thead>\n<tr>\n<th>工具包名</th>\n<th>使用命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lm-sensors</td>\n<td>sensors</td>\n<td>查看硬件温度</td>\n</tr>\n<tr>\n<td>fancontrol</td>\n<td>pwmconfig</td>\n<td>查找风扇位置</td>\n</tr>\n</tbody></table>\n<p>安装好工具包之后我们首先通过</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pwmconfig</span><br></pre></td></tr></table></figure>\n\n<p>来找到我们风扇的位置，如果你是第一次使用它会询问你，输入 <code>y</code>  确认一下就行了。看一下执行结果</p>\n<table>\n<thead>\n<tr>\n<th>sudo pwmconfig</th>\n<th>sensors</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/1.jpg\" alt=\"1\"></td>\n<td><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/2.jpg\" alt=\"2\"></td>\n</tr>\n</tbody></table>\n<p>从 <code>sudo pwmconfig</code> 的执行结果来看，<code>Found the following PWM controls:</code> <code>hwmon3/pwm1</code> 那么就说明风扇的控制文件位置在 <code>hwmon3/pwm1</code> 了，那么我们直接在这个文件里直接填入控制值就可以实现手动控制电脑风扇了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> 50 &gt; /etc/class/hwmon/hwmon3/pwm1</span><br></pre></td></tr></table></figure>\n\n<p>风扇的转速通过 <strong>PWM</strong> 控制，也就是脉冲宽度调制。可以这样理解在一个周期内，高电平所占的时间长那么风扇就会转的更快，<strong>PWM</strong> 值可以取 0~255 之间的整数，0 就代表停止，255就代表最大转速。比如我这里查到我风扇对应的控制文件位置是 /hwmon3/pwm1，那么你就可以通过修改 <strong>/sys/class/hwmon/hwmon3/pwm1</strong> 文件里面的数值来改变风扇的转速了，这种办法只是暂时有效，一旦用户休眠或则注销，又得重新设置了。所以如果你想开机就让风扇转速受到控制你还得写个脚本再把它做成服务，然后让它开机执行。</p>\n<p>其实最好的解决风扇的问题就是换个风扇。换个笔记本风扇不难，去网上自己买个笔记本风扇就几十块钱，把笔记本拆开自己就换了用不了多就，要不然就找外面修理店的人帮你换。对于一般的笔记本来说超过 <strong>50</strong> 就算坑你了，自己可以在网上先看看你那种机型的风扇值多少。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命令控制简单方便\"><a href=\"#命令控制简单方便\" class=\"headerlink\" title=\"命令控制简单方便\"></a>命令控制简单方便</h2><p>笔记本风扇的轴承坏了，导致电脑运行时声音特别大。所以我到处在网上找资料看能不能通过手动的方法来限制风扇的转速，皇天不负有心人我还是找到了文档。风扇应该是I2C控制的，这样主板可以控制风扇的转速，风扇的转速也可以反馈到电脑。<br>我们需要先找到风扇控制在 <strong>Linux</strong> 下的位置。我们只需要通过安装一个很小的工具就可以检测我们的电脑风扇了位置了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lm-sensors fancontrol -y <span class=\"comment\"># 安装 lm-sensors fancontrol</span></span><br></pre></td></tr></table></figure>\n\n<p>这里讲解一下 <strong>lm-sensors</strong> 与 <strong>fancontrol</strong> 这两个工具的作用。</p>\n<table>\n<thead>\n<tr>\n<th>工具包名</th>\n<th>使用命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lm-sensors</td>\n<td>sensors</td>\n<td>查看硬件温度</td>\n</tr>\n<tr>\n<td>fancontrol</td>\n<td>pwmconfig</td>\n<td>查找风扇位置</td>\n</tr>\n</tbody></table>\n<p>安装好工具包之后我们首先通过</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pwmconfig</span><br></pre></td></tr></table></figure>\n\n<p>来找到我们风扇的位置，如果你是第一次使用它会询问你，输入 <code>y</code>  确认一下就行了。看一下执行结果</p>\n<table>\n<thead>\n<tr>\n<th>sudo pwmconfig</th>\n<th>sensors</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/1.jpg\" alt=\"1\"></td>\n<td><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_2/2.jpg\" alt=\"2\"></td>\n</tr>\n</tbody></table>\n<p>从 <code>sudo pwmconfig</code> 的执行结果来看，<code>Found the following PWM controls:</code> <code>hwmon3/pwm1</code> 那么就说明风扇的控制文件位置在 <code>hwmon3/pwm1</code> 了，那么我们直接在这个文件里直接填入控制值就可以实现手动控制电脑风扇了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> 50 &gt; /etc/class/hwmon/hwmon3/pwm1</span><br></pre></td></tr></table></figure>\n\n<p>风扇的转速通过 <strong>PWM</strong> 控制，也就是脉冲宽度调制。可以这样理解在一个周期内，高电平所占的时间长那么风扇就会转的更快，<strong>PWM</strong> 值可以取 0~255 之间的整数，0 就代表停止，255就代表最大转速。比如我这里查到我风扇对应的控制文件位置是 /hwmon3/pwm1，那么你就可以通过修改 <strong>/sys/class/hwmon/hwmon3/pwm1</strong> 文件里面的数值来改变风扇的转速了，这种办法只是暂时有效，一旦用户休眠或则注销，又得重新设置了。所以如果你想开机就让风扇转速受到控制你还得写个脚本再把它做成服务，然后让它开机执行。</p>\n<p>其实最好的解决风扇的问题就是换个风扇。换个笔记本风扇不难，去网上自己买个笔记本风扇就几十块钱，把笔记本拆开自己就换了用不了多就，要不然就找外面修理店的人帮你换。对于一般的笔记本来说超过 <strong>50</strong> 就算坑你了，自己可以在网上先看看你那种机型的风扇值多少。</p>\n"},{"title":"讲一个玩 Homeassistant 一年的故事(一)","date":"2018-12-19T00:00:00.000Z","comments":1,"_content":"\n## 大家好，以下为我玩 ***HASS*** 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\n\n### 我是如何入坑？\n\t\n那么我就先从入坑开始讲起，大概是 `2017` 年的 `5` 月份我买了一块树莓派，型号是 `3b` ，买这个的初衷是为了玩，看着网上的教程资料发现这个小板子好玩的很呐，感觉无所不能，于是就在淘宝上购买了我的第一块板子，和一些面包板、杜邦线之类的东西。\n\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/1.png\" width=\"50%\" height=\"50%\"/><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/2.png\" width=\"50%\" height=\"50%\"/>\n买了这些东西其实不是为了玩 ***HASS*** ，当时想的是学习传感器以及单片机，自己一心想做个遥控小车出来。然后自己跟着一本印度人写的树莓派应用的书学习，初步了解到了点什么是 **传感器**，什么是 **Linux** 。自己傻乎乎的在那里玩 **超声波** 、**DHT11** 的驱动还以为自己发现了新大陆，觉得自己非常的牛逼。忍不住想在别人面前炫耀，于是自己加了个树莓派交流群，其实里面吹牛的多，干事的少。一天我例行公事在群友面前炫耀自己是怎么用树莓派让我的 **HC-SR04**、**DHT11** 如何工作的，结果有位老哥一声不吭的录了一段视频，视频里的内容我现在都记得，他用 **Siri** 控制了他一个自制的台灯。这种从来没发过话的人，突然发了一个比你还牛的视频，对于我来说无疑是对我巨大的打击，我顿时感觉自己的人格受到了严重的侮辱。我立马加了他好友，他也很很快的添加了我。于是我疯狂的赞美他，夸他是多么多么的牛，希望他也能教教我怎么做。最开始他没理我，于是我第二天又问他是怎么做的，可能是他不耐烦了，就回了我两个词 **homeassistant + homebridge** 就完了，再问他具体怎么做的也不说了，大神的口是真的难开，就回我两个词。再怎么问他都不鸟我了，于是我就在百度上找 **homeassistant homebridge** ，最开始这个资料是真的少，百度了许久才搞懂这个 **Homeassistant** 和 **Homebridge** 是两个东西，**Homeassistant** 可以理解为一个 **Hub** 而 **Homebridge** 应该理解为 `homeassistant to homekit` 的一个网关。百度上有用的资料就两篇，一个是 **老高** 的帖子，另一个是一个不知名的人写的，这两位人就是带我入门的人。老高的贴子最好，他讲的很详细，我的树莓派也因此发挥了它的光和热, 要知道我最初买树莓派并不是为了玩 **Hass** 的，所以这个也就告诉我们一个道理 \"无心插柳柳成阴\" ，他的教程从树莓派刷机到安装 **Homeassistant** ，到配置以及 **Sonoff** 刷固件每个细节都讲了，他还专门录制了视频害怕我们不会，没办法那时候是真的菜，他不讲那么细中间卡一步就够折腾的。\n\n\n就这样照着老高的帖子我跌跌撞撞的在一个星期内成功的用 **Siri** 了我的一个发光二级管的亮灭。于是我按耐不住激动的心情又录了一个 **Siri** 控制发光二级管的视频，这次的视频引起的反响就更大了。连前面我主动加的那位小哥都表示惊讶——\"你这么快就弄好了？\"，呵呵你也不看看我是谁。后面我与这个小哥互相交流了会，发现他也是个狠角色，比我大一级，参加过学校的比赛还获得过奖。顿时我就对他心存敬意，希望有朝一日也像他那样成功。过了几天我又把这个视频拿到群里炫耀，这时一个在 **HomeAssistant智能家居** 群里的人发现了我，并夸赞我东西做的不错，问我是不是也玩 **Homeassistant** 的。不一会他就把我拉到了全国最大的 **Homeassistant** 交流群，进入之后我又发现自己原来又是最菜的，别人都开始研究怎么让空调连接到 **Homeassistant** 了，**Sonoff** 这些别人早会了。\n\n\n\n\n### 这一年我学到了些什么？\n1. #### 我学会了学习新东西的能力\n\t从这张图就看的出我段位不低了，入坑早资料少，所以后面入坑的朋友真心别心急慢慢来，前面已经出了很多教程了，选自己有用的学，学的很快的，毕竟资料很丰富了。我知道有的人跟我一样很依赖问别人，自己不愿意花大功夫去网上找资料。自己经验表明一般来说你的问题在网上都会找到，你要有总结出你的问题并提取关键词的能力，然后拿到网上去搜索一会就找到了，只有你的问题很前沿或者很奇葩的问题才找不到。\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/3.png\" width=\"50%\" height=\"50%\"/>\n2. #### 国外网站要多逛\n\t不得不承认老外是真的强，不是我舔他们。其实我们玩的这些东西都是老外玩了之后我们再玩的。除了 **ESP8266**、**小米设备** 是我们国产的，其余大多都是老外先玩的, **Homeassistant、Homekit、Espeasy、Tasmota、Lovelace……** 他们一般都比我们玩的溜，毕竟是他们写的东西。所以要找新的东西或者找些什么资料啊，去他们的网站找找，学习别人的东西也未尝不可。\n3. #### 要舍得花钱\n\t不得不说玩 ***HASS*** 是真的烧钱，我没玩 ***HASS*** 之前每个月都还会剩个两三百，每个月还会请别人在外面吃顿饭，自从玩了 ***HASS*** 后发现这玩意就是个无底洞。买完树莓买 **Sonoff**，刚把这个买了别人又在玩 **Nodemcu** 了又得买，双十一到了又跟风买天猫精灵，平时还买些传感器和配套的东西之类的，又什么 **WS2812B**、**N1**、**K2P**、**摄像头** 之类的反正我现在每个月都欠蚂蚁花呗钱，活动资金不够了就问朋友借。舍得花钱但到理性消费，买些自己需要的东西就行了，别看见什么就买，买来不用浪费。\n\n**看一张白神设备图**\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/4.jpg\" width=\"50%\" height=\"50%\"/>\n4. #### 学到了些新技术\n    学校没学到的玩 **HASS** 学到了些，玩 **HASS** 你起码会学到点 **Linux** 的基础吧，设置开机启动，设置账户，权限，防火墙问题等等，再说 **Linux** 上的软件 **Frp**、**Docker**、**Nginx**、**Shadowsocket** ……也会接触到，反正东西需要自己琢磨。硬件也有从硬件连接到固件烧录，体验过之后就会收获很多，学习的时候要保持敬畏之心。为什么这么说？如果你弄些东西的过程中完全想当然的来做，很容易吃亏，有时候是耗时，有时候就是把东西弄坏。得不偿失，我一般喜欢弄东西的时候完全按教程来，等我把东西弄好了，自己再在再创造。这样一来是为了让我更快的体验到这东西弄好之后是什么样子，二来是为了总结经验方便再创造。","source":"_posts/玩HASS一年的故事 (一).md","raw":"---\ntitle: 讲一个玩 Homeassistant 一年的故事(一)\ndate: 2018-12-19\ncategories: 故事\ncomments: true\n---\n\n## 大家好，以下为我玩 ***HASS*** 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\n\n### 我是如何入坑？\n\t\n那么我就先从入坑开始讲起，大概是 `2017` 年的 `5` 月份我买了一块树莓派，型号是 `3b` ，买这个的初衷是为了玩，看着网上的教程资料发现这个小板子好玩的很呐，感觉无所不能，于是就在淘宝上购买了我的第一块板子，和一些面包板、杜邦线之类的东西。\n\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/1.png\" width=\"50%\" height=\"50%\"/><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/2.png\" width=\"50%\" height=\"50%\"/>\n买了这些东西其实不是为了玩 ***HASS*** ，当时想的是学习传感器以及单片机，自己一心想做个遥控小车出来。然后自己跟着一本印度人写的树莓派应用的书学习，初步了解到了点什么是 **传感器**，什么是 **Linux** 。自己傻乎乎的在那里玩 **超声波** 、**DHT11** 的驱动还以为自己发现了新大陆，觉得自己非常的牛逼。忍不住想在别人面前炫耀，于是自己加了个树莓派交流群，其实里面吹牛的多，干事的少。一天我例行公事在群友面前炫耀自己是怎么用树莓派让我的 **HC-SR04**、**DHT11** 如何工作的，结果有位老哥一声不吭的录了一段视频，视频里的内容我现在都记得，他用 **Siri** 控制了他一个自制的台灯。这种从来没发过话的人，突然发了一个比你还牛的视频，对于我来说无疑是对我巨大的打击，我顿时感觉自己的人格受到了严重的侮辱。我立马加了他好友，他也很很快的添加了我。于是我疯狂的赞美他，夸他是多么多么的牛，希望他也能教教我怎么做。最开始他没理我，于是我第二天又问他是怎么做的，可能是他不耐烦了，就回了我两个词 **homeassistant + homebridge** 就完了，再问他具体怎么做的也不说了，大神的口是真的难开，就回我两个词。再怎么问他都不鸟我了，于是我就在百度上找 **homeassistant homebridge** ，最开始这个资料是真的少，百度了许久才搞懂这个 **Homeassistant** 和 **Homebridge** 是两个东西，**Homeassistant** 可以理解为一个 **Hub** 而 **Homebridge** 应该理解为 `homeassistant to homekit` 的一个网关。百度上有用的资料就两篇，一个是 **老高** 的帖子，另一个是一个不知名的人写的，这两位人就是带我入门的人。老高的贴子最好，他讲的很详细，我的树莓派也因此发挥了它的光和热, 要知道我最初买树莓派并不是为了玩 **Hass** 的，所以这个也就告诉我们一个道理 \"无心插柳柳成阴\" ，他的教程从树莓派刷机到安装 **Homeassistant** ，到配置以及 **Sonoff** 刷固件每个细节都讲了，他还专门录制了视频害怕我们不会，没办法那时候是真的菜，他不讲那么细中间卡一步就够折腾的。\n\n\n就这样照着老高的帖子我跌跌撞撞的在一个星期内成功的用 **Siri** 了我的一个发光二级管的亮灭。于是我按耐不住激动的心情又录了一个 **Siri** 控制发光二级管的视频，这次的视频引起的反响就更大了。连前面我主动加的那位小哥都表示惊讶——\"你这么快就弄好了？\"，呵呵你也不看看我是谁。后面我与这个小哥互相交流了会，发现他也是个狠角色，比我大一级，参加过学校的比赛还获得过奖。顿时我就对他心存敬意，希望有朝一日也像他那样成功。过了几天我又把这个视频拿到群里炫耀，这时一个在 **HomeAssistant智能家居** 群里的人发现了我，并夸赞我东西做的不错，问我是不是也玩 **Homeassistant** 的。不一会他就把我拉到了全国最大的 **Homeassistant** 交流群，进入之后我又发现自己原来又是最菜的，别人都开始研究怎么让空调连接到 **Homeassistant** 了，**Sonoff** 这些别人早会了。\n\n\n\n\n### 这一年我学到了些什么？\n1. #### 我学会了学习新东西的能力\n\t从这张图就看的出我段位不低了，入坑早资料少，所以后面入坑的朋友真心别心急慢慢来，前面已经出了很多教程了，选自己有用的学，学的很快的，毕竟资料很丰富了。我知道有的人跟我一样很依赖问别人，自己不愿意花大功夫去网上找资料。自己经验表明一般来说你的问题在网上都会找到，你要有总结出你的问题并提取关键词的能力，然后拿到网上去搜索一会就找到了，只有你的问题很前沿或者很奇葩的问题才找不到。\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/3.png\" width=\"50%\" height=\"50%\"/>\n2. #### 国外网站要多逛\n\t不得不承认老外是真的强，不是我舔他们。其实我们玩的这些东西都是老外玩了之后我们再玩的。除了 **ESP8266**、**小米设备** 是我们国产的，其余大多都是老外先玩的, **Homeassistant、Homekit、Espeasy、Tasmota、Lovelace……** 他们一般都比我们玩的溜，毕竟是他们写的东西。所以要找新的东西或者找些什么资料啊，去他们的网站找找，学习别人的东西也未尝不可。\n3. #### 要舍得花钱\n\t不得不说玩 ***HASS*** 是真的烧钱，我没玩 ***HASS*** 之前每个月都还会剩个两三百，每个月还会请别人在外面吃顿饭，自从玩了 ***HASS*** 后发现这玩意就是个无底洞。买完树莓买 **Sonoff**，刚把这个买了别人又在玩 **Nodemcu** 了又得买，双十一到了又跟风买天猫精灵，平时还买些传感器和配套的东西之类的，又什么 **WS2812B**、**N1**、**K2P**、**摄像头** 之类的反正我现在每个月都欠蚂蚁花呗钱，活动资金不够了就问朋友借。舍得花钱但到理性消费，买些自己需要的东西就行了，别看见什么就买，买来不用浪费。\n\n**看一张白神设备图**\n<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/4.jpg\" width=\"50%\" height=\"50%\"/>\n4. #### 学到了些新技术\n    学校没学到的玩 **HASS** 学到了些，玩 **HASS** 你起码会学到点 **Linux** 的基础吧，设置开机启动，设置账户，权限，防火墙问题等等，再说 **Linux** 上的软件 **Frp**、**Docker**、**Nginx**、**Shadowsocket** ……也会接触到，反正东西需要自己琢磨。硬件也有从硬件连接到固件烧录，体验过之后就会收获很多，学习的时候要保持敬畏之心。为什么这么说？如果你弄些东西的过程中完全想当然的来做，很容易吃亏，有时候是耗时，有时候就是把东西弄坏。得不偿失，我一般喜欢弄东西的时候完全按教程来，等我把东西弄好了，自己再在再创造。这样一来是为了让我更快的体验到这东西弄好之后是什么样子，二来是为了总结经验方便再创造。","slug":"玩HASS一年的故事 (一)","published":1,"updated":"2019-05-31T09:43:26.339Z","layout":"post","photos":[],"link":"","_id":"cjwc93s6800053tl38ek5tprg","content":"<h2 id=\"大家好，以下为我玩-HASS-一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\"><a href=\"#大家好，以下为我玩-HASS-一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\" class=\"headerlink\" title=\"大家好，以下为我玩 HASS 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\"></a>大家好，以下为我玩 <strong><em>HASS</em></strong> 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。</h2><h3 id=\"我是如何入坑？\"><a href=\"#我是如何入坑？\" class=\"headerlink\" title=\"我是如何入坑？\"></a>我是如何入坑？</h3><p>那么我就先从入坑开始讲起，大概是 <code>2017</code> 年的 <code>5</code> 月份我买了一块树莓派，型号是 <code>3b</code> ，买这个的初衷是为了玩，看着网上的教程资料发现这个小板子好玩的很呐，感觉无所不能，于是就在淘宝上购买了我的第一块板子，和一些面包板、杜邦线之类的东西。</p>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/1.png\" width=\"50%\" height=\"50%\"><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/2.png\" width=\"50%\" height=\"50%\"><br>买了这些东西其实不是为了玩 <strong><em>HASS</em></strong> ，当时想的是学习传感器以及单片机，自己一心想做个遥控小车出来。然后自己跟着一本印度人写的树莓派应用的书学习，初步了解到了点什么是 <strong>传感器</strong>，什么是 <strong>Linux</strong> 。自己傻乎乎的在那里玩 <strong>超声波</strong> 、<strong>DHT11</strong> 的驱动还以为自己发现了新大陆，觉得自己非常的牛逼。忍不住想在别人面前炫耀，于是自己加了个树莓派交流群，其实里面吹牛的多，干事的少。一天我例行公事在群友面前炫耀自己是怎么用树莓派让我的 <strong>HC-SR04</strong>、<strong>DHT11</strong> 如何工作的，结果有位老哥一声不吭的录了一段视频，视频里的内容我现在都记得，他用 <strong>Siri</strong> 控制了他一个自制的台灯。这种从来没发过话的人，突然发了一个比你还牛的视频，对于我来说无疑是对我巨大的打击，我顿时感觉自己的人格受到了严重的侮辱。我立马加了他好友，他也很很快的添加了我。于是我疯狂的赞美他，夸他是多么多么的牛，希望他也能教教我怎么做。最开始他没理我，于是我第二天又问他是怎么做的，可能是他不耐烦了，就回了我两个词 <strong>homeassistant + homebridge</strong> 就完了，再问他具体怎么做的也不说了，大神的口是真的难开，就回我两个词。再怎么问他都不鸟我了，于是我就在百度上找 <strong>homeassistant homebridge</strong> ，最开始这个资料是真的少，百度了许久才搞懂这个 <strong>Homeassistant</strong> 和 <strong>Homebridge</strong> 是两个东西，<strong>Homeassistant</strong> 可以理解为一个 <strong>Hub</strong> 而 <strong>Homebridge</strong> 应该理解为 <code>homeassistant to homekit</code> 的一个网关。百度上有用的资料就两篇，一个是 <strong>老高</strong> 的帖子，另一个是一个不知名的人写的，这两位人就是带我入门的人。老高的贴子最好，他讲的很详细，我的树莓派也因此发挥了它的光和热, 要知道我最初买树莓派并不是为了玩 <strong>Hass</strong> 的，所以这个也就告诉我们一个道理 “无心插柳柳成阴” ，他的教程从树莓派刷机到安装 <strong>Homeassistant</strong> ，到配置以及 <strong>Sonoff</strong> 刷固件每个细节都讲了，他还专门录制了视频害怕我们不会，没办法那时候是真的菜，他不讲那么细中间卡一步就够折腾的。</p>\n<p>就这样照着老高的帖子我跌跌撞撞的在一个星期内成功的用 <strong>Siri</strong> 了我的一个发光二级管的亮灭。于是我按耐不住激动的心情又录了一个 <strong>Siri</strong> 控制发光二级管的视频，这次的视频引起的反响就更大了。连前面我主动加的那位小哥都表示惊讶——“你这么快就弄好了？”，呵呵你也不看看我是谁。后面我与这个小哥互相交流了会，发现他也是个狠角色，比我大一级，参加过学校的比赛还获得过奖。顿时我就对他心存敬意，希望有朝一日也像他那样成功。过了几天我又把这个视频拿到群里炫耀，这时一个在 <strong>HomeAssistant智能家居</strong> 群里的人发现了我，并夸赞我东西做的不错，问我是不是也玩 <strong>Homeassistant</strong> 的。不一会他就把我拉到了全国最大的 <strong>Homeassistant</strong> 交流群，进入之后我又发现自己原来又是最菜的，别人都开始研究怎么让空调连接到 <strong>Homeassistant</strong> 了，<strong>Sonoff</strong> 这些别人早会了。</p>\n<h3 id=\"这一年我学到了些什么？\"><a href=\"#这一年我学到了些什么？\" class=\"headerlink\" title=\"这一年我学到了些什么？\"></a>这一年我学到了些什么？</h3><ol>\n<li><h4 id=\"我学会了学习新东西的能力\"><a href=\"#我学会了学习新东西的能力\" class=\"headerlink\" title=\"我学会了学习新东西的能力\"></a>我学会了学习新东西的能力</h4> 从这张图就看的出我段位不低了，入坑早资料少，所以后面入坑的朋友真心别心急慢慢来，前面已经出了很多教程了，选自己有用的学，学的很快的，毕竟资料很丰富了。我知道有的人跟我一样很依赖问别人，自己不愿意花大功夫去网上找资料。自己经验表明一般来说你的问题在网上都会找到，你要有总结出你的问题并提取关键词的能力，然后拿到网上去搜索一会就找到了，只有你的问题很前沿或者很奇葩的问题才找不到。<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/3.png\" width=\"50%\" height=\"50%\"></li>\n<li><h4 id=\"国外网站要多逛\"><a href=\"#国外网站要多逛\" class=\"headerlink\" title=\"国外网站要多逛\"></a>国外网站要多逛</h4> 不得不承认老外是真的强，不是我舔他们。其实我们玩的这些东西都是老外玩了之后我们再玩的。除了 <strong>ESP8266</strong>、<strong>小米设备</strong> 是我们国产的，其余大多都是老外先玩的, <strong>Homeassistant、Homekit、Espeasy、Tasmota、Lovelace……</strong> 他们一般都比我们玩的溜，毕竟是他们写的东西。所以要找新的东西或者找些什么资料啊，去他们的网站找找，学习别人的东西也未尝不可。</li>\n<li><h4 id=\"要舍得花钱\"><a href=\"#要舍得花钱\" class=\"headerlink\" title=\"要舍得花钱\"></a>要舍得花钱</h4> 不得不说玩 <strong><em>HASS</em></strong> 是真的烧钱，我没玩 <strong><em>HASS</em></strong> 之前每个月都还会剩个两三百，每个月还会请别人在外面吃顿饭，自从玩了 <strong><em>HASS</em></strong> 后发现这玩意就是个无底洞。买完树莓买 <strong>Sonoff</strong>，刚把这个买了别人又在玩 <strong>Nodemcu</strong> 了又得买，双十一到了又跟风买天猫精灵，平时还买些传感器和配套的东西之类的，又什么 <strong>WS2812B</strong>、<strong>N1</strong>、<strong>K2P</strong>、<strong>摄像头</strong> 之类的反正我现在每个月都欠蚂蚁花呗钱，活动资金不够了就问朋友借。舍得花钱但到理性消费，买些自己需要的东西就行了，别看见什么就买，买来不用浪费。</li>\n</ol>\n<p><strong>看一张白神设备图</strong><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/4.jpg\" width=\"50%\" height=\"50%\"></p>\n<ol start=\"4\">\n<li><h4 id=\"学到了些新技术\"><a href=\"#学到了些新技术\" class=\"headerlink\" title=\"学到了些新技术\"></a>学到了些新技术</h4> 学校没学到的玩 <strong>HASS</strong> 学到了些，玩 <strong>HASS</strong> 你起码会学到点 <strong>Linux</strong> 的基础吧，设置开机启动，设置账户，权限，防火墙问题等等，再说 <strong>Linux</strong> 上的软件 <strong>Frp</strong>、<strong>Docker</strong>、<strong>Nginx</strong>、<strong>Shadowsocket</strong> ……也会接触到，反正东西需要自己琢磨。硬件也有从硬件连接到固件烧录，体验过之后就会收获很多，学习的时候要保持敬畏之心。为什么这么说？如果你弄些东西的过程中完全想当然的来做，很容易吃亏，有时候是耗时，有时候就是把东西弄坏。得不偿失，我一般喜欢弄东西的时候完全按教程来，等我把东西弄好了，自己再在再创造。这样一来是为了让我更快的体验到这东西弄好之后是什么样子，二来是为了总结经验方便再创造。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"大家好，以下为我玩-HASS-一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\"><a href=\"#大家好，以下为我玩-HASS-一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\" class=\"headerlink\" title=\"大家好，以下为我玩 HASS 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。\"></a>大家好，以下为我玩 <strong><em>HASS</em></strong> 一年的故事，我将以短小说的形式展现给大家，闲来无事故有此文。文中不谈技术只谈故事与经验。</h2><h3 id=\"我是如何入坑？\"><a href=\"#我是如何入坑？\" class=\"headerlink\" title=\"我是如何入坑？\"></a>我是如何入坑？</h3><p>那么我就先从入坑开始讲起，大概是 <code>2017</code> 年的 <code>5</code> 月份我买了一块树莓派，型号是 <code>3b</code> ，买这个的初衷是为了玩，看着网上的教程资料发现这个小板子好玩的很呐，感觉无所不能，于是就在淘宝上购买了我的第一块板子，和一些面包板、杜邦线之类的东西。</p>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/1.png\" width=\"50%\" height=\"50%\"><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/2.png\" width=\"50%\" height=\"50%\"><br>买了这些东西其实不是为了玩 <strong><em>HASS</em></strong> ，当时想的是学习传感器以及单片机，自己一心想做个遥控小车出来。然后自己跟着一本印度人写的树莓派应用的书学习，初步了解到了点什么是 <strong>传感器</strong>，什么是 <strong>Linux</strong> 。自己傻乎乎的在那里玩 <strong>超声波</strong> 、<strong>DHT11</strong> 的驱动还以为自己发现了新大陆，觉得自己非常的牛逼。忍不住想在别人面前炫耀，于是自己加了个树莓派交流群，其实里面吹牛的多，干事的少。一天我例行公事在群友面前炫耀自己是怎么用树莓派让我的 <strong>HC-SR04</strong>、<strong>DHT11</strong> 如何工作的，结果有位老哥一声不吭的录了一段视频，视频里的内容我现在都记得，他用 <strong>Siri</strong> 控制了他一个自制的台灯。这种从来没发过话的人，突然发了一个比你还牛的视频，对于我来说无疑是对我巨大的打击，我顿时感觉自己的人格受到了严重的侮辱。我立马加了他好友，他也很很快的添加了我。于是我疯狂的赞美他，夸他是多么多么的牛，希望他也能教教我怎么做。最开始他没理我，于是我第二天又问他是怎么做的，可能是他不耐烦了，就回了我两个词 <strong>homeassistant + homebridge</strong> 就完了，再问他具体怎么做的也不说了，大神的口是真的难开，就回我两个词。再怎么问他都不鸟我了，于是我就在百度上找 <strong>homeassistant homebridge</strong> ，最开始这个资料是真的少，百度了许久才搞懂这个 <strong>Homeassistant</strong> 和 <strong>Homebridge</strong> 是两个东西，<strong>Homeassistant</strong> 可以理解为一个 <strong>Hub</strong> 而 <strong>Homebridge</strong> 应该理解为 <code>homeassistant to homekit</code> 的一个网关。百度上有用的资料就两篇，一个是 <strong>老高</strong> 的帖子，另一个是一个不知名的人写的，这两位人就是带我入门的人。老高的贴子最好，他讲的很详细，我的树莓派也因此发挥了它的光和热, 要知道我最初买树莓派并不是为了玩 <strong>Hass</strong> 的，所以这个也就告诉我们一个道理 “无心插柳柳成阴” ，他的教程从树莓派刷机到安装 <strong>Homeassistant</strong> ，到配置以及 <strong>Sonoff</strong> 刷固件每个细节都讲了，他还专门录制了视频害怕我们不会，没办法那时候是真的菜，他不讲那么细中间卡一步就够折腾的。</p>\n<p>就这样照着老高的帖子我跌跌撞撞的在一个星期内成功的用 <strong>Siri</strong> 了我的一个发光二级管的亮灭。于是我按耐不住激动的心情又录了一个 <strong>Siri</strong> 控制发光二级管的视频，这次的视频引起的反响就更大了。连前面我主动加的那位小哥都表示惊讶——“你这么快就弄好了？”，呵呵你也不看看我是谁。后面我与这个小哥互相交流了会，发现他也是个狠角色，比我大一级，参加过学校的比赛还获得过奖。顿时我就对他心存敬意，希望有朝一日也像他那样成功。过了几天我又把这个视频拿到群里炫耀，这时一个在 <strong>HomeAssistant智能家居</strong> 群里的人发现了我，并夸赞我东西做的不错，问我是不是也玩 <strong>Homeassistant</strong> 的。不一会他就把我拉到了全国最大的 <strong>Homeassistant</strong> 交流群，进入之后我又发现自己原来又是最菜的，别人都开始研究怎么让空调连接到 <strong>Homeassistant</strong> 了，<strong>Sonoff</strong> 这些别人早会了。</p>\n<h3 id=\"这一年我学到了些什么？\"><a href=\"#这一年我学到了些什么？\" class=\"headerlink\" title=\"这一年我学到了些什么？\"></a>这一年我学到了些什么？</h3><ol>\n<li><h4 id=\"我学会了学习新东西的能力\"><a href=\"#我学会了学习新东西的能力\" class=\"headerlink\" title=\"我学会了学习新东西的能力\"></a>我学会了学习新东西的能力</h4> 从这张图就看的出我段位不低了，入坑早资料少，所以后面入坑的朋友真心别心急慢慢来，前面已经出了很多教程了，选自己有用的学，学的很快的，毕竟资料很丰富了。我知道有的人跟我一样很依赖问别人，自己不愿意花大功夫去网上找资料。自己经验表明一般来说你的问题在网上都会找到，你要有总结出你的问题并提取关键词的能力，然后拿到网上去搜索一会就找到了，只有你的问题很前沿或者很奇葩的问题才找不到。<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/3.png\" width=\"50%\" height=\"50%\"></li>\n<li><h4 id=\"国外网站要多逛\"><a href=\"#国外网站要多逛\" class=\"headerlink\" title=\"国外网站要多逛\"></a>国外网站要多逛</h4> 不得不承认老外是真的强，不是我舔他们。其实我们玩的这些东西都是老外玩了之后我们再玩的。除了 <strong>ESP8266</strong>、<strong>小米设备</strong> 是我们国产的，其余大多都是老外先玩的, <strong>Homeassistant、Homekit、Espeasy、Tasmota、Lovelace……</strong> 他们一般都比我们玩的溜，毕竟是他们写的东西。所以要找新的东西或者找些什么资料啊，去他们的网站找找，学习别人的东西也未尝不可。</li>\n<li><h4 id=\"要舍得花钱\"><a href=\"#要舍得花钱\" class=\"headerlink\" title=\"要舍得花钱\"></a>要舍得花钱</h4> 不得不说玩 <strong><em>HASS</em></strong> 是真的烧钱，我没玩 <strong><em>HASS</em></strong> 之前每个月都还会剩个两三百，每个月还会请别人在外面吃顿饭，自从玩了 <strong><em>HASS</em></strong> 后发现这玩意就是个无底洞。买完树莓买 <strong>Sonoff</strong>，刚把这个买了别人又在玩 <strong>Nodemcu</strong> 了又得买，双十一到了又跟风买天猫精灵，平时还买些传感器和配套的东西之类的，又什么 <strong>WS2812B</strong>、<strong>N1</strong>、<strong>K2P</strong>、<strong>摄像头</strong> 之类的反正我现在每个月都欠蚂蚁花呗钱，活动资金不够了就问朋友借。舍得花钱但到理性消费，买些自己需要的东西就行了，别看见什么就买，买来不用浪费。</li>\n</ol>\n<p><strong>看一张白神设备图</strong><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/blog_1/4.jpg\" width=\"50%\" height=\"50%\"></p>\n<ol start=\"4\">\n<li><h4 id=\"学到了些新技术\"><a href=\"#学到了些新技术\" class=\"headerlink\" title=\"学到了些新技术\"></a>学到了些新技术</h4> 学校没学到的玩 <strong>HASS</strong> 学到了些，玩 <strong>HASS</strong> 你起码会学到点 <strong>Linux</strong> 的基础吧，设置开机启动，设置账户，权限，防火墙问题等等，再说 <strong>Linux</strong> 上的软件 <strong>Frp</strong>、<strong>Docker</strong>、<strong>Nginx</strong>、<strong>Shadowsocket</strong> ……也会接触到，反正东西需要自己琢磨。硬件也有从硬件连接到固件烧录，体验过之后就会收获很多，学习的时候要保持敬畏之心。为什么这么说？如果你弄些东西的过程中完全想当然的来做，很容易吃亏，有时候是耗时，有时候就是把东西弄坏。得不偿失，我一般喜欢弄东西的时候完全按教程来，等我把东西弄好了，自己再在再创造。这样一来是为了让我更快的体验到这东西弄好之后是什么样子，二来是为了总结经验方便再创造。</li>\n</ol>\n"},{"title":"路由器通过锐捷认证","date":"2018-12-19T00:00:00.000Z","comments":1,"_content":"\n# 为什么一般路由器不能用于校园联通网络认证？\n我们家里常用的路由器一般只支持 [PPPoE协议](https://baike.baidu.com/item/PPPOE/139247?fr=aladdin) , 而我们校园的联通网用的是锐捷认证的方式，这种拨号方式比较特殊所以一般路由器并不支持。[mentohust](https://baike.baidu.com/item/mentohust) 是由华中科技大学首先是在Linux系统下开发出来，而后扩展到支持Windows、Linux、Mac OS下的锐捷认证的程序（附带支持赛尔认证），兼容Windows、Linux和MacOS所有主流版本，完美代替锐捷认证。\n现在市面上的智能路由器的官方固件里一般都集成了这种认证方式，一些路由三方固件也支持这种认证方式，比如 `openwrt` , `ddwrt` , `Pandora` , `梅林` 这些。路由器里面装的就是 `Linux` 系统，就利用 `mentohust` 来实现锐捷认证。所以校园联通网还是可以使用路由器的。这里我讲述一种我自己使用的方式，用 ***极路由1S*** 来上网。至于再刷三方固件的来运行 `mentohust` 的方式也是可以的，只不过这里不做描述。\n\n# 具体操作\n\n## 准备材料\n> * 硬件部分\n> 淘宝上或者咸鱼，转转上去买一个 ***极路由1S*** 买新的一般在100左右，二手的50左右。建议大家买二手，因为路由器不容易坏，一般不用担心无法正常使用这个问题。\n> * 软件部分 \n> \n\n| 软件名 | 功能说明 |\n| ------ | -------- |\n| Putty | ssh连接 |\n| Winscp | 文件传输 |\n| Notepad++ | 编辑器 |\n| Mentohusttool | 抓包 |\n\n[**软件包下载连接**](https://github.com/Caffreyfans/Public-Source/releases/download/1.0/hiwifi-1S.zip)\n所需要的软件全部打包到压缩文件里，解压安装即可使用。软件只能在 `windows 64位` 系统上安装，如果你是其他类型的系统，请自行下载同名软件。软件下载好之后请安装到电脑上，以备使用，这些软件都是我从官方下载打包的，如果不放心请到官方下载同名软件。\n## 申请极路由开发者权限\n当我们拿到路由器并且上电之后，我们首先需要做的就是申请开发者权限。因为这个操作需要官方那边给你授权，这个授权过程会需要几天。申请开发者权限的主要目的是让极路由打开 `ssh` 服务。当我们打开了路由器的 `ssh` 服务就可以通过 `Putty` 远程登陆到路由器操作了。\n\n1. 首先让路由器联网，联网方式可以用无线中继的方式或者用别人连好网的路由器牵根线到自己的路由器![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/3.png) \n\n2. 点开智能插件，选择插件市场![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/1.png) \n\n3. 在全部插件里面选择开发者模式，点击安装![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/2.png) \n\n\n## 抓包与修改包文件\n我们需要用到 `Mentohusttool` 抓包，然后用 `Notepad++` 修改包文件,把自己联通的网线连接到自己的电脑上\n\n1. 打开 `MentoHUSTTool-RP.exe` 后选择开始，弹出来的文件选择框里，从你的 `成都信息工程大学校园网认证客户端` 的安装包文件里选中 `8021.exe` 这个应用程序，然后进入抓包就绪态(客户端默认安装位置为 `C:\\Program Files\\Ruijie Networks\\Ruijie Supplicant` ,自定义位置请自行找到)\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/5.png)\n\n2. 然后在 `成都信息工程大学校园网认证客户端` 里填好自己的账号密码，点击连接抓包程序会自己抓到包\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/4.png)\n\n3. 将抓到的包命名成 `1` 保存在桌面上\n这里需要注意这个 `1.mpf` 文件名不能修改成其他的，因为后面的脚本里设置的就是这个名字，修改成其他的会出错。\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/7.png)\n\n4. 将得到的 `1.mpf` 文件用 `Notepad++` 打开，在 `Notepad++` 里选择插件管理\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/6.png)\n\n5. 在插件管理器里找到 `HEX-Editor` 点击 `Install` 安装，安装成功后重启 `Notepad++`\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/9.png)\n\n6. 在插件里选择 `Hex-Editor` 找到 `View in HEX` 选项并点击，之后你会看到打开文件内容有所变化\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/10.png)\n\n7. 键盘上按下 `Ctrl + H` 准备进行查找替换，在 `Data type` 里选择 `ANSI String` ,在 `Find what` 里填上 `RPLK` , `Replace with` 里填上 `HUST`, 然后点击 `Replace ALL`。修改好之后保存文件,然后就可以关闭前面打开过的程序了\n![Notepad++](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/11.png)\n\n\n## 上传文件并执行 ***Shell*** 命令\n用一根网线连接的你的电脑,或者连接路由器的 `WiFi` ,待你路由器打开了 `开发者模式` 后就可以执行这步操作了\n\n1. 打开 `Winscp` ,在文件协议里选择 `SCP` ,主机名填上 `hiwifi.com` ,端口号填上 `1022` ,用户名填上 `root` ,密码填上你路由器登录密码(默认为 `admin` )\n\n![Winscp](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/12.png)\n\n2. 然后直接将你桌面上修改好的 `1.mpf` 文件直接拖到路由器的 `/root` 文件夹下，待文件传送好了就可以关闭 `Winscp` 了\n![Winscp](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/13.png)\n\n3. 打开 `Putty` , `Host Name` 里面填上 `hiwifi.com` , `Port` 里面填上 `1022` ,然后点击 `Open` 选项，然后在弹出的新窗口的 `login as` 里填上 `root` 之后按下键盘的 `回车键`,然后输入你路由器的登录,密码跟 `Winscp` 里填的是一样的，填密码的时候回没有回显，填好密码之后按下 `回车键` ,成功登录到路由器后台\n\n4. 执行 `shell` 命令,将下列命令复制并粘贴到刚刚打开的路由器命令行里(在putty里点击鼠标右键粘贴),然后按下回车,等脚本执行完了就可以关闭 `Putty` 了\n``` shell\ncd /tmp &&curl -k -o shadow.sh https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/scripts/shadow.sh && sh shadow.sh && rm shadow.sh\n```\n![Putty](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/15.png)\n\n## 复制MAC与开启锐捷认证\n执行完这步就能成功让路由器联网了\n\n1. 在电脑上按下 `Win + r` ,然后在里面输入 `cmd`\n![CMD](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/21.png)\n\n2. 输入 `ipconfig -all` 查询电脑的 `MAC` 地址\n![MAC](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/22.png)\n\n3. 在路由器管理界面的首页中点击 `MAC地址克隆`,在里面选择 `手动输入` ,填上刚才获得的 `MAC` 地址，其中 `-` 用 `:` 代替,然后点击保存\n![MAC](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/23.png)\n\n4. 在路由器的 `互联网` 里打开 `锐捷认证` ,填上图示信息,点击 `8021x.exe` 后面的选择文件并在 `成都信息工程大学校园网认证客户端` 的安装文件中选取同名文件上传, `SuConfig.dat` 、`W32N55.dll` 执行相同操作,然后点击 `提交`\n![锐捷认证](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/17.png)\n\n5. 点击 `查看日志` 当出现如图信息表明认证成功！\n![锐捷认证](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/18.png)\n\n\n## 彩蛋\n\n\n1. 路由器管理界面有个 `安全上网` 这其实是 `SS` 客户端只要你填上你的节点信息,并开启就可以让路由器下的所有设备实现科学上网\n![安全上网](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/20.png)\n\n2. 成功开启 `SS` 之后\n![安全上网](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/19.png)\n","source":"_posts/路由器通过锐捷认证.md","raw":"---\ntitle: 路由器通过锐捷认证\ndate: 2018-12-19\ncategories: 路由器\ncomments: true\n---\n\n# 为什么一般路由器不能用于校园联通网络认证？\n我们家里常用的路由器一般只支持 [PPPoE协议](https://baike.baidu.com/item/PPPOE/139247?fr=aladdin) , 而我们校园的联通网用的是锐捷认证的方式，这种拨号方式比较特殊所以一般路由器并不支持。[mentohust](https://baike.baidu.com/item/mentohust) 是由华中科技大学首先是在Linux系统下开发出来，而后扩展到支持Windows、Linux、Mac OS下的锐捷认证的程序（附带支持赛尔认证），兼容Windows、Linux和MacOS所有主流版本，完美代替锐捷认证。\n现在市面上的智能路由器的官方固件里一般都集成了这种认证方式，一些路由三方固件也支持这种认证方式，比如 `openwrt` , `ddwrt` , `Pandora` , `梅林` 这些。路由器里面装的就是 `Linux` 系统，就利用 `mentohust` 来实现锐捷认证。所以校园联通网还是可以使用路由器的。这里我讲述一种我自己使用的方式，用 ***极路由1S*** 来上网。至于再刷三方固件的来运行 `mentohust` 的方式也是可以的，只不过这里不做描述。\n\n# 具体操作\n\n## 准备材料\n> * 硬件部分\n> 淘宝上或者咸鱼，转转上去买一个 ***极路由1S*** 买新的一般在100左右，二手的50左右。建议大家买二手，因为路由器不容易坏，一般不用担心无法正常使用这个问题。\n> * 软件部分 \n> \n\n| 软件名 | 功能说明 |\n| ------ | -------- |\n| Putty | ssh连接 |\n| Winscp | 文件传输 |\n| Notepad++ | 编辑器 |\n| Mentohusttool | 抓包 |\n\n[**软件包下载连接**](https://github.com/Caffreyfans/Public-Source/releases/download/1.0/hiwifi-1S.zip)\n所需要的软件全部打包到压缩文件里，解压安装即可使用。软件只能在 `windows 64位` 系统上安装，如果你是其他类型的系统，请自行下载同名软件。软件下载好之后请安装到电脑上，以备使用，这些软件都是我从官方下载打包的，如果不放心请到官方下载同名软件。\n## 申请极路由开发者权限\n当我们拿到路由器并且上电之后，我们首先需要做的就是申请开发者权限。因为这个操作需要官方那边给你授权，这个授权过程会需要几天。申请开发者权限的主要目的是让极路由打开 `ssh` 服务。当我们打开了路由器的 `ssh` 服务就可以通过 `Putty` 远程登陆到路由器操作了。\n\n1. 首先让路由器联网，联网方式可以用无线中继的方式或者用别人连好网的路由器牵根线到自己的路由器![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/3.png) \n\n2. 点开智能插件，选择插件市场![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/1.png) \n\n3. 在全部插件里面选择开发者模式，点击安装![已连接网络图](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/2.png) \n\n\n## 抓包与修改包文件\n我们需要用到 `Mentohusttool` 抓包，然后用 `Notepad++` 修改包文件,把自己联通的网线连接到自己的电脑上\n\n1. 打开 `MentoHUSTTool-RP.exe` 后选择开始，弹出来的文件选择框里，从你的 `成都信息工程大学校园网认证客户端` 的安装包文件里选中 `8021.exe` 这个应用程序，然后进入抓包就绪态(客户端默认安装位置为 `C:\\Program Files\\Ruijie Networks\\Ruijie Supplicant` ,自定义位置请自行找到)\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/5.png)\n\n2. 然后在 `成都信息工程大学校园网认证客户端` 里填好自己的账号密码，点击连接抓包程序会自己抓到包\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/4.png)\n\n3. 将抓到的包命名成 `1` 保存在桌面上\n这里需要注意这个 `1.mpf` 文件名不能修改成其他的，因为后面的脚本里设置的就是这个名字，修改成其他的会出错。\n![MentoHUSTool-RP.exe](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/7.png)\n\n4. 将得到的 `1.mpf` 文件用 `Notepad++` 打开，在 `Notepad++` 里选择插件管理\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/6.png)\n\n5. 在插件管理器里找到 `HEX-Editor` 点击 `Install` 安装，安装成功后重启 `Notepad++`\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/9.png)\n\n6. 在插件里选择 `Hex-Editor` 找到 `View in HEX` 选项并点击，之后你会看到打开文件内容有所变化\n![Notepad](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/10.png)\n\n7. 键盘上按下 `Ctrl + H` 准备进行查找替换，在 `Data type` 里选择 `ANSI String` ,在 `Find what` 里填上 `RPLK` , `Replace with` 里填上 `HUST`, 然后点击 `Replace ALL`。修改好之后保存文件,然后就可以关闭前面打开过的程序了\n![Notepad++](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/11.png)\n\n\n## 上传文件并执行 ***Shell*** 命令\n用一根网线连接的你的电脑,或者连接路由器的 `WiFi` ,待你路由器打开了 `开发者模式` 后就可以执行这步操作了\n\n1. 打开 `Winscp` ,在文件协议里选择 `SCP` ,主机名填上 `hiwifi.com` ,端口号填上 `1022` ,用户名填上 `root` ,密码填上你路由器登录密码(默认为 `admin` )\n\n![Winscp](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/12.png)\n\n2. 然后直接将你桌面上修改好的 `1.mpf` 文件直接拖到路由器的 `/root` 文件夹下，待文件传送好了就可以关闭 `Winscp` 了\n![Winscp](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/13.png)\n\n3. 打开 `Putty` , `Host Name` 里面填上 `hiwifi.com` , `Port` 里面填上 `1022` ,然后点击 `Open` 选项，然后在弹出的新窗口的 `login as` 里填上 `root` 之后按下键盘的 `回车键`,然后输入你路由器的登录,密码跟 `Winscp` 里填的是一样的，填密码的时候回没有回显，填好密码之后按下 `回车键` ,成功登录到路由器后台\n\n4. 执行 `shell` 命令,将下列命令复制并粘贴到刚刚打开的路由器命令行里(在putty里点击鼠标右键粘贴),然后按下回车,等脚本执行完了就可以关闭 `Putty` 了\n``` shell\ncd /tmp &&curl -k -o shadow.sh https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/scripts/shadow.sh && sh shadow.sh && rm shadow.sh\n```\n![Putty](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/15.png)\n\n## 复制MAC与开启锐捷认证\n执行完这步就能成功让路由器联网了\n\n1. 在电脑上按下 `Win + r` ,然后在里面输入 `cmd`\n![CMD](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/21.png)\n\n2. 输入 `ipconfig -all` 查询电脑的 `MAC` 地址\n![MAC](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/22.png)\n\n3. 在路由器管理界面的首页中点击 `MAC地址克隆`,在里面选择 `手动输入` ,填上刚才获得的 `MAC` 地址，其中 `-` 用 `:` 代替,然后点击保存\n![MAC](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/23.png)\n\n4. 在路由器的 `互联网` 里打开 `锐捷认证` ,填上图示信息,点击 `8021x.exe` 后面的选择文件并在 `成都信息工程大学校园网认证客户端` 的安装文件中选取同名文件上传, `SuConfig.dat` 、`W32N55.dll` 执行相同操作,然后点击 `提交`\n![锐捷认证](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/17.png)\n\n5. 点击 `查看日志` 当出现如图信息表明认证成功！\n![锐捷认证](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/18.png)\n\n\n## 彩蛋\n\n\n1. 路由器管理界面有个 `安全上网` 这其实是 `SS` 客户端只要你填上你的节点信息,并开启就可以让路由器下的所有设备实现科学上网\n![安全上网](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/20.png)\n\n2. 成功开启 `SS` 之后\n![安全上网](https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/19.png)\n","slug":"路由器通过锐捷认证","published":1,"updated":"2019-05-31T09:43:26.339Z","layout":"post","photos":[],"link":"","_id":"cjwc93sbt000d3tl33i62bgsh","content":"<h1 id=\"为什么一般路由器不能用于校园联通网络认证？\"><a href=\"#为什么一般路由器不能用于校园联通网络认证？\" class=\"headerlink\" title=\"为什么一般路由器不能用于校园联通网络认证？\"></a>为什么一般路由器不能用于校园联通网络认证？</h1><p>我们家里常用的路由器一般只支持 <a href=\"https://baike.baidu.com/item/PPPOE/139247?fr=aladdin\" target=\"_blank\" rel=\"noopener\">PPPoE协议</a> , 而我们校园的联通网用的是锐捷认证的方式，这种拨号方式比较特殊所以一般路由器并不支持。<a href=\"https://baike.baidu.com/item/mentohust\" target=\"_blank\" rel=\"noopener\">mentohust</a> 是由华中科技大学首先是在Linux系统下开发出来，而后扩展到支持Windows、Linux、Mac OS下的锐捷认证的程序（附带支持赛尔认证），兼容Windows、Linux和MacOS所有主流版本，完美代替锐捷认证。<br>现在市面上的智能路由器的官方固件里一般都集成了这种认证方式，一些路由三方固件也支持这种认证方式，比如 <code>openwrt</code> , <code>ddwrt</code> , <code>Pandora</code> , <code>梅林</code> 这些。路由器里面装的就是 <code>Linux</code> 系统，就利用 <code>mentohust</code> 来实现锐捷认证。所以校园联通网还是可以使用路由器的。这里我讲述一种我自己使用的方式，用 <strong><em>极路由1S</em></strong> 来上网。至于再刷三方固件的来运行 <code>mentohust</code> 的方式也是可以的，只不过这里不做描述。</p>\n<h1 id=\"具体操作\"><a href=\"#具体操作\" class=\"headerlink\" title=\"具体操作\"></a>具体操作</h1><h2 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h2><blockquote>\n<ul>\n<li>硬件部分<br>淘宝上或者咸鱼，转转上去买一个 <strong><em>极路由1S</em></strong> 买新的一般在100左右，二手的50左右。建议大家买二手，因为路由器不容易坏，一般不用担心无法正常使用这个问题。</li>\n<li>软件部分 </li>\n</ul>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>软件名</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Putty</td>\n<td>ssh连接</td>\n</tr>\n<tr>\n<td>Winscp</td>\n<td>文件传输</td>\n</tr>\n<tr>\n<td>Notepad++</td>\n<td>编辑器</td>\n</tr>\n<tr>\n<td>Mentohusttool</td>\n<td>抓包</td>\n</tr>\n</tbody></table>\n<p><a href=\"https://github.com/Caffreyfans/Public-Source/releases/download/1.0/hiwifi-1S.zip\" target=\"_blank\" rel=\"noopener\"><strong>软件包下载连接</strong></a><br>所需要的软件全部打包到压缩文件里，解压安装即可使用。软件只能在 <code>windows 64位</code> 系统上安装，如果你是其他类型的系统，请自行下载同名软件。软件下载好之后请安装到电脑上，以备使用，这些软件都是我从官方下载打包的，如果不放心请到官方下载同名软件。</p>\n<h2 id=\"申请极路由开发者权限\"><a href=\"#申请极路由开发者权限\" class=\"headerlink\" title=\"申请极路由开发者权限\"></a>申请极路由开发者权限</h2><p>当我们拿到路由器并且上电之后，我们首先需要做的就是申请开发者权限。因为这个操作需要官方那边给你授权，这个授权过程会需要几天。申请开发者权限的主要目的是让极路由打开 <code>ssh</code> 服务。当我们打开了路由器的 <code>ssh</code> 服务就可以通过 <code>Putty</code> 远程登陆到路由器操作了。</p>\n<ol>\n<li><p>首先让路由器联网，联网方式可以用无线中继的方式或者用别人连好网的路由器牵根线到自己的路由器<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/3.png\" alt=\"已连接网络图\"> </p>\n</li>\n<li><p>点开智能插件，选择插件市场<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/1.png\" alt=\"已连接网络图\"> </p>\n</li>\n<li><p>在全部插件里面选择开发者模式，点击安装<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/2.png\" alt=\"已连接网络图\"> </p>\n</li>\n</ol>\n<h2 id=\"抓包与修改包文件\"><a href=\"#抓包与修改包文件\" class=\"headerlink\" title=\"抓包与修改包文件\"></a>抓包与修改包文件</h2><p>我们需要用到 <code>Mentohusttool</code> 抓包，然后用 <code>Notepad++</code> 修改包文件,把自己联通的网线连接到自己的电脑上</p>\n<ol>\n<li><p>打开 <code>MentoHUSTTool-RP.exe</code> 后选择开始，弹出来的文件选择框里，从你的 <code>成都信息工程大学校园网认证客户端</code> 的安装包文件里选中 <code>8021.exe</code> 这个应用程序，然后进入抓包就绪态(客户端默认安装位置为 <code>C:\\Program Files\\Ruijie Networks\\Ruijie Supplicant</code> ,自定义位置请自行找到)<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/5.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>然后在 <code>成都信息工程大学校园网认证客户端</code> 里填好自己的账号密码，点击连接抓包程序会自己抓到包<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/4.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>将抓到的包命名成 <code>1</code> 保存在桌面上<br>这里需要注意这个 <code>1.mpf</code> 文件名不能修改成其他的，因为后面的脚本里设置的就是这个名字，修改成其他的会出错。<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/7.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>将得到的 <code>1.mpf</code> 文件用 <code>Notepad++</code> 打开，在 <code>Notepad++</code> 里选择插件管理<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/6.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>在插件管理器里找到 <code>HEX-Editor</code> 点击 <code>Install</code> 安装，安装成功后重启 <code>Notepad++</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/9.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>在插件里选择 <code>Hex-Editor</code> 找到 <code>View in HEX</code> 选项并点击，之后你会看到打开文件内容有所变化<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/10.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>键盘上按下 <code>Ctrl + H</code> 准备进行查找替换，在 <code>Data type</code> 里选择 <code>ANSI String</code> ,在 <code>Find what</code> 里填上 <code>RPLK</code> , <code>Replace with</code> 里填上 <code>HUST</code>, 然后点击 <code>Replace ALL</code>。修改好之后保存文件,然后就可以关闭前面打开过的程序了<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/11.png\" alt=\"Notepad++\"></p>\n</li>\n</ol>\n<h2 id=\"上传文件并执行-Shell-命令\"><a href=\"#上传文件并执行-Shell-命令\" class=\"headerlink\" title=\"上传文件并执行 Shell 命令\"></a>上传文件并执行 <strong><em>Shell</em></strong> 命令</h2><p>用一根网线连接的你的电脑,或者连接路由器的 <code>WiFi</code> ,待你路由器打开了 <code>开发者模式</code> 后就可以执行这步操作了</p>\n<ol>\n<li>打开 <code>Winscp</code> ,在文件协议里选择 <code>SCP</code> ,主机名填上 <code>hiwifi.com</code> ,端口号填上 <code>1022</code> ,用户名填上 <code>root</code> ,密码填上你路由器登录密码(默认为 <code>admin</code> )</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/12.png\" alt=\"Winscp\"></p>\n<ol start=\"2\">\n<li><p>然后直接将你桌面上修改好的 <code>1.mpf</code> 文件直接拖到路由器的 <code>/root</code> 文件夹下，待文件传送好了就可以关闭 <code>Winscp</code> 了<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/13.png\" alt=\"Winscp\"></p>\n</li>\n<li><p>打开 <code>Putty</code> , <code>Host Name</code> 里面填上 <code>hiwifi.com</code> , <code>Port</code> 里面填上 <code>1022</code> ,然后点击 <code>Open</code> 选项，然后在弹出的新窗口的 <code>login as</code> 里填上 <code>root</code> 之后按下键盘的 <code>回车键</code>,然后输入你路由器的登录,密码跟 <code>Winscp</code> 里填的是一样的，填密码的时候回没有回显，填好密码之后按下 <code>回车键</code> ,成功登录到路由器后台</p>\n</li>\n<li><p>执行 <code>shell</code> 命令,将下列命令复制并粘贴到刚刚打开的路由器命令行里(在putty里点击鼠标右键粘贴),然后按下回车,等脚本执行完了就可以关闭 <code>Putty</code> 了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp;curl -k -o shadow.sh https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/scripts/shadow.sh &amp;&amp; sh shadow.sh &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/15.png\" alt=\"Putty\"></p>\n<h2 id=\"复制MAC与开启锐捷认证\"><a href=\"#复制MAC与开启锐捷认证\" class=\"headerlink\" title=\"复制MAC与开启锐捷认证\"></a>复制MAC与开启锐捷认证</h2><p>执行完这步就能成功让路由器联网了</p>\n<ol>\n<li><p>在电脑上按下 <code>Win + r</code> ,然后在里面输入 <code>cmd</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/21.png\" alt=\"CMD\"></p>\n</li>\n<li><p>输入 <code>ipconfig -all</code> 查询电脑的 <code>MAC</code> 地址<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/22.png\" alt=\"MAC\"></p>\n</li>\n<li><p>在路由器管理界面的首页中点击 <code>MAC地址克隆</code>,在里面选择 <code>手动输入</code> ,填上刚才获得的 <code>MAC</code> 地址，其中 <code>-</code> 用 <code>:</code> 代替,然后点击保存<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/23.png\" alt=\"MAC\"></p>\n</li>\n<li><p>在路由器的 <code>互联网</code> 里打开 <code>锐捷认证</code> ,填上图示信息,点击 <code>8021x.exe</code> 后面的选择文件并在 <code>成都信息工程大学校园网认证客户端</code> 的安装文件中选取同名文件上传, <code>SuConfig.dat</code> 、<code>W32N55.dll</code> 执行相同操作,然后点击 <code>提交</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/17.png\" alt=\"锐捷认证\"></p>\n</li>\n<li><p>点击 <code>查看日志</code> 当出现如图信息表明认证成功！<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/18.png\" alt=\"锐捷认证\"></p>\n</li>\n</ol>\n<h2 id=\"彩蛋\"><a href=\"#彩蛋\" class=\"headerlink\" title=\"彩蛋\"></a>彩蛋</h2><ol>\n<li><p>路由器管理界面有个 <code>安全上网</code> 这其实是 <code>SS</code> 客户端只要你填上你的节点信息,并开启就可以让路由器下的所有设备实现科学上网<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/20.png\" alt=\"安全上网\"></p>\n</li>\n<li><p>成功开启 <code>SS</code> 之后<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/19.png\" alt=\"安全上网\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"为什么一般路由器不能用于校园联通网络认证？\"><a href=\"#为什么一般路由器不能用于校园联通网络认证？\" class=\"headerlink\" title=\"为什么一般路由器不能用于校园联通网络认证？\"></a>为什么一般路由器不能用于校园联通网络认证？</h1><p>我们家里常用的路由器一般只支持 <a href=\"https://baike.baidu.com/item/PPPOE/139247?fr=aladdin\" target=\"_blank\" rel=\"noopener\">PPPoE协议</a> , 而我们校园的联通网用的是锐捷认证的方式，这种拨号方式比较特殊所以一般路由器并不支持。<a href=\"https://baike.baidu.com/item/mentohust\" target=\"_blank\" rel=\"noopener\">mentohust</a> 是由华中科技大学首先是在Linux系统下开发出来，而后扩展到支持Windows、Linux、Mac OS下的锐捷认证的程序（附带支持赛尔认证），兼容Windows、Linux和MacOS所有主流版本，完美代替锐捷认证。<br>现在市面上的智能路由器的官方固件里一般都集成了这种认证方式，一些路由三方固件也支持这种认证方式，比如 <code>openwrt</code> , <code>ddwrt</code> , <code>Pandora</code> , <code>梅林</code> 这些。路由器里面装的就是 <code>Linux</code> 系统，就利用 <code>mentohust</code> 来实现锐捷认证。所以校园联通网还是可以使用路由器的。这里我讲述一种我自己使用的方式，用 <strong><em>极路由1S</em></strong> 来上网。至于再刷三方固件的来运行 <code>mentohust</code> 的方式也是可以的，只不过这里不做描述。</p>\n<h1 id=\"具体操作\"><a href=\"#具体操作\" class=\"headerlink\" title=\"具体操作\"></a>具体操作</h1><h2 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h2><blockquote>\n<ul>\n<li>硬件部分<br>淘宝上或者咸鱼，转转上去买一个 <strong><em>极路由1S</em></strong> 买新的一般在100左右，二手的50左右。建议大家买二手，因为路由器不容易坏，一般不用担心无法正常使用这个问题。</li>\n<li>软件部分 </li>\n</ul>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>软件名</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Putty</td>\n<td>ssh连接</td>\n</tr>\n<tr>\n<td>Winscp</td>\n<td>文件传输</td>\n</tr>\n<tr>\n<td>Notepad++</td>\n<td>编辑器</td>\n</tr>\n<tr>\n<td>Mentohusttool</td>\n<td>抓包</td>\n</tr>\n</tbody></table>\n<p><a href=\"https://github.com/Caffreyfans/Public-Source/releases/download/1.0/hiwifi-1S.zip\" target=\"_blank\" rel=\"noopener\"><strong>软件包下载连接</strong></a><br>所需要的软件全部打包到压缩文件里，解压安装即可使用。软件只能在 <code>windows 64位</code> 系统上安装，如果你是其他类型的系统，请自行下载同名软件。软件下载好之后请安装到电脑上，以备使用，这些软件都是我从官方下载打包的，如果不放心请到官方下载同名软件。</p>\n<h2 id=\"申请极路由开发者权限\"><a href=\"#申请极路由开发者权限\" class=\"headerlink\" title=\"申请极路由开发者权限\"></a>申请极路由开发者权限</h2><p>当我们拿到路由器并且上电之后，我们首先需要做的就是申请开发者权限。因为这个操作需要官方那边给你授权，这个授权过程会需要几天。申请开发者权限的主要目的是让极路由打开 <code>ssh</code> 服务。当我们打开了路由器的 <code>ssh</code> 服务就可以通过 <code>Putty</code> 远程登陆到路由器操作了。</p>\n<ol>\n<li><p>首先让路由器联网，联网方式可以用无线中继的方式或者用别人连好网的路由器牵根线到自己的路由器<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/3.png\" alt=\"已连接网络图\"> </p>\n</li>\n<li><p>点开智能插件，选择插件市场<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/1.png\" alt=\"已连接网络图\"> </p>\n</li>\n<li><p>在全部插件里面选择开发者模式，点击安装<img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/2.png\" alt=\"已连接网络图\"> </p>\n</li>\n</ol>\n<h2 id=\"抓包与修改包文件\"><a href=\"#抓包与修改包文件\" class=\"headerlink\" title=\"抓包与修改包文件\"></a>抓包与修改包文件</h2><p>我们需要用到 <code>Mentohusttool</code> 抓包，然后用 <code>Notepad++</code> 修改包文件,把自己联通的网线连接到自己的电脑上</p>\n<ol>\n<li><p>打开 <code>MentoHUSTTool-RP.exe</code> 后选择开始，弹出来的文件选择框里，从你的 <code>成都信息工程大学校园网认证客户端</code> 的安装包文件里选中 <code>8021.exe</code> 这个应用程序，然后进入抓包就绪态(客户端默认安装位置为 <code>C:\\Program Files\\Ruijie Networks\\Ruijie Supplicant</code> ,自定义位置请自行找到)<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/5.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>然后在 <code>成都信息工程大学校园网认证客户端</code> 里填好自己的账号密码，点击连接抓包程序会自己抓到包<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/4.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>将抓到的包命名成 <code>1</code> 保存在桌面上<br>这里需要注意这个 <code>1.mpf</code> 文件名不能修改成其他的，因为后面的脚本里设置的就是这个名字，修改成其他的会出错。<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/7.png\" alt=\"MentoHUSTool-RP.exe\"></p>\n</li>\n<li><p>将得到的 <code>1.mpf</code> 文件用 <code>Notepad++</code> 打开，在 <code>Notepad++</code> 里选择插件管理<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/6.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>在插件管理器里找到 <code>HEX-Editor</code> 点击 <code>Install</code> 安装，安装成功后重启 <code>Notepad++</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/9.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>在插件里选择 <code>Hex-Editor</code> 找到 <code>View in HEX</code> 选项并点击，之后你会看到打开文件内容有所变化<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/10.png\" alt=\"Notepad\"></p>\n</li>\n<li><p>键盘上按下 <code>Ctrl + H</code> 准备进行查找替换，在 <code>Data type</code> 里选择 <code>ANSI String</code> ,在 <code>Find what</code> 里填上 <code>RPLK</code> , <code>Replace with</code> 里填上 <code>HUST</code>, 然后点击 <code>Replace ALL</code>。修改好之后保存文件,然后就可以关闭前面打开过的程序了<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/11.png\" alt=\"Notepad++\"></p>\n</li>\n</ol>\n<h2 id=\"上传文件并执行-Shell-命令\"><a href=\"#上传文件并执行-Shell-命令\" class=\"headerlink\" title=\"上传文件并执行 Shell 命令\"></a>上传文件并执行 <strong><em>Shell</em></strong> 命令</h2><p>用一根网线连接的你的电脑,或者连接路由器的 <code>WiFi</code> ,待你路由器打开了 <code>开发者模式</code> 后就可以执行这步操作了</p>\n<ol>\n<li>打开 <code>Winscp</code> ,在文件协议里选择 <code>SCP</code> ,主机名填上 <code>hiwifi.com</code> ,端口号填上 <code>1022</code> ,用户名填上 <code>root</code> ,密码填上你路由器登录密码(默认为 <code>admin</code> )</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/12.png\" alt=\"Winscp\"></p>\n<ol start=\"2\">\n<li><p>然后直接将你桌面上修改好的 <code>1.mpf</code> 文件直接拖到路由器的 <code>/root</code> 文件夹下，待文件传送好了就可以关闭 <code>Winscp</code> 了<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/13.png\" alt=\"Winscp\"></p>\n</li>\n<li><p>打开 <code>Putty</code> , <code>Host Name</code> 里面填上 <code>hiwifi.com</code> , <code>Port</code> 里面填上 <code>1022</code> ,然后点击 <code>Open</code> 选项，然后在弹出的新窗口的 <code>login as</code> 里填上 <code>root</code> 之后按下键盘的 <code>回车键</code>,然后输入你路由器的登录,密码跟 <code>Winscp</code> 里填的是一样的，填密码的时候回没有回显，填好密码之后按下 <code>回车键</code> ,成功登录到路由器后台</p>\n</li>\n<li><p>执行 <code>shell</code> 命令,将下列命令复制并粘贴到刚刚打开的路由器命令行里(在putty里点击鼠标右键粘贴),然后按下回车,等脚本执行完了就可以关闭 <code>Putty</code> 了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp;curl -k -o shadow.sh https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/scripts/shadow.sh &amp;&amp; sh shadow.sh &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/15.png\" alt=\"Putty\"></p>\n<h2 id=\"复制MAC与开启锐捷认证\"><a href=\"#复制MAC与开启锐捷认证\" class=\"headerlink\" title=\"复制MAC与开启锐捷认证\"></a>复制MAC与开启锐捷认证</h2><p>执行完这步就能成功让路由器联网了</p>\n<ol>\n<li><p>在电脑上按下 <code>Win + r</code> ,然后在里面输入 <code>cmd</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/21.png\" alt=\"CMD\"></p>\n</li>\n<li><p>输入 <code>ipconfig -all</code> 查询电脑的 <code>MAC</code> 地址<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/22.png\" alt=\"MAC\"></p>\n</li>\n<li><p>在路由器管理界面的首页中点击 <code>MAC地址克隆</code>,在里面选择 <code>手动输入</code> ,填上刚才获得的 <code>MAC</code> 地址，其中 <code>-</code> 用 <code>:</code> 代替,然后点击保存<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/23.png\" alt=\"MAC\"></p>\n</li>\n<li><p>在路由器的 <code>互联网</code> 里打开 <code>锐捷认证</code> ,填上图示信息,点击 <code>8021x.exe</code> 后面的选择文件并在 <code>成都信息工程大学校园网认证客户端</code> 的安装文件中选取同名文件上传, <code>SuConfig.dat</code> 、<code>W32N55.dll</code> 执行相同操作,然后点击 <code>提交</code><br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/17.png\" alt=\"锐捷认证\"></p>\n</li>\n<li><p>点击 <code>查看日志</code> 当出现如图信息表明认证成功！<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/18.png\" alt=\"锐捷认证\"></p>\n</li>\n</ol>\n<h2 id=\"彩蛋\"><a href=\"#彩蛋\" class=\"headerlink\" title=\"彩蛋\"></a>彩蛋</h2><ol>\n<li><p>路由器管理界面有个 <code>安全上网</code> 这其实是 <code>SS</code> 客户端只要你填上你的节点信息,并开启就可以让路由器下的所有设备实现科学上网<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/20.png\" alt=\"安全上网\"></p>\n</li>\n<li><p>成功开启 <code>SS</code> 之后<br><img src=\"https://raw.githubusercontent.com/Caffreyfans/Public-Source/master/pictures/router%20pictures/19.png\" alt=\"安全上网\"></p>\n</li>\n</ol>\n"},{"title":"软件测试复习概要","date":"2019-01-05T00:00:00.000Z","_content":"\n- [x] 软件测试常用的概念，常用的分类，测试的目的，方法等\n- [x] 软件测试静态测试的概念，技术，分类，执行过程，涉及的活动，测试的对象等\n- [x] 软件测试的模型分类，个各模型的特点，适用场景，规划的阶段及其关系，表达的图形等\n- [x] 面向对象的软件测试概念，与软件开发以及普通测试的关系等\n- [x] 集成测试、系统测试的概念，划分的阶段，先后执行的顺序，输入、输出成果物等\n- [x] 黑盒测试、白盒测试的概念，常用的方法，测试用例的设计过程，以及执行的过程如何实施等\n- [x] 等价类划分、边界值测试、三明治集成测试等概念、用例设计、实施过程\n- [x] 因果图法的概念，用例设计，执行步骤等\n- [x] 基本路径测试法概念，用例设计过程，实施执行过程等（控制流图画法、环形复杂度计算、基本路径获取、用例设计及执行等）\n- [x] 单元测试的概念，主要任务，使用的方法等\n- [x] 软件测试与调试的区别与联系，软件缺陷的概念及其相关知识\n\n<!-- ttoc -->\n\n## 1. 软件测试\n### 1.1 软件测试概念\n1. IEEE 在1983年将软件测试定义为“使用人工或者自动化手段运行或测定某个系统的过程，其目的在于检验他是否满足规定的需求或者是弄清预期结果与实际结果之间的差别“，该定义明确地提出了软件测试以检验是否为目标。\n2. Myers则认为软件测试“是为了发现错误而执行的程序过程”，明确提出了“寻找错误”是测试目的。\n3. 从软件质量保证的角度看，软件测试是一种重要的软件质量保证活动，其动机是通过一些经济、高效的方法，捕捉软件中的错误，从而达到保证软件内在质量的目的。\n\n### 1.2. 软件测试目的\n* 软件测试是为了发现错误而执行程序的过程\n* 测试是为了证明程序有错，而不是证明程序无错\n* 一个好的测试用例在于他能发现至今未发现的错误\n* 一个成功的测试是发现了至今未发现的错误的测试\n\n### 1.3. 软件测试技术分类\n|分类方法||\n|-|-|\n|从是否需要执行被测软件的角度|静态测试、动态测试|\n|从软件测试用例实际方法|黑盒测试、白盒测试|\n|按照软件测试的策略和过程|单元测试、集成测试、确认测试、系统测试、验收测试|\n\n## 2 静态测试\n### 2.1. 静态测试概念\n那些不利用计算机运行被测程序，而是通过其他手段达到测试目的的方法称作静态测试。换句话说，就是计算机并不真正运行被测试的程序，如在项目开发中存在着大量的规格说明，而说明规格是无法用计算机来运行的，所以对于这些软件的规格说明的测试就属于静态测试。\n\n### 2.2. 静态测试主要方法\n- 主要方法：**代码检查、走查、桌面检查、同行评分**\n  - **代码检查**: 所谓代码检查，是以组为单位阅读代码，他是一系列规则和错误检查技术的集合。对代码检查的大多数讨论都集中在规程、所要填写的表格等。这里对整个规程进行简短的概述。\n     - 为代码检查分发材料、安排进程\n     - 在代码检查中起主要作用\n     - 记录发现的所有错误\n     - 确保所有错误能够及时得到修正\n  - **代码走查**：代码走查与代码检查很相似，都是以小组我单位进行代码阅读，是一系列规程和错误检查技术的集合。代码走查的过程与代码检查大体相同，代码走查也是采用持续一至两个小时的不间断会议的形式。但是稍微所有不同，采用的错误检查技术也不一样。\n    代码走查小组有3~5人组成，其中一个人扮演类似代码检查过程中“协调人员”的角色，一个人担任秘书（负责记录所有查出的错误），还有一个人担任测试人员。建议在代码走查小组这最好包括如下人员：\n    （1）一位经验丰富的程序员；\n    （2）一位程序设计语言专家；\n    （3）一位初级程序员（可以给出新颖、不带偏见的观点）；\n    （4）将要负责程序维护的人员\n    （5）一位其他项目的人员\n    （6）一位来自该软件编程小组的程序员\n\n  - **桌面检查**: 可以把桌面检查看作是由个人进行的代码检查或代码走查，即一个人阅读程序，对照错误列表检查程序，使用测试数据对程序进行推演。对于大多数人而言，桌面检查的效率是相当低的。其中的一个原因就是这个过程本身不受到任何约束。另外一个重要原因就是程序员常常不能够有效地测试自己编写的程序。因此最好由其他人而非该程序的编写人员进行桌面检查（例如可以让程序员之间相互交换各自编写的程序，避免自己对自己编写的程序进行桌面检查）。但是使用桌面检查的方法进行软件测试所得到的效果无法同代码走查或代码检查相比。代码检查和代码走查小组由多人组成，能够产生相互促进的效应。如果小组会议能够营造一种良性竞争的气氛，那么工作人员就能够乐于通过发现问题来展示自己的能力。而在桌面检查中，是无法做到这一点的。简而言之，桌面检查胜过没有检查，但测试效果远远不能同代码检查和代码走查相比。\n  - **同行评分**：虽然这种人工评审方法的目的是为了程序员提供一个自我评价的手段，与程序测试并无关系（其目标不是为了发现错误）。但是因为他与代码阅读的思想有关，是一种依据程序整体质量、可维护性、可扩展性、易用行和清晰性对匿名程序进行评价的技术。因此，有必要对其进行简单的了解。大致过程如下：首先挑选一位程序员担任评分过程的管理员，管理员再挑选出大约6~20名具备相似背景的参与者（例如，不同把Java应用程序员与汇编语言系统程序员编为一组）。每个参与者都提供两者由自己编写的程序以供评审，其中的一个程序是能代表参与者自身能力的最好作品，而另一个就是参与者认为质量较差的作品。\n\n## 3. 软件测试与调试的区别与联系\n白盒测试与调试的最终目的都是为了让被测应用(AUT)可以正常安全地运行，都是保证软件质量过程的一个环节。那么，白盒测试与调试有哪些不同呢？\n\n从承担的任务来看，白盒测试同其他类型测试一样，他的任务是发现所开发的项目中的缺陷；但是，调试不属于测试，其任务是纠正软件中的缺陷。\n\n从最终的结果来看，白盒测试有预知的结果，不可预知的知识程序是否通过测试，并且成功测试的结果是发现错误的症状，从而引起调试的进行；而调试的结果是消除项目中的错误。\n\n从执行的过程来看，软件测试只是发现程序中有错误的迹象，没有错误定位，也不需要找到出错原因；软件调试是根据测试报告的记录，在软件测试后纠正错误的工作，包括确定错误位置和修改错误。测试是一个错误发现、改正错误、重新测试的过程；而调试是一个推理过程。\n\n从准备工作来看，测试从已知的调试开始，使用预先定义的程序；调试是以不可知的内部条件开始，做统一性调试。\n\n从执行的计划性来看，测试是有计划的并要进行测试设计；而调试则不受时间约束。\n\n从测试的执行人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。\n\n测试的执行是有规程的，而调试的执行往往要求程序员进行必要推理以至知觉的“飞跃”。\n\n从执行的人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。\n\n从所使用的工具来看，大多数白盒测试的执行和设计可由工具支持，而调试程序员能利用的工具主要是调试器。\n\n## 4. 软件缺陷的概念\n1. 软件没有实现产品的说明书所描述的功能。\n2. 软件实现了产品说明书描述不应有的功能。\n3. 软件执行了产品说明书没讲的操作。\n4. 软件没有实现产品说明书没讲但应该实现的功能。\n5. 从软件测试员的角度来看，软件难以理解、不易使用、运行缓慢，或者最终用户认为不对。\n\n\n## 5. 单元测试\n### 5.1. 单元测试定义\n单元测试是在软件开发过程中要进行的最低级别的测试活动，或者说是针对软件设计的最小单位—程序模块，进行正确性检查的测试工作。其目的在于发现每个程序模块内部可能存在的差错。在单元测试活动中，软件的独立单元在与程序的其他部分相隔离的情况下进行测试。\n\n### 5.2. 单元测试主要任务\n主要工作分为两个步骤：人工静态检查和动态执行跟踪。前者主要是保证代码算法的逻辑正确性（尽量通过人工检查发现代码的逻辑错误）、清晰性、规范性、一致性、算法高效性，并尽可能地发现程序程序中没有发现的错误。后者就是通过设计测试用例，执行待测程序来跟踪比较实际结果与预期结果来发现错误。\n    \n    （1）正确性是指代码逻辑必须正确，能够实现预期的功能\n    （2）清晰性是指代码必须简明、易懂，注释准确没有歧义；\n    （3）规范性是指代码必须符合企业或部门所定义的共同规范，包括命名规则，代码风格\n    （4）一致性是指代码必须在命名上（如相同功能的变量尽量采用相同的标示符）、风格上都保持统一；\n    （5）高效性是指代码不但要满足以上性质，而且需要尽可能降低代码的执行时间。\n\n### 5.3. 单元测试使用方法\n基于代码的白盒测试\n\n## 6. 集成测试\n### 6.1 集成测试定义\n根据实际情况对成语模块采用适当的集成测试策略组装起来，对系统接口以及集成后的功能进行正确性检验的测试工作。\n\n### 6.2 集成测试策略\n#### 6.2.1 三明治集成\n\n    （1）目的：综合利用自顶向下和自底向上两种集成测试策略的优点\n    （2）定义：三明治集成是一种混合增值式测试策略，综合了自顶向下和自顶向上两种集成方法的优点，因此也属于基于功能分解测试。\n    \n### 6.3 集成测试过程\n```gantt\n    title 集成测试过程\n        制定集成测试计划: a,1d\n        设计集成测试: 1d\n        实施集成测试: 1d\n        执行集成测试: 1d\n        评估集成测试: 1d\n```\n\n## 7. 系统测试\n### 7.1. 系统测试的定义\n将已经集成好的软件系统，作为整个计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行（使用）环境下，对计算机系统进行一系列的组装测试和确认测试。\n\n#### 7.2. 集成测试过程\n```gantt\n    title 系统测试过程\n        制定系统测试计划: a,1d\n        设计系统测试: 1d\n        实施系统测试: 1d\n        执行系统测试: 1d\n        评估系统测试: 1d\n``` \n\n## 8. 软件测试模型\n### 8.1. V模型\n      用户需求                      验收测试  \n        需求分析和系统设计      确认测试和系统测试 \n             概要设计         集成测试\n                详细设计   单元测试\n                       编码\n                       \n经典的V模型阶段可以分为\n\n* 单元测试\n* 集成测试\n* 系统测试\n\n**模型特点**：V模型的价值主要在于他非常明确地标明了测试过程中存在的不同级别，并且清楚地描述了这些测试阶段和开发过程期间的对应关系:\n\n* 单元测试的主要目的是根据详细设计说明书来验证和确认每个单元模块是否符合预期的要求，发现编码过程中可能存在的各种错误。\n* 集成测试主要目的是根据概要设计来验证和确认各个模块是否已正确集成到一起，主要是检查各单元与其他模块之间的接口上可能存在的错误。\n* 系统测试主要目的是根据需求定义，验证和确认系统作为一个整体是否能够正常有效地运行，例如，判断系统是否达到了用户预期的性能。\n\n### 8.2. W模型\nW模型中测试与开发对应关系如下：\n开发：需求分析、概要设计、　　详细设计、　　编码、　　软件集成、系统集成、部署\n　　　　　↑　　　　↑　　　　　　　↑　　　　　↑　　　　　　↑　　　　↑　　　↑\n测试：需求评审、概要设计评审、详细设计评审、单元测试、集成测试、系统测试、验收测试\n\nW模型强调：测试伴随着整个软件开发周期，而且测试的对象不仅仅是程序，需求、设计等同样要测试，也就是说，测试与开发是同步进行的。W模型有利于尽早地全面的发现问题。例如，需求分析完成后，测试人员就应该参与到对需求的验证和确认活动中，以尽早地找出缺陷所在。同时，对需求的测试也有利于及时了解项目难度和测试风险，及早制定应对措施，这将显著减少总体测试时间，加快项目进度。 但W模型也存在局限性。在W模型中，需求、设计、编码等活动被视为串行的，同时，测试和开发活动也保持着一种线性的前后关系，上一阶段完全结束，才可正式开始下一个阶段工作。这样就无法支持迭代的开发模型。对于当前软件开发复杂多变的情况，W模型并不能解除测试管理面临着困惑。\n\n### 8.3. H模型\n在H模型中，软件测试的过程活动完全独立，形成了一个完全独立的流程，贯穿于整个产品的周期，与其他流程并发进行，某个测试点准备就绪后就可以从测试准备阶段进行到测试执行阶段；软件测试可以根据被测产品的不同分层进行。\n\nH模型揭示了：\n    （1）软件测试不仅仅指测试的执行，还包括很多其他活动。\n    （2）软件测试是一个独立的流程，贯穿产品的整个开发周期，与其他流程并发进行。\n    （3）软件测试要尽早准备，尽早执行。\n    （4）软件测试根据被测物的不同是分层次的，不同层次的测试活动可以是按照某个次序先后进行的，但也可能是反复的。\n    \n## 9. 面向对象测试\n### 9.1.1 面向对象测试基本概念\n面向软件测试技术是新兴的软件测试技术，是专门针对使用面向对象技术开发的软件而提出的一种测试技术。其目的是为了解决传统的软件测试技术，面对面向对象技术开发的软件多少显得有些力不从心的现象。面向对象开发技术和传统的开发技术相比，新增了多态、继承、封装等特点。这些新特点使得开发出来的程序，具有更好的结构更规范的编程风格, 极大地优化了数据使用的安全性, 提高了代码的重用率。由此可见，它们是面向对象开发技术产生巨大吸引力的重要因素。然而，另一方面也影响了软件测试的方法和内容；增加了软件测试的难度；带来了传统软件设计技术所不存在的错误；或者使得传统软件测试中的重点不再显得突出；或者使原来测试经验认为和实践证明的次要方面成为了主要问题。\n\n## 10. 黑白盒测试\n### 10.1. 黑盒测试概念\n黑盒测试也称作功能测试和行为测试，主要是根据功能需求来测试程序是否按照预期工作。黑盒测试的目的是尽量发现代码所表现的外部行为的错误，主要有以下几类：\n\n    （1）功能不正确或不完整；\n    （2）接口错误；\n    （3）接口所使用的数据结构错误；\n    （4）行为或性能错误；\n    （5）初始化和终止错误。\n    \n### 10.2. 黑盒测试用例设计\n常用的黑盒测试用例设计方法主要有以下几中：等价类划分法、边界值分析法、因果图法、决策表法和错误推测法等方法。\n\n#### 10.2.1. 等价类划分法\n等价类划分法是一种重要的、常用的黑盒测试方法，它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有完整性和代表性。\n\n等价类划分法：是把所有可能的输入数据，即程序的输入域划分为若干部分（子集），然后从每一个子集中选取少数具有代表的数据作为测试用例。\n\n等价类：指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的，它们具有等价特性，即每一类的代表性数据在测试中的作用都等价于这一类中的其他数据。这样，对于表特征该类的数据输入将能代表这个子集合的输入。因此，可以合理地假定：测试某等价类的代表值等效于对于这类其他值的测试。\n\n“保险公司绩保费费率的程序”例题见《软件测试技术》(第二版) **P91**。\n\n#### 10.2.2. 边界值分析法\n边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为等价类划分方法的补充，在这个情况下，其测试用例来自等价类的边界。\n\n边界值分析使用与等价类划分方法相同的划分，只是边界值分析假定错误更多地存在于划分的边界上，因此在等价类的边界上以及两侧的情况设计测试用例。\n\n例题：\n$$有二元函数 f(x,y), 其中x\\in[1,12],y\\in[1,31];则采用边界值分析法设计的测试用例是:$$\n\n                {<1,15>;<2,15>;<11,15>;<11,15>;<12,15>;<6,15>;<6,1>;<6,2>;<6,30>;<6,31>}\n    \n 推论：对于一个含有n个变量的程序，采用边界值分析法测试程序会产生 4n+1 个测试用例.\n            \n#### 10.2.3. 因果图法\n一些程序的功能可以用判定表（或称决策表）的形式来表示，并根据输入条件的组合情况规定相应的操作。因果图法就是一种利用图解法分析输入的各种组合情况，从而设计测试用例的方法，它适合于检查程序输入条件的各种组合情况。\n\n采用因果图法设计测试用例的步骤：\n\n    （1）列出模块的原因（输入条件）和效果（动作），且给每个原因和效果一个标识符；\n    （2）列出原因——效果图；\n    （3）由于语法或环境的限制，有些原因和结果的组合情况是不可能出现的。为表明这些特定情况，在因果图上使用特殊的符号标明约束条件；\n    （4）把因果图转换成判定表；\n    （5）把判定表的每一列写成一个测试用例。\n\n“因果图法” 例题见《软件测试技术》(第二版) **P100**。\n\n#### 10.2.4. 决策表法\n在所有的黑盒测试中，机遇决策表（也称判定表）的测试是最为严格、最具有逻辑性的测试方法。\n\n构造决策表的 4 个步骤：\n    \n    （1）确定规则的个数，有 n 个条件的决策表有 2^n 个规则（每个条件取真、假值）；\n    （2）列出所有的条件桩和动作桩\n    （3）填入动作项，得到初始决策表；\n    （4）简化决策表，合并相似规则。\n    \n若表中有两条以上规则具有相同的动作，并且在条件项之间存在极为相似的关系，便可以合并。合并后的条件项用符号——表示，说明执行的动作与该条件的取值无关，称为无关条件。\n\n\"三角形问题决策表\" 例题见《软件测试技术》（第二版）**P102**\n\n#### 10.2.5. 错误推测法\n错误推测法的概念：基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例的方法。\n\n错误推测的基本思想：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。\n\n### 10.3. 白盒测试概念\n白盒测试就是一种用于检查代码是否按照预期工作的验证技术，又称结构测试、逻辑驱动测试或基于程序的测试。白盒测试的主要特点就是正对被测程序的源代码，测试者可能完全不考虑程序的功能。\n\n### 10.4. 白盒测试用例设计\n常用的白盒测试用例设计方法主要有以下几中：逻辑覆盖测试、边界值测试、基本路径测试、循环语句测试、程序插桩测试、数据流测试、变异测试。\n\n#### 10.4.1 逻辑覆盖测试\n\n|类型|定义|\n|:-|:-|\n|语句覆盖|程序中的每个可执行语句至少执行一次|\n|判定覆盖|程序中每个判定的取真分支和取假分支的情况至少经历一次，即判断的真假值均曾被满足|\n|条件覆盖|要使每个判断中每个条件的可能取值至少满足一次|\n|判定-条件覆盖|使得判断中每个条件的所有可能至少出现一次，并且每个判断判定结果也至少出现一次|\n|路径覆盖|测试用例覆盖程序中所有可能的路径|\n\n```C\nIF((A > 1) AND (B = 0) THEN\n    X=X/A\nIF((A = 2) OR (X > 1) THEN\n    X=X+1\n```\n\n```flow\nsta=>start: Start\ncond1=>condition: (A>1) AND (B=0)\ncond2=>condition: (A=2) OR (X>1)\nio1=>operation: X=X/A\nio2=>operation: X=X+1\n\ne=>end: End\n\nsta->cond1(yes)->io1->cond2(yes)->io2->e\nsta->cond1(no,left)->cond2(no,left)->e\n```\n\n#### 10.4.2. 边界值分析\n等价类划分和边界值分析为软件测试提供了一种设计白盒测试用例的策略。\n\n#### 10.4.3. 基本路径测试\n\n#### 10.4.4 循环语句测试\n\n#### 10.4.5 插桩测试\n\n#### 10.4.6 数据流测试\n\n#### 10.4.7 变异测试\n","source":"_posts/软件测试复习.md","raw":"---\ntitle: 软件测试复习概要\ndate: 2019-01-05\ncategories: 学习资料\n\n---\n\n- [x] 软件测试常用的概念，常用的分类，测试的目的，方法等\n- [x] 软件测试静态测试的概念，技术，分类，执行过程，涉及的活动，测试的对象等\n- [x] 软件测试的模型分类，个各模型的特点，适用场景，规划的阶段及其关系，表达的图形等\n- [x] 面向对象的软件测试概念，与软件开发以及普通测试的关系等\n- [x] 集成测试、系统测试的概念，划分的阶段，先后执行的顺序，输入、输出成果物等\n- [x] 黑盒测试、白盒测试的概念，常用的方法，测试用例的设计过程，以及执行的过程如何实施等\n- [x] 等价类划分、边界值测试、三明治集成测试等概念、用例设计、实施过程\n- [x] 因果图法的概念，用例设计，执行步骤等\n- [x] 基本路径测试法概念，用例设计过程，实施执行过程等（控制流图画法、环形复杂度计算、基本路径获取、用例设计及执行等）\n- [x] 单元测试的概念，主要任务，使用的方法等\n- [x] 软件测试与调试的区别与联系，软件缺陷的概念及其相关知识\n\n<!-- ttoc -->\n\n## 1. 软件测试\n### 1.1 软件测试概念\n1. IEEE 在1983年将软件测试定义为“使用人工或者自动化手段运行或测定某个系统的过程，其目的在于检验他是否满足规定的需求或者是弄清预期结果与实际结果之间的差别“，该定义明确地提出了软件测试以检验是否为目标。\n2. Myers则认为软件测试“是为了发现错误而执行的程序过程”，明确提出了“寻找错误”是测试目的。\n3. 从软件质量保证的角度看，软件测试是一种重要的软件质量保证活动，其动机是通过一些经济、高效的方法，捕捉软件中的错误，从而达到保证软件内在质量的目的。\n\n### 1.2. 软件测试目的\n* 软件测试是为了发现错误而执行程序的过程\n* 测试是为了证明程序有错，而不是证明程序无错\n* 一个好的测试用例在于他能发现至今未发现的错误\n* 一个成功的测试是发现了至今未发现的错误的测试\n\n### 1.3. 软件测试技术分类\n|分类方法||\n|-|-|\n|从是否需要执行被测软件的角度|静态测试、动态测试|\n|从软件测试用例实际方法|黑盒测试、白盒测试|\n|按照软件测试的策略和过程|单元测试、集成测试、确认测试、系统测试、验收测试|\n\n## 2 静态测试\n### 2.1. 静态测试概念\n那些不利用计算机运行被测程序，而是通过其他手段达到测试目的的方法称作静态测试。换句话说，就是计算机并不真正运行被测试的程序，如在项目开发中存在着大量的规格说明，而说明规格是无法用计算机来运行的，所以对于这些软件的规格说明的测试就属于静态测试。\n\n### 2.2. 静态测试主要方法\n- 主要方法：**代码检查、走查、桌面检查、同行评分**\n  - **代码检查**: 所谓代码检查，是以组为单位阅读代码，他是一系列规则和错误检查技术的集合。对代码检查的大多数讨论都集中在规程、所要填写的表格等。这里对整个规程进行简短的概述。\n     - 为代码检查分发材料、安排进程\n     - 在代码检查中起主要作用\n     - 记录发现的所有错误\n     - 确保所有错误能够及时得到修正\n  - **代码走查**：代码走查与代码检查很相似，都是以小组我单位进行代码阅读，是一系列规程和错误检查技术的集合。代码走查的过程与代码检查大体相同，代码走查也是采用持续一至两个小时的不间断会议的形式。但是稍微所有不同，采用的错误检查技术也不一样。\n    代码走查小组有3~5人组成，其中一个人扮演类似代码检查过程中“协调人员”的角色，一个人担任秘书（负责记录所有查出的错误），还有一个人担任测试人员。建议在代码走查小组这最好包括如下人员：\n    （1）一位经验丰富的程序员；\n    （2）一位程序设计语言专家；\n    （3）一位初级程序员（可以给出新颖、不带偏见的观点）；\n    （4）将要负责程序维护的人员\n    （5）一位其他项目的人员\n    （6）一位来自该软件编程小组的程序员\n\n  - **桌面检查**: 可以把桌面检查看作是由个人进行的代码检查或代码走查，即一个人阅读程序，对照错误列表检查程序，使用测试数据对程序进行推演。对于大多数人而言，桌面检查的效率是相当低的。其中的一个原因就是这个过程本身不受到任何约束。另外一个重要原因就是程序员常常不能够有效地测试自己编写的程序。因此最好由其他人而非该程序的编写人员进行桌面检查（例如可以让程序员之间相互交换各自编写的程序，避免自己对自己编写的程序进行桌面检查）。但是使用桌面检查的方法进行软件测试所得到的效果无法同代码走查或代码检查相比。代码检查和代码走查小组由多人组成，能够产生相互促进的效应。如果小组会议能够营造一种良性竞争的气氛，那么工作人员就能够乐于通过发现问题来展示自己的能力。而在桌面检查中，是无法做到这一点的。简而言之，桌面检查胜过没有检查，但测试效果远远不能同代码检查和代码走查相比。\n  - **同行评分**：虽然这种人工评审方法的目的是为了程序员提供一个自我评价的手段，与程序测试并无关系（其目标不是为了发现错误）。但是因为他与代码阅读的思想有关，是一种依据程序整体质量、可维护性、可扩展性、易用行和清晰性对匿名程序进行评价的技术。因此，有必要对其进行简单的了解。大致过程如下：首先挑选一位程序员担任评分过程的管理员，管理员再挑选出大约6~20名具备相似背景的参与者（例如，不同把Java应用程序员与汇编语言系统程序员编为一组）。每个参与者都提供两者由自己编写的程序以供评审，其中的一个程序是能代表参与者自身能力的最好作品，而另一个就是参与者认为质量较差的作品。\n\n## 3. 软件测试与调试的区别与联系\n白盒测试与调试的最终目的都是为了让被测应用(AUT)可以正常安全地运行，都是保证软件质量过程的一个环节。那么，白盒测试与调试有哪些不同呢？\n\n从承担的任务来看，白盒测试同其他类型测试一样，他的任务是发现所开发的项目中的缺陷；但是，调试不属于测试，其任务是纠正软件中的缺陷。\n\n从最终的结果来看，白盒测试有预知的结果，不可预知的知识程序是否通过测试，并且成功测试的结果是发现错误的症状，从而引起调试的进行；而调试的结果是消除项目中的错误。\n\n从执行的过程来看，软件测试只是发现程序中有错误的迹象，没有错误定位，也不需要找到出错原因；软件调试是根据测试报告的记录，在软件测试后纠正错误的工作，包括确定错误位置和修改错误。测试是一个错误发现、改正错误、重新测试的过程；而调试是一个推理过程。\n\n从准备工作来看，测试从已知的调试开始，使用预先定义的程序；调试是以不可知的内部条件开始，做统一性调试。\n\n从执行的计划性来看，测试是有计划的并要进行测试设计；而调试则不受时间约束。\n\n从测试的执行人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。\n\n测试的执行是有规程的，而调试的执行往往要求程序员进行必要推理以至知觉的“飞跃”。\n\n从执行的人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。\n\n从所使用的工具来看，大多数白盒测试的执行和设计可由工具支持，而调试程序员能利用的工具主要是调试器。\n\n## 4. 软件缺陷的概念\n1. 软件没有实现产品的说明书所描述的功能。\n2. 软件实现了产品说明书描述不应有的功能。\n3. 软件执行了产品说明书没讲的操作。\n4. 软件没有实现产品说明书没讲但应该实现的功能。\n5. 从软件测试员的角度来看，软件难以理解、不易使用、运行缓慢，或者最终用户认为不对。\n\n\n## 5. 单元测试\n### 5.1. 单元测试定义\n单元测试是在软件开发过程中要进行的最低级别的测试活动，或者说是针对软件设计的最小单位—程序模块，进行正确性检查的测试工作。其目的在于发现每个程序模块内部可能存在的差错。在单元测试活动中，软件的独立单元在与程序的其他部分相隔离的情况下进行测试。\n\n### 5.2. 单元测试主要任务\n主要工作分为两个步骤：人工静态检查和动态执行跟踪。前者主要是保证代码算法的逻辑正确性（尽量通过人工检查发现代码的逻辑错误）、清晰性、规范性、一致性、算法高效性，并尽可能地发现程序程序中没有发现的错误。后者就是通过设计测试用例，执行待测程序来跟踪比较实际结果与预期结果来发现错误。\n    \n    （1）正确性是指代码逻辑必须正确，能够实现预期的功能\n    （2）清晰性是指代码必须简明、易懂，注释准确没有歧义；\n    （3）规范性是指代码必须符合企业或部门所定义的共同规范，包括命名规则，代码风格\n    （4）一致性是指代码必须在命名上（如相同功能的变量尽量采用相同的标示符）、风格上都保持统一；\n    （5）高效性是指代码不但要满足以上性质，而且需要尽可能降低代码的执行时间。\n\n### 5.3. 单元测试使用方法\n基于代码的白盒测试\n\n## 6. 集成测试\n### 6.1 集成测试定义\n根据实际情况对成语模块采用适当的集成测试策略组装起来，对系统接口以及集成后的功能进行正确性检验的测试工作。\n\n### 6.2 集成测试策略\n#### 6.2.1 三明治集成\n\n    （1）目的：综合利用自顶向下和自底向上两种集成测试策略的优点\n    （2）定义：三明治集成是一种混合增值式测试策略，综合了自顶向下和自顶向上两种集成方法的优点，因此也属于基于功能分解测试。\n    \n### 6.3 集成测试过程\n```gantt\n    title 集成测试过程\n        制定集成测试计划: a,1d\n        设计集成测试: 1d\n        实施集成测试: 1d\n        执行集成测试: 1d\n        评估集成测试: 1d\n```\n\n## 7. 系统测试\n### 7.1. 系统测试的定义\n将已经集成好的软件系统，作为整个计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行（使用）环境下，对计算机系统进行一系列的组装测试和确认测试。\n\n#### 7.2. 集成测试过程\n```gantt\n    title 系统测试过程\n        制定系统测试计划: a,1d\n        设计系统测试: 1d\n        实施系统测试: 1d\n        执行系统测试: 1d\n        评估系统测试: 1d\n``` \n\n## 8. 软件测试模型\n### 8.1. V模型\n      用户需求                      验收测试  \n        需求分析和系统设计      确认测试和系统测试 \n             概要设计         集成测试\n                详细设计   单元测试\n                       编码\n                       \n经典的V模型阶段可以分为\n\n* 单元测试\n* 集成测试\n* 系统测试\n\n**模型特点**：V模型的价值主要在于他非常明确地标明了测试过程中存在的不同级别，并且清楚地描述了这些测试阶段和开发过程期间的对应关系:\n\n* 单元测试的主要目的是根据详细设计说明书来验证和确认每个单元模块是否符合预期的要求，发现编码过程中可能存在的各种错误。\n* 集成测试主要目的是根据概要设计来验证和确认各个模块是否已正确集成到一起，主要是检查各单元与其他模块之间的接口上可能存在的错误。\n* 系统测试主要目的是根据需求定义，验证和确认系统作为一个整体是否能够正常有效地运行，例如，判断系统是否达到了用户预期的性能。\n\n### 8.2. W模型\nW模型中测试与开发对应关系如下：\n开发：需求分析、概要设计、　　详细设计、　　编码、　　软件集成、系统集成、部署\n　　　　　↑　　　　↑　　　　　　　↑　　　　　↑　　　　　　↑　　　　↑　　　↑\n测试：需求评审、概要设计评审、详细设计评审、单元测试、集成测试、系统测试、验收测试\n\nW模型强调：测试伴随着整个软件开发周期，而且测试的对象不仅仅是程序，需求、设计等同样要测试，也就是说，测试与开发是同步进行的。W模型有利于尽早地全面的发现问题。例如，需求分析完成后，测试人员就应该参与到对需求的验证和确认活动中，以尽早地找出缺陷所在。同时，对需求的测试也有利于及时了解项目难度和测试风险，及早制定应对措施，这将显著减少总体测试时间，加快项目进度。 但W模型也存在局限性。在W模型中，需求、设计、编码等活动被视为串行的，同时，测试和开发活动也保持着一种线性的前后关系，上一阶段完全结束，才可正式开始下一个阶段工作。这样就无法支持迭代的开发模型。对于当前软件开发复杂多变的情况，W模型并不能解除测试管理面临着困惑。\n\n### 8.3. H模型\n在H模型中，软件测试的过程活动完全独立，形成了一个完全独立的流程，贯穿于整个产品的周期，与其他流程并发进行，某个测试点准备就绪后就可以从测试准备阶段进行到测试执行阶段；软件测试可以根据被测产品的不同分层进行。\n\nH模型揭示了：\n    （1）软件测试不仅仅指测试的执行，还包括很多其他活动。\n    （2）软件测试是一个独立的流程，贯穿产品的整个开发周期，与其他流程并发进行。\n    （3）软件测试要尽早准备，尽早执行。\n    （4）软件测试根据被测物的不同是分层次的，不同层次的测试活动可以是按照某个次序先后进行的，但也可能是反复的。\n    \n## 9. 面向对象测试\n### 9.1.1 面向对象测试基本概念\n面向软件测试技术是新兴的软件测试技术，是专门针对使用面向对象技术开发的软件而提出的一种测试技术。其目的是为了解决传统的软件测试技术，面对面向对象技术开发的软件多少显得有些力不从心的现象。面向对象开发技术和传统的开发技术相比，新增了多态、继承、封装等特点。这些新特点使得开发出来的程序，具有更好的结构更规范的编程风格, 极大地优化了数据使用的安全性, 提高了代码的重用率。由此可见，它们是面向对象开发技术产生巨大吸引力的重要因素。然而，另一方面也影响了软件测试的方法和内容；增加了软件测试的难度；带来了传统软件设计技术所不存在的错误；或者使得传统软件测试中的重点不再显得突出；或者使原来测试经验认为和实践证明的次要方面成为了主要问题。\n\n## 10. 黑白盒测试\n### 10.1. 黑盒测试概念\n黑盒测试也称作功能测试和行为测试，主要是根据功能需求来测试程序是否按照预期工作。黑盒测试的目的是尽量发现代码所表现的外部行为的错误，主要有以下几类：\n\n    （1）功能不正确或不完整；\n    （2）接口错误；\n    （3）接口所使用的数据结构错误；\n    （4）行为或性能错误；\n    （5）初始化和终止错误。\n    \n### 10.2. 黑盒测试用例设计\n常用的黑盒测试用例设计方法主要有以下几中：等价类划分法、边界值分析法、因果图法、决策表法和错误推测法等方法。\n\n#### 10.2.1. 等价类划分法\n等价类划分法是一种重要的、常用的黑盒测试方法，它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有完整性和代表性。\n\n等价类划分法：是把所有可能的输入数据，即程序的输入域划分为若干部分（子集），然后从每一个子集中选取少数具有代表的数据作为测试用例。\n\n等价类：指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的，它们具有等价特性，即每一类的代表性数据在测试中的作用都等价于这一类中的其他数据。这样，对于表特征该类的数据输入将能代表这个子集合的输入。因此，可以合理地假定：测试某等价类的代表值等效于对于这类其他值的测试。\n\n“保险公司绩保费费率的程序”例题见《软件测试技术》(第二版) **P91**。\n\n#### 10.2.2. 边界值分析法\n边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为等价类划分方法的补充，在这个情况下，其测试用例来自等价类的边界。\n\n边界值分析使用与等价类划分方法相同的划分，只是边界值分析假定错误更多地存在于划分的边界上，因此在等价类的边界上以及两侧的情况设计测试用例。\n\n例题：\n$$有二元函数 f(x,y), 其中x\\in[1,12],y\\in[1,31];则采用边界值分析法设计的测试用例是:$$\n\n                {<1,15>;<2,15>;<11,15>;<11,15>;<12,15>;<6,15>;<6,1>;<6,2>;<6,30>;<6,31>}\n    \n 推论：对于一个含有n个变量的程序，采用边界值分析法测试程序会产生 4n+1 个测试用例.\n            \n#### 10.2.3. 因果图法\n一些程序的功能可以用判定表（或称决策表）的形式来表示，并根据输入条件的组合情况规定相应的操作。因果图法就是一种利用图解法分析输入的各种组合情况，从而设计测试用例的方法，它适合于检查程序输入条件的各种组合情况。\n\n采用因果图法设计测试用例的步骤：\n\n    （1）列出模块的原因（输入条件）和效果（动作），且给每个原因和效果一个标识符；\n    （2）列出原因——效果图；\n    （3）由于语法或环境的限制，有些原因和结果的组合情况是不可能出现的。为表明这些特定情况，在因果图上使用特殊的符号标明约束条件；\n    （4）把因果图转换成判定表；\n    （5）把判定表的每一列写成一个测试用例。\n\n“因果图法” 例题见《软件测试技术》(第二版) **P100**。\n\n#### 10.2.4. 决策表法\n在所有的黑盒测试中，机遇决策表（也称判定表）的测试是最为严格、最具有逻辑性的测试方法。\n\n构造决策表的 4 个步骤：\n    \n    （1）确定规则的个数，有 n 个条件的决策表有 2^n 个规则（每个条件取真、假值）；\n    （2）列出所有的条件桩和动作桩\n    （3）填入动作项，得到初始决策表；\n    （4）简化决策表，合并相似规则。\n    \n若表中有两条以上规则具有相同的动作，并且在条件项之间存在极为相似的关系，便可以合并。合并后的条件项用符号——表示，说明执行的动作与该条件的取值无关，称为无关条件。\n\n\"三角形问题决策表\" 例题见《软件测试技术》（第二版）**P102**\n\n#### 10.2.5. 错误推测法\n错误推测法的概念：基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例的方法。\n\n错误推测的基本思想：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。\n\n### 10.3. 白盒测试概念\n白盒测试就是一种用于检查代码是否按照预期工作的验证技术，又称结构测试、逻辑驱动测试或基于程序的测试。白盒测试的主要特点就是正对被测程序的源代码，测试者可能完全不考虑程序的功能。\n\n### 10.4. 白盒测试用例设计\n常用的白盒测试用例设计方法主要有以下几中：逻辑覆盖测试、边界值测试、基本路径测试、循环语句测试、程序插桩测试、数据流测试、变异测试。\n\n#### 10.4.1 逻辑覆盖测试\n\n|类型|定义|\n|:-|:-|\n|语句覆盖|程序中的每个可执行语句至少执行一次|\n|判定覆盖|程序中每个判定的取真分支和取假分支的情况至少经历一次，即判断的真假值均曾被满足|\n|条件覆盖|要使每个判断中每个条件的可能取值至少满足一次|\n|判定-条件覆盖|使得判断中每个条件的所有可能至少出现一次，并且每个判断判定结果也至少出现一次|\n|路径覆盖|测试用例覆盖程序中所有可能的路径|\n\n```C\nIF((A > 1) AND (B = 0) THEN\n    X=X/A\nIF((A = 2) OR (X > 1) THEN\n    X=X+1\n```\n\n```flow\nsta=>start: Start\ncond1=>condition: (A>1) AND (B=0)\ncond2=>condition: (A=2) OR (X>1)\nio1=>operation: X=X/A\nio2=>operation: X=X+1\n\ne=>end: End\n\nsta->cond1(yes)->io1->cond2(yes)->io2->e\nsta->cond1(no,left)->cond2(no,left)->e\n```\n\n#### 10.4.2. 边界值分析\n等价类划分和边界值分析为软件测试提供了一种设计白盒测试用例的策略。\n\n#### 10.4.3. 基本路径测试\n\n#### 10.4.4 循环语句测试\n\n#### 10.4.5 插桩测试\n\n#### 10.4.6 数据流测试\n\n#### 10.4.7 变异测试\n","slug":"软件测试复习","published":1,"updated":"2019-05-31T09:43:26.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwc93sdd000g3tl39z94si78","content":"<ul>\n<li><input checked disabled type=\"checkbox\"> 软件测试常用的概念，常用的分类，测试的目的，方法等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试静态测试的概念，技术，分类，执行过程，涉及的活动，测试的对象等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试的模型分类，个各模型的特点，适用场景，规划的阶段及其关系，表达的图形等</li>\n<li><input checked disabled type=\"checkbox\"> 面向对象的软件测试概念，与软件开发以及普通测试的关系等</li>\n<li><input checked disabled type=\"checkbox\"> 集成测试、系统测试的概念，划分的阶段，先后执行的顺序，输入、输出成果物等</li>\n<li><input checked disabled type=\"checkbox\"> 黑盒测试、白盒测试的概念，常用的方法，测试用例的设计过程，以及执行的过程如何实施等</li>\n<li><input checked disabled type=\"checkbox\"> 等价类划分、边界值测试、三明治集成测试等概念、用例设计、实施过程</li>\n<li><input checked disabled type=\"checkbox\"> 因果图法的概念，用例设计，执行步骤等</li>\n<li><input checked disabled type=\"checkbox\"> 基本路径测试法概念，用例设计过程，实施执行过程等（控制流图画法、环形复杂度计算、基本路径获取、用例设计及执行等）</li>\n<li><input checked disabled type=\"checkbox\"> 单元测试的概念，主要任务，使用的方法等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试与调试的区别与联系，软件缺陷的概念及其相关知识</li>\n</ul>\n<!-- ttoc -->\n\n<h2 id=\"1-软件测试\"><a href=\"#1-软件测试\" class=\"headerlink\" title=\"1. 软件测试\"></a>1. 软件测试</h2><h3 id=\"1-1-软件测试概念\"><a href=\"#1-1-软件测试概念\" class=\"headerlink\" title=\"1.1 软件测试概念\"></a>1.1 软件测试概念</h3><ol>\n<li>IEEE 在1983年将软件测试定义为“使用人工或者自动化手段运行或测定某个系统的过程，其目的在于检验他是否满足规定的需求或者是弄清预期结果与实际结果之间的差别“，该定义明确地提出了软件测试以检验是否为目标。</li>\n<li>Myers则认为软件测试“是为了发现错误而执行的程序过程”，明确提出了“寻找错误”是测试目的。</li>\n<li>从软件质量保证的角度看，软件测试是一种重要的软件质量保证活动，其动机是通过一些经济、高效的方法，捕捉软件中的错误，从而达到保证软件内在质量的目的。</li>\n</ol>\n<h3 id=\"1-2-软件测试目的\"><a href=\"#1-2-软件测试目的\" class=\"headerlink\" title=\"1.2. 软件测试目的\"></a>1.2. 软件测试目的</h3><ul>\n<li>软件测试是为了发现错误而执行程序的过程</li>\n<li>测试是为了证明程序有错，而不是证明程序无错</li>\n<li>一个好的测试用例在于他能发现至今未发现的错误</li>\n<li>一个成功的测试是发现了至今未发现的错误的测试</li>\n</ul>\n<h3 id=\"1-3-软件测试技术分类\"><a href=\"#1-3-软件测试技术分类\" class=\"headerlink\" title=\"1.3. 软件测试技术分类\"></a>1.3. 软件测试技术分类</h3><table>\n<thead>\n<tr>\n<th>分类方法</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>从是否需要执行被测软件的角度</td>\n<td>静态测试、动态测试</td>\n</tr>\n<tr>\n<td>从软件测试用例实际方法</td>\n<td>黑盒测试、白盒测试</td>\n</tr>\n<tr>\n<td>按照软件测试的策略和过程</td>\n<td>单元测试、集成测试、确认测试、系统测试、验收测试</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-静态测试\"><a href=\"#2-静态测试\" class=\"headerlink\" title=\"2 静态测试\"></a>2 静态测试</h2><h3 id=\"2-1-静态测试概念\"><a href=\"#2-1-静态测试概念\" class=\"headerlink\" title=\"2.1. 静态测试概念\"></a>2.1. 静态测试概念</h3><p>那些不利用计算机运行被测程序，而是通过其他手段达到测试目的的方法称作静态测试。换句话说，就是计算机并不真正运行被测试的程序，如在项目开发中存在着大量的规格说明，而说明规格是无法用计算机来运行的，所以对于这些软件的规格说明的测试就属于静态测试。</p>\n<h3 id=\"2-2-静态测试主要方法\"><a href=\"#2-2-静态测试主要方法\" class=\"headerlink\" title=\"2.2. 静态测试主要方法\"></a>2.2. 静态测试主要方法</h3><ul>\n<li><p>主要方法：<strong>代码检查、走查、桌面检查、同行评分</strong></p>\n<ul>\n<li><p><strong>代码检查</strong>: 所谓代码检查，是以组为单位阅读代码，他是一系列规则和错误检查技术的集合。对代码检查的大多数讨论都集中在规程、所要填写的表格等。这里对整个规程进行简短的概述。</p>\n<ul>\n<li>为代码检查分发材料、安排进程</li>\n<li>在代码检查中起主要作用</li>\n<li>记录发现的所有错误</li>\n<li>确保所有错误能够及时得到修正</li>\n</ul>\n</li>\n<li><p><strong>代码走查</strong>：代码走查与代码检查很相似，都是以小组我单位进行代码阅读，是一系列规程和错误检查技术的集合。代码走查的过程与代码检查大体相同，代码走查也是采用持续一至两个小时的不间断会议的形式。但是稍微所有不同，采用的错误检查技术也不一样。<br>代码走查小组有3~5人组成，其中一个人扮演类似代码检查过程中“协调人员”的角色，一个人担任秘书（负责记录所有查出的错误），还有一个人担任测试人员。建议在代码走查小组这最好包括如下人员：<br>（1）一位经验丰富的程序员；<br>（2）一位程序设计语言专家；<br>（3）一位初级程序员（可以给出新颖、不带偏见的观点）；<br>（4）将要负责程序维护的人员<br>（5）一位其他项目的人员<br>（6）一位来自该软件编程小组的程序员</p>\n</li>\n<li><p><strong>桌面检查</strong>: 可以把桌面检查看作是由个人进行的代码检查或代码走查，即一个人阅读程序，对照错误列表检查程序，使用测试数据对程序进行推演。对于大多数人而言，桌面检查的效率是相当低的。其中的一个原因就是这个过程本身不受到任何约束。另外一个重要原因就是程序员常常不能够有效地测试自己编写的程序。因此最好由其他人而非该程序的编写人员进行桌面检查（例如可以让程序员之间相互交换各自编写的程序，避免自己对自己编写的程序进行桌面检查）。但是使用桌面检查的方法进行软件测试所得到的效果无法同代码走查或代码检查相比。代码检查和代码走查小组由多人组成，能够产生相互促进的效应。如果小组会议能够营造一种良性竞争的气氛，那么工作人员就能够乐于通过发现问题来展示自己的能力。而在桌面检查中，是无法做到这一点的。简而言之，桌面检查胜过没有检查，但测试效果远远不能同代码检查和代码走查相比。</p>\n</li>\n<li><p><strong>同行评分</strong>：虽然这种人工评审方法的目的是为了程序员提供一个自我评价的手段，与程序测试并无关系（其目标不是为了发现错误）。但是因为他与代码阅读的思想有关，是一种依据程序整体质量、可维护性、可扩展性、易用行和清晰性对匿名程序进行评价的技术。因此，有必要对其进行简单的了解。大致过程如下：首先挑选一位程序员担任评分过程的管理员，管理员再挑选出大约6~20名具备相似背景的参与者（例如，不同把Java应用程序员与汇编语言系统程序员编为一组）。每个参与者都提供两者由自己编写的程序以供评审，其中的一个程序是能代表参与者自身能力的最好作品，而另一个就是参与者认为质量较差的作品。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-软件测试与调试的区别与联系\"><a href=\"#3-软件测试与调试的区别与联系\" class=\"headerlink\" title=\"3. 软件测试与调试的区别与联系\"></a>3. 软件测试与调试的区别与联系</h2><p>白盒测试与调试的最终目的都是为了让被测应用(AUT)可以正常安全地运行，都是保证软件质量过程的一个环节。那么，白盒测试与调试有哪些不同呢？</p>\n<p>从承担的任务来看，白盒测试同其他类型测试一样，他的任务是发现所开发的项目中的缺陷；但是，调试不属于测试，其任务是纠正软件中的缺陷。</p>\n<p>从最终的结果来看，白盒测试有预知的结果，不可预知的知识程序是否通过测试，并且成功测试的结果是发现错误的症状，从而引起调试的进行；而调试的结果是消除项目中的错误。</p>\n<p>从执行的过程来看，软件测试只是发现程序中有错误的迹象，没有错误定位，也不需要找到出错原因；软件调试是根据测试报告的记录，在软件测试后纠正错误的工作，包括确定错误位置和修改错误。测试是一个错误发现、改正错误、重新测试的过程；而调试是一个推理过程。</p>\n<p>从准备工作来看，测试从已知的调试开始，使用预先定义的程序；调试是以不可知的内部条件开始，做统一性调试。</p>\n<p>从执行的计划性来看，测试是有计划的并要进行测试设计；而调试则不受时间约束。</p>\n<p>从测试的执行人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。</p>\n<p>测试的执行是有规程的，而调试的执行往往要求程序员进行必要推理以至知觉的“飞跃”。</p>\n<p>从执行的人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。</p>\n<p>从所使用的工具来看，大多数白盒测试的执行和设计可由工具支持，而调试程序员能利用的工具主要是调试器。</p>\n<h2 id=\"4-软件缺陷的概念\"><a href=\"#4-软件缺陷的概念\" class=\"headerlink\" title=\"4. 软件缺陷的概念\"></a>4. 软件缺陷的概念</h2><ol>\n<li>软件没有实现产品的说明书所描述的功能。</li>\n<li>软件实现了产品说明书描述不应有的功能。</li>\n<li>软件执行了产品说明书没讲的操作。</li>\n<li>软件没有实现产品说明书没讲但应该实现的功能。</li>\n<li>从软件测试员的角度来看，软件难以理解、不易使用、运行缓慢，或者最终用户认为不对。</li>\n</ol>\n<h2 id=\"5-单元测试\"><a href=\"#5-单元测试\" class=\"headerlink\" title=\"5. 单元测试\"></a>5. 单元测试</h2><h3 id=\"5-1-单元测试定义\"><a href=\"#5-1-单元测试定义\" class=\"headerlink\" title=\"5.1. 单元测试定义\"></a>5.1. 单元测试定义</h3><p>单元测试是在软件开发过程中要进行的最低级别的测试活动，或者说是针对软件设计的最小单位—程序模块，进行正确性检查的测试工作。其目的在于发现每个程序模块内部可能存在的差错。在单元测试活动中，软件的独立单元在与程序的其他部分相隔离的情况下进行测试。</p>\n<h3 id=\"5-2-单元测试主要任务\"><a href=\"#5-2-单元测试主要任务\" class=\"headerlink\" title=\"5.2. 单元测试主要任务\"></a>5.2. 单元测试主要任务</h3><p>主要工作分为两个步骤：人工静态检查和动态执行跟踪。前者主要是保证代码算法的逻辑正确性（尽量通过人工检查发现代码的逻辑错误）、清晰性、规范性、一致性、算法高效性，并尽可能地发现程序程序中没有发现的错误。后者就是通过设计测试用例，执行待测程序来跟踪比较实际结果与预期结果来发现错误。</p>\n<pre><code>（1）正确性是指代码逻辑必须正确，能够实现预期的功能\n（2）清晰性是指代码必须简明、易懂，注释准确没有歧义；\n（3）规范性是指代码必须符合企业或部门所定义的共同规范，包括命名规则，代码风格\n（4）一致性是指代码必须在命名上（如相同功能的变量尽量采用相同的标示符）、风格上都保持统一；\n（5）高效性是指代码不但要满足以上性质，而且需要尽可能降低代码的执行时间。</code></pre><h3 id=\"5-3-单元测试使用方法\"><a href=\"#5-3-单元测试使用方法\" class=\"headerlink\" title=\"5.3. 单元测试使用方法\"></a>5.3. 单元测试使用方法</h3><p>基于代码的白盒测试</p>\n<h2 id=\"6-集成测试\"><a href=\"#6-集成测试\" class=\"headerlink\" title=\"6. 集成测试\"></a>6. 集成测试</h2><h3 id=\"6-1-集成测试定义\"><a href=\"#6-1-集成测试定义\" class=\"headerlink\" title=\"6.1 集成测试定义\"></a>6.1 集成测试定义</h3><p>根据实际情况对成语模块采用适当的集成测试策略组装起来，对系统接口以及集成后的功能进行正确性检验的测试工作。</p>\n<h3 id=\"6-2-集成测试策略\"><a href=\"#6-2-集成测试策略\" class=\"headerlink\" title=\"6.2 集成测试策略\"></a>6.2 集成测试策略</h3><h4 id=\"6-2-1-三明治集成\"><a href=\"#6-2-1-三明治集成\" class=\"headerlink\" title=\"6.2.1 三明治集成\"></a>6.2.1 三明治集成</h4><pre><code>（1）目的：综合利用自顶向下和自底向上两种集成测试策略的优点\n（2）定义：三明治集成是一种混合增值式测试策略，综合了自顶向下和自顶向上两种集成方法的优点，因此也属于基于功能分解测试。</code></pre><h3 id=\"6-3-集成测试过程\"><a href=\"#6-3-集成测试过程\" class=\"headerlink\" title=\"6.3 集成测试过程\"></a>6.3 集成测试过程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title 集成测试过程</span><br><span class=\"line\">    制定集成测试计划: a,1d</span><br><span class=\"line\">    设计集成测试: 1d</span><br><span class=\"line\">    实施集成测试: 1d</span><br><span class=\"line\">    执行集成测试: 1d</span><br><span class=\"line\">    评估集成测试: 1d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-系统测试\"><a href=\"#7-系统测试\" class=\"headerlink\" title=\"7. 系统测试\"></a>7. 系统测试</h2><h3 id=\"7-1-系统测试的定义\"><a href=\"#7-1-系统测试的定义\" class=\"headerlink\" title=\"7.1. 系统测试的定义\"></a>7.1. 系统测试的定义</h3><p>将已经集成好的软件系统，作为整个计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行（使用）环境下，对计算机系统进行一系列的组装测试和确认测试。</p>\n<h4 id=\"7-2-集成测试过程\"><a href=\"#7-2-集成测试过程\" class=\"headerlink\" title=\"7.2. 集成测试过程\"></a>7.2. 集成测试过程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    title 系统测试过程</span><br><span class=\"line\">        制定系统测试计划: a,1d</span><br><span class=\"line\">        设计系统测试: 1d</span><br><span class=\"line\">        实施系统测试: 1d</span><br><span class=\"line\">        执行系统测试: 1d</span><br><span class=\"line\">        评估系统测试: 1d</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">## 8. 软件测试模型</span><br><span class=\"line\">### 8.1. V模型</span><br><span class=\"line\">      用户需求                      验收测试  </span><br><span class=\"line\">        需求分析和系统设计      确认测试和系统测试 </span><br><span class=\"line\">             概要设计         集成测试</span><br><span class=\"line\">                详细设计   单元测试</span><br><span class=\"line\">                       编码</span><br><span class=\"line\">                       </span><br><span class=\"line\">经典的V模型阶段可以分为</span><br><span class=\"line\"></span><br><span class=\"line\">* 单元测试</span><br><span class=\"line\">* 集成测试</span><br><span class=\"line\">* 系统测试</span><br><span class=\"line\"></span><br><span class=\"line\">**模型特点**：V模型的价值主要在于他非常明确地标明了测试过程中存在的不同级别，并且清楚地描述了这些测试阶段和开发过程期间的对应关系:</span><br><span class=\"line\"></span><br><span class=\"line\">* 单元测试的主要目的是根据详细设计说明书来验证和确认每个单元模块是否符合预期的要求，发现编码过程中可能存在的各种错误。</span><br><span class=\"line\">* 集成测试主要目的是根据概要设计来验证和确认各个模块是否已正确集成到一起，主要是检查各单元与其他模块之间的接口上可能存在的错误。</span><br><span class=\"line\">* 系统测试主要目的是根据需求定义，验证和确认系统作为一个整体是否能够正常有效地运行，例如，判断系统是否达到了用户预期的性能。</span><br><span class=\"line\"></span><br><span class=\"line\">### 8.2. W模型</span><br><span class=\"line\">W模型中测试与开发对应关系如下：</span><br><span class=\"line\">开发：需求分析、概要设计、　　详细设计、　　编码、　　软件集成、系统集成、部署</span><br><span class=\"line\">　　　　　↑　　　　↑　　　　　　　↑　　　　　↑　　　　　　↑　　　　↑　　　↑</span><br><span class=\"line\">测试：需求评审、概要设计评审、详细设计评审、单元测试、集成测试、系统测试、验收测试</span><br><span class=\"line\"></span><br><span class=\"line\">W模型强调：测试伴随着整个软件开发周期，而且测试的对象不仅仅是程序，需求、设计等同样要测试，也就是说，测试与开发是同步进行的。W模型有利于尽早地全面的发现问题。例如，需求分析完成后，测试人员就应该参与到对需求的验证和确认活动中，以尽早地找出缺陷所在。同时，对需求的测试也有利于及时了解项目难度和测试风险，及早制定应对措施，这将显著减少总体测试时间，加快项目进度。 但W模型也存在局限性。在W模型中，需求、设计、编码等活动被视为串行的，同时，测试和开发活动也保持着一种线性的前后关系，上一阶段完全结束，才可正式开始下一个阶段工作。这样就无法支持迭代的开发模型。对于当前软件开发复杂多变的情况，W模型并不能解除测试管理面临着困惑。</span><br><span class=\"line\"></span><br><span class=\"line\">### 8.3. H模型</span><br><span class=\"line\">在H模型中，软件测试的过程活动完全独立，形成了一个完全独立的流程，贯穿于整个产品的周期，与其他流程并发进行，某个测试点准备就绪后就可以从测试准备阶段进行到测试执行阶段；软件测试可以根据被测产品的不同分层进行。</span><br><span class=\"line\"></span><br><span class=\"line\">H模型揭示了：</span><br><span class=\"line\">    （1）软件测试不仅仅指测试的执行，还包括很多其他活动。</span><br><span class=\"line\">    （2）软件测试是一个独立的流程，贯穿产品的整个开发周期，与其他流程并发进行。</span><br><span class=\"line\">    （3）软件测试要尽早准备，尽早执行。</span><br><span class=\"line\">    （4）软件测试根据被测物的不同是分层次的，不同层次的测试活动可以是按照某个次序先后进行的，但也可能是反复的。</span><br><span class=\"line\">    </span><br><span class=\"line\">## 9. 面向对象测试</span><br><span class=\"line\">### 9.1.1 面向对象测试基本概念</span><br><span class=\"line\">面向软件测试技术是新兴的软件测试技术，是专门针对使用面向对象技术开发的软件而提出的一种测试技术。其目的是为了解决传统的软件测试技术，面对面向对象技术开发的软件多少显得有些力不从心的现象。面向对象开发技术和传统的开发技术相比，新增了多态、继承、封装等特点。这些新特点使得开发出来的程序，具有更好的结构更规范的编程风格, 极大地优化了数据使用的安全性, 提高了代码的重用率。由此可见，它们是面向对象开发技术产生巨大吸引力的重要因素。然而，另一方面也影响了软件测试的方法和内容；增加了软件测试的难度；带来了传统软件设计技术所不存在的错误；或者使得传统软件测试中的重点不再显得突出；或者使原来测试经验认为和实践证明的次要方面成为了主要问题。</span><br><span class=\"line\"></span><br><span class=\"line\">## 10. 黑白盒测试</span><br><span class=\"line\">### 10.1. 黑盒测试概念</span><br><span class=\"line\">黑盒测试也称作功能测试和行为测试，主要是根据功能需求来测试程序是否按照预期工作。黑盒测试的目的是尽量发现代码所表现的外部行为的错误，主要有以下几类：</span><br><span class=\"line\"></span><br><span class=\"line\">    （1）功能不正确或不完整；</span><br><span class=\"line\">    （2）接口错误；</span><br><span class=\"line\">    （3）接口所使用的数据结构错误；</span><br><span class=\"line\">    （4）行为或性能错误；</span><br><span class=\"line\">    （5）初始化和终止错误。</span><br><span class=\"line\">    </span><br><span class=\"line\">### 10.2. 黑盒测试用例设计</span><br><span class=\"line\">常用的黑盒测试用例设计方法主要有以下几中：等价类划分法、边界值分析法、因果图法、决策表法和错误推测法等方法。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.1. 等价类划分法</span><br><span class=\"line\">等价类划分法是一种重要的、常用的黑盒测试方法，它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有完整性和代表性。</span><br><span class=\"line\"></span><br><span class=\"line\">等价类划分法：是把所有可能的输入数据，即程序的输入域划分为若干部分（子集），然后从每一个子集中选取少数具有代表的数据作为测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">等价类：指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的，它们具有等价特性，即每一类的代表性数据在测试中的作用都等价于这一类中的其他数据。这样，对于表特征该类的数据输入将能代表这个子集合的输入。因此，可以合理地假定：测试某等价类的代表值等效于对于这类其他值的测试。</span><br><span class=\"line\"></span><br><span class=\"line\">“保险公司绩保费费率的程序”例题见《软件测试技术》(第二版) **P91**。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.2. 边界值分析法</span><br><span class=\"line\">边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为等价类划分方法的补充，在这个情况下，其测试用例来自等价类的边界。</span><br><span class=\"line\"></span><br><span class=\"line\">边界值分析使用与等价类划分方法相同的划分，只是边界值分析假定错误更多地存在于划分的边界上，因此在等价类的边界上以及两侧的情况设计测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">例题：</span><br><span class=\"line\">$$有二元函数 f(x,y), 其中x\\in[1,12],y\\in[1,31];则采用边界值分析法设计的测试用例是:$$</span><br><span class=\"line\"></span><br><span class=\"line\">                &#123;&lt;1,15&gt;;&lt;2,15&gt;;&lt;11,15&gt;;&lt;11,15&gt;;&lt;12,15&gt;;&lt;6,15&gt;;&lt;6,1&gt;;&lt;6,2&gt;;&lt;6,30&gt;;&lt;6,31&gt;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"> 推论：对于一个含有n个变量的程序，采用边界值分析法测试程序会产生 4n+1 个测试用例.</span><br><span class=\"line\">            </span><br><span class=\"line\">#### 10.2.3. 因果图法</span><br><span class=\"line\">一些程序的功能可以用判定表（或称决策表）的形式来表示，并根据输入条件的组合情况规定相应的操作。因果图法就是一种利用图解法分析输入的各种组合情况，从而设计测试用例的方法，它适合于检查程序输入条件的各种组合情况。</span><br><span class=\"line\"></span><br><span class=\"line\">采用因果图法设计测试用例的步骤：</span><br><span class=\"line\"></span><br><span class=\"line\">    （1）列出模块的原因（输入条件）和效果（动作），且给每个原因和效果一个标识符；</span><br><span class=\"line\">    （2）列出原因——效果图；</span><br><span class=\"line\">    （3）由于语法或环境的限制，有些原因和结果的组合情况是不可能出现的。为表明这些特定情况，在因果图上使用特殊的符号标明约束条件；</span><br><span class=\"line\">    （4）把因果图转换成判定表；</span><br><span class=\"line\">    （5）把判定表的每一列写成一个测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">“因果图法” 例题见《软件测试技术》(第二版) **P100**。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.4. 决策表法</span><br><span class=\"line\">在所有的黑盒测试中，机遇决策表（也称判定表）的测试是最为严格、最具有逻辑性的测试方法。</span><br><span class=\"line\"></span><br><span class=\"line\">构造决策表的 4 个步骤：</span><br><span class=\"line\">    </span><br><span class=\"line\">    （1）确定规则的个数，有 n 个条件的决策表有 2^n 个规则（每个条件取真、假值）；</span><br><span class=\"line\">    （2）列出所有的条件桩和动作桩</span><br><span class=\"line\">    （3）填入动作项，得到初始决策表；</span><br><span class=\"line\">    （4）简化决策表，合并相似规则。</span><br><span class=\"line\">    </span><br><span class=\"line\">若表中有两条以上规则具有相同的动作，并且在条件项之间存在极为相似的关系，便可以合并。合并后的条件项用符号——表示，说明执行的动作与该条件的取值无关，称为无关条件。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;三角形问题决策表&quot; 例题见《软件测试技术》（第二版）**P102**</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.5. 错误推测法</span><br><span class=\"line\">错误推测法的概念：基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例的方法。</span><br><span class=\"line\"></span><br><span class=\"line\">错误推测的基本思想：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">### 10.3. 白盒测试概念</span><br><span class=\"line\">白盒测试就是一种用于检查代码是否按照预期工作的验证技术，又称结构测试、逻辑驱动测试或基于程序的测试。白盒测试的主要特点就是正对被测程序的源代码，测试者可能完全不考虑程序的功能。</span><br><span class=\"line\"></span><br><span class=\"line\">### 10.4. 白盒测试用例设计</span><br><span class=\"line\">常用的白盒测试用例设计方法主要有以下几中：逻辑覆盖测试、边界值测试、基本路径测试、循环语句测试、程序插桩测试、数据流测试、变异测试。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.4.1 逻辑覆盖测试</span><br><span class=\"line\"></span><br><span class=\"line\">|类型|定义|</span><br><span class=\"line\">|:-|:-|</span><br><span class=\"line\">|语句覆盖|程序中的每个可执行语句至少执行一次|</span><br><span class=\"line\">|判定覆盖|程序中每个判定的取真分支和取假分支的情况至少经历一次，即判断的真假值均曾被满足|</span><br><span class=\"line\">|条件覆盖|要使每个判断中每个条件的可能取值至少满足一次|</span><br><span class=\"line\">|判定-条件覆盖|使得判断中每个条件的所有可能至少出现一次，并且每个判断判定结果也至少出现一次|</span><br><span class=\"line\">|路径覆盖|测试用例覆盖程序中所有可能的路径|</span><br><span class=\"line\"></span><br><span class=\"line\">```C</span><br><span class=\"line\">IF((A &gt; 1) AND (B = 0) THEN</span><br><span class=\"line\">    X=X/A</span><br><span class=\"line\">IF((A = 2) OR (X &gt; 1) THEN</span><br><span class=\"line\">    X=X+1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sta=&gt;start: Start</span><br><span class=\"line\">cond1=&gt;condition: (A&gt;1) AND (B=0)</span><br><span class=\"line\">cond2=&gt;condition: (A=2) OR (X&gt;1)</span><br><span class=\"line\">io1=&gt;operation: X=X/A</span><br><span class=\"line\">io2=&gt;operation: X=X+1</span><br><span class=\"line\"></span><br><span class=\"line\">e=&gt;end: End</span><br><span class=\"line\"></span><br><span class=\"line\">sta-&gt;cond1(yes)-&gt;io1-&gt;cond2(yes)-&gt;io2-&gt;e</span><br><span class=\"line\">sta-&gt;cond1(no,left)-&gt;cond2(no,left)-&gt;e</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"10-4-2-边界值分析\"><a href=\"#10-4-2-边界值分析\" class=\"headerlink\" title=\"10.4.2. 边界值分析\"></a>10.4.2. 边界值分析</h4><p>等价类划分和边界值分析为软件测试提供了一种设计白盒测试用例的策略。</p>\n<h4 id=\"10-4-3-基本路径测试\"><a href=\"#10-4-3-基本路径测试\" class=\"headerlink\" title=\"10.4.3. 基本路径测试\"></a>10.4.3. 基本路径测试</h4><h4 id=\"10-4-4-循环语句测试\"><a href=\"#10-4-4-循环语句测试\" class=\"headerlink\" title=\"10.4.4 循环语句测试\"></a>10.4.4 循环语句测试</h4><h4 id=\"10-4-5-插桩测试\"><a href=\"#10-4-5-插桩测试\" class=\"headerlink\" title=\"10.4.5 插桩测试\"></a>10.4.5 插桩测试</h4><h4 id=\"10-4-6-数据流测试\"><a href=\"#10-4-6-数据流测试\" class=\"headerlink\" title=\"10.4.6 数据流测试\"></a>10.4.6 数据流测试</h4><h4 id=\"10-4-7-变异测试\"><a href=\"#10-4-7-变异测试\" class=\"headerlink\" title=\"10.4.7 变异测试\"></a>10.4.7 变异测试</h4>","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><input checked disabled type=\"checkbox\"> 软件测试常用的概念，常用的分类，测试的目的，方法等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试静态测试的概念，技术，分类，执行过程，涉及的活动，测试的对象等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试的模型分类，个各模型的特点，适用场景，规划的阶段及其关系，表达的图形等</li>\n<li><input checked disabled type=\"checkbox\"> 面向对象的软件测试概念，与软件开发以及普通测试的关系等</li>\n<li><input checked disabled type=\"checkbox\"> 集成测试、系统测试的概念，划分的阶段，先后执行的顺序，输入、输出成果物等</li>\n<li><input checked disabled type=\"checkbox\"> 黑盒测试、白盒测试的概念，常用的方法，测试用例的设计过程，以及执行的过程如何实施等</li>\n<li><input checked disabled type=\"checkbox\"> 等价类划分、边界值测试、三明治集成测试等概念、用例设计、实施过程</li>\n<li><input checked disabled type=\"checkbox\"> 因果图法的概念，用例设计，执行步骤等</li>\n<li><input checked disabled type=\"checkbox\"> 基本路径测试法概念，用例设计过程，实施执行过程等（控制流图画法、环形复杂度计算、基本路径获取、用例设计及执行等）</li>\n<li><input checked disabled type=\"checkbox\"> 单元测试的概念，主要任务，使用的方法等</li>\n<li><input checked disabled type=\"checkbox\"> 软件测试与调试的区别与联系，软件缺陷的概念及其相关知识</li>\n</ul>\n<!-- ttoc -->\n\n<h2 id=\"1-软件测试\"><a href=\"#1-软件测试\" class=\"headerlink\" title=\"1. 软件测试\"></a>1. 软件测试</h2><h3 id=\"1-1-软件测试概念\"><a href=\"#1-1-软件测试概念\" class=\"headerlink\" title=\"1.1 软件测试概念\"></a>1.1 软件测试概念</h3><ol>\n<li>IEEE 在1983年将软件测试定义为“使用人工或者自动化手段运行或测定某个系统的过程，其目的在于检验他是否满足规定的需求或者是弄清预期结果与实际结果之间的差别“，该定义明确地提出了软件测试以检验是否为目标。</li>\n<li>Myers则认为软件测试“是为了发现错误而执行的程序过程”，明确提出了“寻找错误”是测试目的。</li>\n<li>从软件质量保证的角度看，软件测试是一种重要的软件质量保证活动，其动机是通过一些经济、高效的方法，捕捉软件中的错误，从而达到保证软件内在质量的目的。</li>\n</ol>\n<h3 id=\"1-2-软件测试目的\"><a href=\"#1-2-软件测试目的\" class=\"headerlink\" title=\"1.2. 软件测试目的\"></a>1.2. 软件测试目的</h3><ul>\n<li>软件测试是为了发现错误而执行程序的过程</li>\n<li>测试是为了证明程序有错，而不是证明程序无错</li>\n<li>一个好的测试用例在于他能发现至今未发现的错误</li>\n<li>一个成功的测试是发现了至今未发现的错误的测试</li>\n</ul>\n<h3 id=\"1-3-软件测试技术分类\"><a href=\"#1-3-软件测试技术分类\" class=\"headerlink\" title=\"1.3. 软件测试技术分类\"></a>1.3. 软件测试技术分类</h3><table>\n<thead>\n<tr>\n<th>分类方法</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>从是否需要执行被测软件的角度</td>\n<td>静态测试、动态测试</td>\n</tr>\n<tr>\n<td>从软件测试用例实际方法</td>\n<td>黑盒测试、白盒测试</td>\n</tr>\n<tr>\n<td>按照软件测试的策略和过程</td>\n<td>单元测试、集成测试、确认测试、系统测试、验收测试</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-静态测试\"><a href=\"#2-静态测试\" class=\"headerlink\" title=\"2 静态测试\"></a>2 静态测试</h2><h3 id=\"2-1-静态测试概念\"><a href=\"#2-1-静态测试概念\" class=\"headerlink\" title=\"2.1. 静态测试概念\"></a>2.1. 静态测试概念</h3><p>那些不利用计算机运行被测程序，而是通过其他手段达到测试目的的方法称作静态测试。换句话说，就是计算机并不真正运行被测试的程序，如在项目开发中存在着大量的规格说明，而说明规格是无法用计算机来运行的，所以对于这些软件的规格说明的测试就属于静态测试。</p>\n<h3 id=\"2-2-静态测试主要方法\"><a href=\"#2-2-静态测试主要方法\" class=\"headerlink\" title=\"2.2. 静态测试主要方法\"></a>2.2. 静态测试主要方法</h3><ul>\n<li><p>主要方法：<strong>代码检查、走查、桌面检查、同行评分</strong></p>\n<ul>\n<li><p><strong>代码检查</strong>: 所谓代码检查，是以组为单位阅读代码，他是一系列规则和错误检查技术的集合。对代码检查的大多数讨论都集中在规程、所要填写的表格等。这里对整个规程进行简短的概述。</p>\n<ul>\n<li>为代码检查分发材料、安排进程</li>\n<li>在代码检查中起主要作用</li>\n<li>记录发现的所有错误</li>\n<li>确保所有错误能够及时得到修正</li>\n</ul>\n</li>\n<li><p><strong>代码走查</strong>：代码走查与代码检查很相似，都是以小组我单位进行代码阅读，是一系列规程和错误检查技术的集合。代码走查的过程与代码检查大体相同，代码走查也是采用持续一至两个小时的不间断会议的形式。但是稍微所有不同，采用的错误检查技术也不一样。<br>代码走查小组有3~5人组成，其中一个人扮演类似代码检查过程中“协调人员”的角色，一个人担任秘书（负责记录所有查出的错误），还有一个人担任测试人员。建议在代码走查小组这最好包括如下人员：<br>（1）一位经验丰富的程序员；<br>（2）一位程序设计语言专家；<br>（3）一位初级程序员（可以给出新颖、不带偏见的观点）；<br>（4）将要负责程序维护的人员<br>（5）一位其他项目的人员<br>（6）一位来自该软件编程小组的程序员</p>\n</li>\n<li><p><strong>桌面检查</strong>: 可以把桌面检查看作是由个人进行的代码检查或代码走查，即一个人阅读程序，对照错误列表检查程序，使用测试数据对程序进行推演。对于大多数人而言，桌面检查的效率是相当低的。其中的一个原因就是这个过程本身不受到任何约束。另外一个重要原因就是程序员常常不能够有效地测试自己编写的程序。因此最好由其他人而非该程序的编写人员进行桌面检查（例如可以让程序员之间相互交换各自编写的程序，避免自己对自己编写的程序进行桌面检查）。但是使用桌面检查的方法进行软件测试所得到的效果无法同代码走查或代码检查相比。代码检查和代码走查小组由多人组成，能够产生相互促进的效应。如果小组会议能够营造一种良性竞争的气氛，那么工作人员就能够乐于通过发现问题来展示自己的能力。而在桌面检查中，是无法做到这一点的。简而言之，桌面检查胜过没有检查，但测试效果远远不能同代码检查和代码走查相比。</p>\n</li>\n<li><p><strong>同行评分</strong>：虽然这种人工评审方法的目的是为了程序员提供一个自我评价的手段，与程序测试并无关系（其目标不是为了发现错误）。但是因为他与代码阅读的思想有关，是一种依据程序整体质量、可维护性、可扩展性、易用行和清晰性对匿名程序进行评价的技术。因此，有必要对其进行简单的了解。大致过程如下：首先挑选一位程序员担任评分过程的管理员，管理员再挑选出大约6~20名具备相似背景的参与者（例如，不同把Java应用程序员与汇编语言系统程序员编为一组）。每个参与者都提供两者由自己编写的程序以供评审，其中的一个程序是能代表参与者自身能力的最好作品，而另一个就是参与者认为质量较差的作品。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-软件测试与调试的区别与联系\"><a href=\"#3-软件测试与调试的区别与联系\" class=\"headerlink\" title=\"3. 软件测试与调试的区别与联系\"></a>3. 软件测试与调试的区别与联系</h2><p>白盒测试与调试的最终目的都是为了让被测应用(AUT)可以正常安全地运行，都是保证软件质量过程的一个环节。那么，白盒测试与调试有哪些不同呢？</p>\n<p>从承担的任务来看，白盒测试同其他类型测试一样，他的任务是发现所开发的项目中的缺陷；但是，调试不属于测试，其任务是纠正软件中的缺陷。</p>\n<p>从最终的结果来看，白盒测试有预知的结果，不可预知的知识程序是否通过测试，并且成功测试的结果是发现错误的症状，从而引起调试的进行；而调试的结果是消除项目中的错误。</p>\n<p>从执行的过程来看，软件测试只是发现程序中有错误的迹象，没有错误定位，也不需要找到出错原因；软件调试是根据测试报告的记录，在软件测试后纠正错误的工作，包括确定错误位置和修改错误。测试是一个错误发现、改正错误、重新测试的过程；而调试是一个推理过程。</p>\n<p>从准备工作来看，测试从已知的调试开始，使用预先定义的程序；调试是以不可知的内部条件开始，做统一性调试。</p>\n<p>从执行的计划性来看，测试是有计划的并要进行测试设计；而调试则不受时间约束。</p>\n<p>从测试的执行人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。</p>\n<p>测试的执行是有规程的，而调试的执行往往要求程序员进行必要推理以至知觉的“飞跃”。</p>\n<p>从执行的人员来看，测试经常是由独立的测试组在不了解软件设计的条件下完成的，而调试必须由程序员来完成。</p>\n<p>从所使用的工具来看，大多数白盒测试的执行和设计可由工具支持，而调试程序员能利用的工具主要是调试器。</p>\n<h2 id=\"4-软件缺陷的概念\"><a href=\"#4-软件缺陷的概念\" class=\"headerlink\" title=\"4. 软件缺陷的概念\"></a>4. 软件缺陷的概念</h2><ol>\n<li>软件没有实现产品的说明书所描述的功能。</li>\n<li>软件实现了产品说明书描述不应有的功能。</li>\n<li>软件执行了产品说明书没讲的操作。</li>\n<li>软件没有实现产品说明书没讲但应该实现的功能。</li>\n<li>从软件测试员的角度来看，软件难以理解、不易使用、运行缓慢，或者最终用户认为不对。</li>\n</ol>\n<h2 id=\"5-单元测试\"><a href=\"#5-单元测试\" class=\"headerlink\" title=\"5. 单元测试\"></a>5. 单元测试</h2><h3 id=\"5-1-单元测试定义\"><a href=\"#5-1-单元测试定义\" class=\"headerlink\" title=\"5.1. 单元测试定义\"></a>5.1. 单元测试定义</h3><p>单元测试是在软件开发过程中要进行的最低级别的测试活动，或者说是针对软件设计的最小单位—程序模块，进行正确性检查的测试工作。其目的在于发现每个程序模块内部可能存在的差错。在单元测试活动中，软件的独立单元在与程序的其他部分相隔离的情况下进行测试。</p>\n<h3 id=\"5-2-单元测试主要任务\"><a href=\"#5-2-单元测试主要任务\" class=\"headerlink\" title=\"5.2. 单元测试主要任务\"></a>5.2. 单元测试主要任务</h3><p>主要工作分为两个步骤：人工静态检查和动态执行跟踪。前者主要是保证代码算法的逻辑正确性（尽量通过人工检查发现代码的逻辑错误）、清晰性、规范性、一致性、算法高效性，并尽可能地发现程序程序中没有发现的错误。后者就是通过设计测试用例，执行待测程序来跟踪比较实际结果与预期结果来发现错误。</p>\n<pre><code>（1）正确性是指代码逻辑必须正确，能够实现预期的功能\n（2）清晰性是指代码必须简明、易懂，注释准确没有歧义；\n（3）规范性是指代码必须符合企业或部门所定义的共同规范，包括命名规则，代码风格\n（4）一致性是指代码必须在命名上（如相同功能的变量尽量采用相同的标示符）、风格上都保持统一；\n（5）高效性是指代码不但要满足以上性质，而且需要尽可能降低代码的执行时间。</code></pre><h3 id=\"5-3-单元测试使用方法\"><a href=\"#5-3-单元测试使用方法\" class=\"headerlink\" title=\"5.3. 单元测试使用方法\"></a>5.3. 单元测试使用方法</h3><p>基于代码的白盒测试</p>\n<h2 id=\"6-集成测试\"><a href=\"#6-集成测试\" class=\"headerlink\" title=\"6. 集成测试\"></a>6. 集成测试</h2><h3 id=\"6-1-集成测试定义\"><a href=\"#6-1-集成测试定义\" class=\"headerlink\" title=\"6.1 集成测试定义\"></a>6.1 集成测试定义</h3><p>根据实际情况对成语模块采用适当的集成测试策略组装起来，对系统接口以及集成后的功能进行正确性检验的测试工作。</p>\n<h3 id=\"6-2-集成测试策略\"><a href=\"#6-2-集成测试策略\" class=\"headerlink\" title=\"6.2 集成测试策略\"></a>6.2 集成测试策略</h3><h4 id=\"6-2-1-三明治集成\"><a href=\"#6-2-1-三明治集成\" class=\"headerlink\" title=\"6.2.1 三明治集成\"></a>6.2.1 三明治集成</h4><pre><code>（1）目的：综合利用自顶向下和自底向上两种集成测试策略的优点\n（2）定义：三明治集成是一种混合增值式测试策略，综合了自顶向下和自顶向上两种集成方法的优点，因此也属于基于功能分解测试。</code></pre><h3 id=\"6-3-集成测试过程\"><a href=\"#6-3-集成测试过程\" class=\"headerlink\" title=\"6.3 集成测试过程\"></a>6.3 集成测试过程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title 集成测试过程</span><br><span class=\"line\">    制定集成测试计划: a,1d</span><br><span class=\"line\">    设计集成测试: 1d</span><br><span class=\"line\">    实施集成测试: 1d</span><br><span class=\"line\">    执行集成测试: 1d</span><br><span class=\"line\">    评估集成测试: 1d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-系统测试\"><a href=\"#7-系统测试\" class=\"headerlink\" title=\"7. 系统测试\"></a>7. 系统测试</h2><h3 id=\"7-1-系统测试的定义\"><a href=\"#7-1-系统测试的定义\" class=\"headerlink\" title=\"7.1. 系统测试的定义\"></a>7.1. 系统测试的定义</h3><p>将已经集成好的软件系统，作为整个计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行（使用）环境下，对计算机系统进行一系列的组装测试和确认测试。</p>\n<h4 id=\"7-2-集成测试过程\"><a href=\"#7-2-集成测试过程\" class=\"headerlink\" title=\"7.2. 集成测试过程\"></a>7.2. 集成测试过程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    title 系统测试过程</span><br><span class=\"line\">        制定系统测试计划: a,1d</span><br><span class=\"line\">        设计系统测试: 1d</span><br><span class=\"line\">        实施系统测试: 1d</span><br><span class=\"line\">        执行系统测试: 1d</span><br><span class=\"line\">        评估系统测试: 1d</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">## 8. 软件测试模型</span><br><span class=\"line\">### 8.1. V模型</span><br><span class=\"line\">      用户需求                      验收测试  </span><br><span class=\"line\">        需求分析和系统设计      确认测试和系统测试 </span><br><span class=\"line\">             概要设计         集成测试</span><br><span class=\"line\">                详细设计   单元测试</span><br><span class=\"line\">                       编码</span><br><span class=\"line\">                       </span><br><span class=\"line\">经典的V模型阶段可以分为</span><br><span class=\"line\"></span><br><span class=\"line\">* 单元测试</span><br><span class=\"line\">* 集成测试</span><br><span class=\"line\">* 系统测试</span><br><span class=\"line\"></span><br><span class=\"line\">**模型特点**：V模型的价值主要在于他非常明确地标明了测试过程中存在的不同级别，并且清楚地描述了这些测试阶段和开发过程期间的对应关系:</span><br><span class=\"line\"></span><br><span class=\"line\">* 单元测试的主要目的是根据详细设计说明书来验证和确认每个单元模块是否符合预期的要求，发现编码过程中可能存在的各种错误。</span><br><span class=\"line\">* 集成测试主要目的是根据概要设计来验证和确认各个模块是否已正确集成到一起，主要是检查各单元与其他模块之间的接口上可能存在的错误。</span><br><span class=\"line\">* 系统测试主要目的是根据需求定义，验证和确认系统作为一个整体是否能够正常有效地运行，例如，判断系统是否达到了用户预期的性能。</span><br><span class=\"line\"></span><br><span class=\"line\">### 8.2. W模型</span><br><span class=\"line\">W模型中测试与开发对应关系如下：</span><br><span class=\"line\">开发：需求分析、概要设计、　　详细设计、　　编码、　　软件集成、系统集成、部署</span><br><span class=\"line\">　　　　　↑　　　　↑　　　　　　　↑　　　　　↑　　　　　　↑　　　　↑　　　↑</span><br><span class=\"line\">测试：需求评审、概要设计评审、详细设计评审、单元测试、集成测试、系统测试、验收测试</span><br><span class=\"line\"></span><br><span class=\"line\">W模型强调：测试伴随着整个软件开发周期，而且测试的对象不仅仅是程序，需求、设计等同样要测试，也就是说，测试与开发是同步进行的。W模型有利于尽早地全面的发现问题。例如，需求分析完成后，测试人员就应该参与到对需求的验证和确认活动中，以尽早地找出缺陷所在。同时，对需求的测试也有利于及时了解项目难度和测试风险，及早制定应对措施，这将显著减少总体测试时间，加快项目进度。 但W模型也存在局限性。在W模型中，需求、设计、编码等活动被视为串行的，同时，测试和开发活动也保持着一种线性的前后关系，上一阶段完全结束，才可正式开始下一个阶段工作。这样就无法支持迭代的开发模型。对于当前软件开发复杂多变的情况，W模型并不能解除测试管理面临着困惑。</span><br><span class=\"line\"></span><br><span class=\"line\">### 8.3. H模型</span><br><span class=\"line\">在H模型中，软件测试的过程活动完全独立，形成了一个完全独立的流程，贯穿于整个产品的周期，与其他流程并发进行，某个测试点准备就绪后就可以从测试准备阶段进行到测试执行阶段；软件测试可以根据被测产品的不同分层进行。</span><br><span class=\"line\"></span><br><span class=\"line\">H模型揭示了：</span><br><span class=\"line\">    （1）软件测试不仅仅指测试的执行，还包括很多其他活动。</span><br><span class=\"line\">    （2）软件测试是一个独立的流程，贯穿产品的整个开发周期，与其他流程并发进行。</span><br><span class=\"line\">    （3）软件测试要尽早准备，尽早执行。</span><br><span class=\"line\">    （4）软件测试根据被测物的不同是分层次的，不同层次的测试活动可以是按照某个次序先后进行的，但也可能是反复的。</span><br><span class=\"line\">    </span><br><span class=\"line\">## 9. 面向对象测试</span><br><span class=\"line\">### 9.1.1 面向对象测试基本概念</span><br><span class=\"line\">面向软件测试技术是新兴的软件测试技术，是专门针对使用面向对象技术开发的软件而提出的一种测试技术。其目的是为了解决传统的软件测试技术，面对面向对象技术开发的软件多少显得有些力不从心的现象。面向对象开发技术和传统的开发技术相比，新增了多态、继承、封装等特点。这些新特点使得开发出来的程序，具有更好的结构更规范的编程风格, 极大地优化了数据使用的安全性, 提高了代码的重用率。由此可见，它们是面向对象开发技术产生巨大吸引力的重要因素。然而，另一方面也影响了软件测试的方法和内容；增加了软件测试的难度；带来了传统软件设计技术所不存在的错误；或者使得传统软件测试中的重点不再显得突出；或者使原来测试经验认为和实践证明的次要方面成为了主要问题。</span><br><span class=\"line\"></span><br><span class=\"line\">## 10. 黑白盒测试</span><br><span class=\"line\">### 10.1. 黑盒测试概念</span><br><span class=\"line\">黑盒测试也称作功能测试和行为测试，主要是根据功能需求来测试程序是否按照预期工作。黑盒测试的目的是尽量发现代码所表现的外部行为的错误，主要有以下几类：</span><br><span class=\"line\"></span><br><span class=\"line\">    （1）功能不正确或不完整；</span><br><span class=\"line\">    （2）接口错误；</span><br><span class=\"line\">    （3）接口所使用的数据结构错误；</span><br><span class=\"line\">    （4）行为或性能错误；</span><br><span class=\"line\">    （5）初始化和终止错误。</span><br><span class=\"line\">    </span><br><span class=\"line\">### 10.2. 黑盒测试用例设计</span><br><span class=\"line\">常用的黑盒测试用例设计方法主要有以下几中：等价类划分法、边界值分析法、因果图法、决策表法和错误推测法等方法。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.1. 等价类划分法</span><br><span class=\"line\">等价类划分法是一种重要的、常用的黑盒测试方法，它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有完整性和代表性。</span><br><span class=\"line\"></span><br><span class=\"line\">等价类划分法：是把所有可能的输入数据，即程序的输入域划分为若干部分（子集），然后从每一个子集中选取少数具有代表的数据作为测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">等价类：指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的，它们具有等价特性，即每一类的代表性数据在测试中的作用都等价于这一类中的其他数据。这样，对于表特征该类的数据输入将能代表这个子集合的输入。因此，可以合理地假定：测试某等价类的代表值等效于对于这类其他值的测试。</span><br><span class=\"line\"></span><br><span class=\"line\">“保险公司绩保费费率的程序”例题见《软件测试技术》(第二版) **P91**。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.2. 边界值分析法</span><br><span class=\"line\">边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为等价类划分方法的补充，在这个情况下，其测试用例来自等价类的边界。</span><br><span class=\"line\"></span><br><span class=\"line\">边界值分析使用与等价类划分方法相同的划分，只是边界值分析假定错误更多地存在于划分的边界上，因此在等价类的边界上以及两侧的情况设计测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">例题：</span><br><span class=\"line\">$$有二元函数 f(x,y), 其中x\\in[1,12],y\\in[1,31];则采用边界值分析法设计的测试用例是:$$</span><br><span class=\"line\"></span><br><span class=\"line\">                &#123;&lt;1,15&gt;;&lt;2,15&gt;;&lt;11,15&gt;;&lt;11,15&gt;;&lt;12,15&gt;;&lt;6,15&gt;;&lt;6,1&gt;;&lt;6,2&gt;;&lt;6,30&gt;;&lt;6,31&gt;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"> 推论：对于一个含有n个变量的程序，采用边界值分析法测试程序会产生 4n+1 个测试用例.</span><br><span class=\"line\">            </span><br><span class=\"line\">#### 10.2.3. 因果图法</span><br><span class=\"line\">一些程序的功能可以用判定表（或称决策表）的形式来表示，并根据输入条件的组合情况规定相应的操作。因果图法就是一种利用图解法分析输入的各种组合情况，从而设计测试用例的方法，它适合于检查程序输入条件的各种组合情况。</span><br><span class=\"line\"></span><br><span class=\"line\">采用因果图法设计测试用例的步骤：</span><br><span class=\"line\"></span><br><span class=\"line\">    （1）列出模块的原因（输入条件）和效果（动作），且给每个原因和效果一个标识符；</span><br><span class=\"line\">    （2）列出原因——效果图；</span><br><span class=\"line\">    （3）由于语法或环境的限制，有些原因和结果的组合情况是不可能出现的。为表明这些特定情况，在因果图上使用特殊的符号标明约束条件；</span><br><span class=\"line\">    （4）把因果图转换成判定表；</span><br><span class=\"line\">    （5）把判定表的每一列写成一个测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">“因果图法” 例题见《软件测试技术》(第二版) **P100**。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.4. 决策表法</span><br><span class=\"line\">在所有的黑盒测试中，机遇决策表（也称判定表）的测试是最为严格、最具有逻辑性的测试方法。</span><br><span class=\"line\"></span><br><span class=\"line\">构造决策表的 4 个步骤：</span><br><span class=\"line\">    </span><br><span class=\"line\">    （1）确定规则的个数，有 n 个条件的决策表有 2^n 个规则（每个条件取真、假值）；</span><br><span class=\"line\">    （2）列出所有的条件桩和动作桩</span><br><span class=\"line\">    （3）填入动作项，得到初始决策表；</span><br><span class=\"line\">    （4）简化决策表，合并相似规则。</span><br><span class=\"line\">    </span><br><span class=\"line\">若表中有两条以上规则具有相同的动作，并且在条件项之间存在极为相似的关系，便可以合并。合并后的条件项用符号——表示，说明执行的动作与该条件的取值无关，称为无关条件。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;三角形问题决策表&quot; 例题见《软件测试技术》（第二版）**P102**</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.2.5. 错误推测法</span><br><span class=\"line\">错误推测法的概念：基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例的方法。</span><br><span class=\"line\"></span><br><span class=\"line\">错误推测的基本思想：列举出程序中所有可能有的错误和容易发生错误的特殊情况，根据他们选择测试用例。</span><br><span class=\"line\"></span><br><span class=\"line\">### 10.3. 白盒测试概念</span><br><span class=\"line\">白盒测试就是一种用于检查代码是否按照预期工作的验证技术，又称结构测试、逻辑驱动测试或基于程序的测试。白盒测试的主要特点就是正对被测程序的源代码，测试者可能完全不考虑程序的功能。</span><br><span class=\"line\"></span><br><span class=\"line\">### 10.4. 白盒测试用例设计</span><br><span class=\"line\">常用的白盒测试用例设计方法主要有以下几中：逻辑覆盖测试、边界值测试、基本路径测试、循环语句测试、程序插桩测试、数据流测试、变异测试。</span><br><span class=\"line\"></span><br><span class=\"line\">#### 10.4.1 逻辑覆盖测试</span><br><span class=\"line\"></span><br><span class=\"line\">|类型|定义|</span><br><span class=\"line\">|:-|:-|</span><br><span class=\"line\">|语句覆盖|程序中的每个可执行语句至少执行一次|</span><br><span class=\"line\">|判定覆盖|程序中每个判定的取真分支和取假分支的情况至少经历一次，即判断的真假值均曾被满足|</span><br><span class=\"line\">|条件覆盖|要使每个判断中每个条件的可能取值至少满足一次|</span><br><span class=\"line\">|判定-条件覆盖|使得判断中每个条件的所有可能至少出现一次，并且每个判断判定结果也至少出现一次|</span><br><span class=\"line\">|路径覆盖|测试用例覆盖程序中所有可能的路径|</span><br><span class=\"line\"></span><br><span class=\"line\">```C</span><br><span class=\"line\">IF((A &gt; 1) AND (B = 0) THEN</span><br><span class=\"line\">    X=X/A</span><br><span class=\"line\">IF((A = 2) OR (X &gt; 1) THEN</span><br><span class=\"line\">    X=X+1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sta=&gt;start: Start</span><br><span class=\"line\">cond1=&gt;condition: (A&gt;1) AND (B=0)</span><br><span class=\"line\">cond2=&gt;condition: (A=2) OR (X&gt;1)</span><br><span class=\"line\">io1=&gt;operation: X=X/A</span><br><span class=\"line\">io2=&gt;operation: X=X+1</span><br><span class=\"line\"></span><br><span class=\"line\">e=&gt;end: End</span><br><span class=\"line\"></span><br><span class=\"line\">sta-&gt;cond1(yes)-&gt;io1-&gt;cond2(yes)-&gt;io2-&gt;e</span><br><span class=\"line\">sta-&gt;cond1(no,left)-&gt;cond2(no,left)-&gt;e</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"10-4-2-边界值分析\"><a href=\"#10-4-2-边界值分析\" class=\"headerlink\" title=\"10.4.2. 边界值分析\"></a>10.4.2. 边界值分析</h4><p>等价类划分和边界值分析为软件测试提供了一种设计白盒测试用例的策略。</p>\n<h4 id=\"10-4-3-基本路径测试\"><a href=\"#10-4-3-基本路径测试\" class=\"headerlink\" title=\"10.4.3. 基本路径测试\"></a>10.4.3. 基本路径测试</h4><h4 id=\"10-4-4-循环语句测试\"><a href=\"#10-4-4-循环语句测试\" class=\"headerlink\" title=\"10.4.4 循环语句测试\"></a>10.4.4 循环语句测试</h4><h4 id=\"10-4-5-插桩测试\"><a href=\"#10-4-5-插桩测试\" class=\"headerlink\" title=\"10.4.5 插桩测试\"></a>10.4.5 插桩测试</h4><h4 id=\"10-4-6-数据流测试\"><a href=\"#10-4-6-数据流测试\" class=\"headerlink\" title=\"10.4.6 数据流测试\"></a>10.4.6 数据流测试</h4><h4 id=\"10-4-7-变异测试\"><a href=\"#10-4-7-变异测试\" class=\"headerlink\" title=\"10.4.7 变异测试\"></a>10.4.7 变异测试</h4>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjwc93s5s00003tl37m3beggt","category_id":"cjwc93s6500033tl3maz5ahly","_id":"cjwc93s6c00083tl3jb5biul6"},{"post_id":"cjwc93s5z00023tl3ai990rfh","category_id":"cjwc93s6500033tl3maz5ahly","_id":"cjwc93s6e000a3tl34dskzgx8"},{"post_id":"cjwc93s6600043tl33lo52mht","category_id":"cjwc93s6500033tl3maz5ahly","_id":"cjwc93s6f000b3tl38190fjfy"},{"post_id":"cjwc93s6800053tl38ek5tprg","category_id":"cjwc93s6e00093tl3vzy7afxj","_id":"cjwc93s6f000c3tl38nzjjshc"},{"post_id":"cjwc93sbt000d3tl33i62bgsh","category_id":"cjwc93sby000e3tl3yknv4acc","_id":"cjwc93sc3000f3tl3qd6zmiaa"},{"post_id":"cjwc93sdd000g3tl39z94si78","category_id":"cjwc93sde000h3tl3047jo8yk","_id":"cjwc93sdg000i3tl34t7kt64h"}],"PostTag":[],"Tag":[]}}